# WordPress MySQL database migration
#
# Generated: Thursday 4. September 2014 19:27 UTC
# Hostname: localhost
# Database: `wp_railsvitamins`
# --------------------------------------------------------

/*!40101 SET NAMES utf8 */;

SET sql_mode='NO_AUTO_VALUE_ON_ZERO';



#
# Delete any existing table `wp_commentmeta`
#

DROP TABLE IF EXISTS `wp_commentmeta`;


#
# Table structure of table `wp_commentmeta`
#

CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`),
  KEY `disqus_dupecheck` (`meta_key`,`meta_value`(11))
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_commentmeta`
#
INSERT INTO `wp_commentmeta` ( `meta_id`, `comment_id`, `meta_key`, `meta_value`) VALUES
(1, 11, '_wp_trash_meta_status', '0'),
(2, 10, '_wp_trash_meta_status', '0'),
(3, 9, '_wp_trash_meta_status', '0'),
(4, 8, '_wp_trash_meta_status', '0'),
(5, 7, '_wp_trash_meta_status', '0'),
(6, 6, '_wp_trash_meta_status', '0') ;

#
# End of data contents of table `wp_commentmeta`
# --------------------------------------------------------



#
# Delete any existing table `wp_comments`
#

DROP TABLE IF EXISTS `wp_comments`;


#
# Table structure of table `wp_comments`
#

CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_comments`
#
INSERT INTO `wp_comments` ( `comment_ID`, `comment_post_ID`, `comment_author`, `comment_author_email`, `comment_author_url`, `comment_author_IP`, `comment_date`, `comment_date_gmt`, `comment_content`, `comment_karma`, `comment_approved`, `comment_agent`, `comment_type`, `comment_parent`, `user_id`) VALUES
(1, 42, 'Nick Meagher', 'nickme@gher.com', 'http://www.icepick.co', '173.74.33.52', '2014-08-05 00:53:00', '2014-08-05 05:53:00', 'Nice article, I\'d like to learn more about branches and remotes!', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:31.0) Gecko/20100101 Firefox/31.0', '', 0, 0),
(2, 42, 'Ty Richards', 'me@tyrichards.com', '', '23.114.57.72', '2014-08-05 08:37:30', '2014-08-05 13:37:30', 'It\'s on the list! Thanks for the feedback.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', '', 1, 1),
(3, 42, 'Ty Richards', 'me@tyrichards.com', '', '23.114.57.72', '2014-08-07 07:59:13', '2014-08-07 12:59:13', 'Hey Nick, just posted <a href="http://dev.dorails.com/hop-on-the-github-bandwagon/" rel="nofollow">Hop on the Github bandwagon</a>, which is a short intro to basic remotes. I will cover more advanced git remotes soon too.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', '', 2, 1),
(4, 88, 'Milan Dobrota', 'milan@milandobrota.com', 'http://blog.milandobrota.com', '98.224.229.51', '2014-08-07 13:49:37', '2014-08-07 18:49:37', 'You can also hire someone to teach you Rails. I think that\'s the most effective option.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36 OPR/23.0.1522.60', '', 0, 0),
(5, 88, 'Ty Richards', 'me@tyrichards.com', '', '64.134.157.250', '2014-08-08 10:33:23', '2014-08-08 15:33:23', 'Agreed! Having a mentor/coach to show you their workflow or just watching someone experienced work will give you a huge jump that hours of schools/books will never accomplish. I found some options on Pat Maddox\'s blog post: http://patmaddox.com/2014/08/05/company-sponsored-learning/\n\nHe mentioned these:\n\n   <ul>\n	<li>Pluralsight PLUS – $49/mo or $499/yr</li>\n\n	<li>Thoughtbot 1-on-1 coaching – $249/mo</li>\n\n	<li>PragStudio Ruby – $179</li>\n\n	<li>PragStudio Rails Level 1 – $179</li>\n\n	<li>PragStudio Rails Level 2 – $179</li>\n\n	<li>RailsCasts Pro – $9/mo</li>\n\n	<li>Rails tutorial full package – $149</li>\n\n	<li>NewCircle ROR bootcamp – $2375</li>\n\n</ul>', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', '', 4, 1),
(6, 73, 'Marian', 'christineseaver@yahoo.com', 'http://Jennifer.edublogs.org', '123.150.215.70', '2014-08-11 20:31:12', '2014-08-12 01:31:12', 'I had problems to find your articles in google search results.\r\nI found it on 21 position, you should build a lot of high authority social backlinks , it will help you to get more visitors.\r\nI know how to help your site, just search in google - k2 seo tips', 0, 'spam', 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36', '', 0, 0),
(7, 73, 'seo plugin', 'rllvel@gmail.com', 'http://www.SeoOptimizedRankings.com/', '192.99.141.252', '2014-08-13 19:30:51', '2014-08-14 00:30:51', 'Hello Web Admin, I noticed that your On-Page SEO is is missing a few factors, for one you do not use all three H tags in your post, also I notice that you are not using bold or italics properly in your SEO optimization. On-Page SEO means more now than ever since the new Google update: Panda. No longer are backlinks and simply pinging or sending out a RSS feed the key to getting Google PageRank or Alexa Rankings, You now NEED On-Page SEO. So what is good On-Page SEO?First your keyword must appear in the title.Then it must appear in the URL.You have to optimize your keyword and make sure that it has a nice keyword density of 3-5% in your article with relevant LSI (Latent Semantic Indexing). Then you should spread all H1,H2,H3 tags in your article.Your Keyword should appear in your first paragraph and in the last sentence of the page. You should have relevant usage of Bold and italics of your keyword.There should be one internal link to a page on your blog and you should have one image with an alt tag that has your keyword....wait there\'s even more Now what if i told you there was a simple Wordpress plugin that does all the On-Page SEO, and automatically for you? That\'s right AUTOMATICALLY, just watch this 4minute video for more information at. <a href="http://www.SeoOptimizedRankings.com" rel="nofollow">Seo Plugin</a>', 0, 'spam', 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 1.0.3705)', '', 0, 0),
(8, 73, 'Gregg', 'niklaskittelson@gawab.com', 'http://Ashton.wordpress.com', '112.18.33.112', '2014-08-14 08:49:08', '2014-08-14 13:49:08', 'I had problems to find your posts in google search results.\r\nI found it on 16 spot, you should build a lot \r\nof high authority social backlinks , it will help you to get \r\nmore visitors. I know how to help your site, just type in google - k2 seo tips and tricks', 0, 'spam', 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36', '', 0, 0),
(9, 88, 'Omer', 'isobelhartford@gmail.com', 'http://Felipe.edublogs.org', '76.31.146.17', '2014-08-14 18:56:01', '2014-08-14 23:56:01', 'I see you share interesting things here, you can earn some \r\nextra cash, your website has huge potential, for the monetizing method, just search in google - K2 advices how to \r\nmonetize a website', 0, 'spam', 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36', '', 0, 0),
(10, 88, 'Thanh', 'bebe.stott@gmail.com', 'http://Penni.skyrock.com', '197.149.64.18', '2014-08-18 06:42:06', '2014-08-18 11:42:06', 'I see you share interesting content here, you can earn some \r\nadditional money, your website has big potential, for the monetizing \r\nmethod, just type in google - K2 advices how to monetize a website', 0, 'spam', 'Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20100101 Firefox/22.0', '', 0, 0),
(11, 73, '2014 New Louis Vuitton Men', '**@gmail.com', 'http://clayindustryng.com/UserFiles/lv', '192.187.126.42', '2014-08-20 02:53:00', '2014-08-20 07:53:00', 'Have you ever considered about adding a little bit more than just your articles?\r\n2014 New Louis Vuitton Men http://clayindustryng.com/UserFiles/lv', 0, 'spam', 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 1.0.3705)', '', 0, 0) ;

#
# End of data contents of table `wp_comments`
# --------------------------------------------------------



#
# Delete any existing table `wp_links`
#

DROP TABLE IF EXISTS `wp_links`;


#
# Table structure of table `wp_links`
#

CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_links`
#

#
# End of data contents of table `wp_links`
# --------------------------------------------------------



#
# Delete any existing table `wp_options`
#

DROP TABLE IF EXISTS `wp_options`;


#
# Table structure of table `wp_options`
#

CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=1872 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_options`
#
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1, 'siteurl', 'http://dev.dorails.com', 'yes'),
(2, 'blogname', 'do_rails', 'yes'),
(3, 'blogdescription', 'Learn by doing', 'yes'),
(4, 'users_can_register', '0', 'yes'),
(5, 'admin_email', 'me@tyrichards.com', 'yes'),
(6, 'start_of_week', '1', 'yes'),
(7, 'use_balanceTags', '0', 'yes'),
(8, 'use_smilies', '1', 'yes'),
(9, 'require_name_email', '1', 'yes'),
(10, 'comments_notify', '1', 'yes'),
(11, 'posts_per_rss', '50', 'yes'),
(12, 'rss_use_excerpt', '0', 'yes'),
(13, 'mailserver_url', 'mail.example.com', 'yes'),
(14, 'mailserver_login', 'login@example.com', 'yes'),
(15, 'mailserver_pass', 'password', 'yes'),
(16, 'mailserver_port', '110', 'yes'),
(17, 'default_category', '1', 'yes'),
(18, 'default_comment_status', 'open', 'yes'),
(19, 'default_ping_status', 'open', 'yes'),
(20, 'default_pingback_flag', '0', 'yes'),
(21, 'posts_per_page', '20', 'yes'),
(22, 'date_format', 'F j, Y', 'yes'),
(23, 'time_format', 'g:i a', 'yes'),
(24, 'links_updated_date_format', 'F j, Y g:i a', 'yes'),
(25, 'comment_moderation', '0', 'yes'),
(26, 'moderation_notify', '1', 'yes'),
(27, 'permalink_structure', '/railsvitamins/%postname%/', 'yes'),
(28, 'gzipcompression', '0', 'yes'),
(29, 'hack_file', '0', 'yes'),
(30, 'blog_charset', 'UTF-8', 'yes'),
(31, 'moderation_keys', '', 'no'),
(32, 'active_plugins', 'a:10:{i:0;s:29:"gravityforms/gravityforms.php";i:1;s:35:"baw-manual-related-posts/bawmrp.php";i:2;s:56:"gravity-forms-placeholders/gravityforms-placeholders.php";i:3;s:35:"gravityformsmailchimp/mailchimp.php";i:4;s:49:"gravityformsuserregistration/userregistration.php";i:5;s:29:"image-widget/image-widget.php";i:6;s:19:"mailgun/mailgun.php";i:7;s:48:"simple-301-redirects/wp-simple-301-redirects.php";i:8;s:27:"woosidebars/woosidebars.php";i:9;s:39:"wp-migrate-db-pro/wp-migrate-db-pro.php";}', 'yes'),
(33, 'home', 'http://dev.dorails.com', 'yes'),
(34, 'category_base', '', 'yes'),
(35, 'ping_sites', 'http://rpc.pingomatic.com/', 'yes'),
(36, 'advanced_edit', '0', 'yes'),
(37, 'comment_max_links', '2', 'yes'),
(38, 'gmt_offset', '-5', 'yes'),
(39, 'default_email_category', '1', 'yes'),
(40, 'recently_edited', '', 'no'),
(41, 'template', 'Paradox', 'yes'),
(42, 'stylesheet', 'Paradox', 'yes'),
(43, 'comment_whitelist', '1', 'yes'),
(44, 'blacklist_keys', '', 'no'),
(45, 'comment_registration', '0', 'yes'),
(46, 'html_type', 'text/html', 'yes'),
(47, 'use_trackback', '0', 'yes'),
(48, 'default_role', 'subscriber', 'yes'),
(49, 'db_version', '27916', 'yes'),
(50, 'uploads_use_yearmonth_folders', '1', 'yes'),
(51, 'upload_path', '', 'yes'),
(52, 'blog_public', '1', 'yes'),
(53, 'default_link_category', '2', 'yes'),
(54, 'show_on_front', 'page', 'yes'),
(55, 'tag_base', '', 'yes'),
(56, 'show_avatars', '1', 'yes'),
(57, 'avatar_rating', 'G', 'yes'),
(58, 'upload_url_path', '', 'yes'),
(59, 'thumbnail_size_w', '150', 'yes'),
(60, 'thumbnail_size_h', '150', 'yes'),
(61, 'thumbnail_crop', '1', 'yes'),
(62, 'medium_size_w', '300', 'yes'),
(63, 'medium_size_h', '300', 'yes'),
(64, 'avatar_default', 'mystery', 'yes'),
(65, 'large_size_w', '1024', 'yes'),
(66, 'large_size_h', '1024', 'yes'),
(67, 'image_default_link_type', 'file', 'yes'),
(68, 'image_default_size', '', 'yes'),
(69, 'image_default_align', '', 'yes'),
(70, 'close_comments_for_old_posts', '0', 'yes'),
(71, 'close_comments_days_old', '14', 'yes'),
(72, 'thread_comments', '1', 'yes'),
(73, 'thread_comments_depth', '5', 'yes'),
(74, 'page_comments', '0', 'yes'),
(75, 'comments_per_page', '50', 'yes'),
(76, 'default_comments_page', 'newest', 'yes'),
(77, 'comment_order', 'asc', 'yes'),
(78, 'sticky_posts', 'a:0:{}', 'yes'),
(79, 'widget_categories', 'a:2:{i:2;a:4:{s:5:"title";s:0:"";s:5:"count";i:0;s:12:"hierarchical";i:0;s:8:"dropdown";i:0;}s:12:"_multiwidget";i:1;}', 'yes'),
(80, 'widget_text', 'a:3:{i:2;a:3:{s:5:"title";s:5:"Howdy";s:4:"text";s:0:"";s:6:"filter";b:0;}i:3;a:3:{s:5:"title";s:13:"About Sidebar";s:4:"text";s:0:"";s:6:"filter";b:0;}s:12:"_multiwidget";i:1;}', 'yes'),
(81, 'widget_rss', 'a:0:{}', 'yes'),
(82, 'uninstall_plugins', 'a:1:{s:35:"baw-manual-related-posts/bawmrp.php";s:18:"bawmrp_uninstaller";}', 'no'),
(83, 'timezone_string', '', 'yes'),
(84, 'page_for_posts', '111', 'yes'),
(85, 'page_on_front', '109', 'yes'),
(86, 'default_post_format', '0', 'yes'),
(87, 'link_manager_enabled', '0', 'yes'),
(88, 'initial_db_version', '27916', 'yes'),
(89, 'wp_user_roles', 'a:5:{s:13:"administrator";a:2:{s:4:"name";s:13:"Administrator";s:12:"capabilities";a:66:{s:13:"switch_themes";b:1;s:11:"edit_themes";b:1;s:16:"activate_plugins";b:1;s:12:"edit_plugins";b:1;s:10:"edit_users";b:1;s:10:"edit_files";b:1;s:14:"manage_options";b:1;s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:6:"import";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:8:"level_10";b:1;s:7:"level_9";b:1;s:7:"level_8";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;s:12:"delete_users";b:1;s:12:"create_users";b:1;s:17:"unfiltered_upload";b:1;s:14:"edit_dashboard";b:1;s:14:"update_plugins";b:1;s:14:"delete_plugins";b:1;s:15:"install_plugins";b:1;s:13:"update_themes";b:1;s:14:"install_themes";b:1;s:11:"update_core";b:1;s:10:"list_users";b:1;s:12:"remove_users";b:1;s:9:"add_users";b:1;s:13:"promote_users";b:1;s:18:"edit_theme_options";b:1;s:13:"delete_themes";b:1;s:6:"export";b:1;s:30:"gravityforms_user_registration";b:1;s:40:"gravityforms_user_registration_uninstall";b:1;s:22:"gravityforms_mailchimp";b:1;s:32:"gravityforms_mailchimp_uninstall";b:1;}}s:6:"editor";a:2:{s:4:"name";s:6:"Editor";s:12:"capabilities";a:34:{s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;}}s:6:"author";a:2:{s:4:"name";s:6:"Author";s:12:"capabilities";a:10:{s:12:"upload_files";b:1;s:10:"edit_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:4:"read";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;s:22:"delete_published_posts";b:1;}}s:11:"contributor";a:2:{s:4:"name";s:11:"Contributor";s:12:"capabilities";a:5:{s:10:"edit_posts";b:1;s:4:"read";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;}}s:10:"subscriber";a:2:{s:4:"name";s:10:"Subscriber";s:12:"capabilities";a:2:{s:4:"read";b:1;s:7:"level_0";b:1;}}}', 'yes'),
(90, 'widget_search', 'a:2:{i:2;a:1:{s:5:"title";s:0:"";}s:12:"_multiwidget";i:1;}', 'yes'),
(91, 'widget_recent-posts', 'a:2:{i:2;a:2:{s:5:"title";s:0:"";s:6:"number";i:5;}s:12:"_multiwidget";i:1;}', 'yes'),
(92, 'widget_recent-comments', 'a:2:{i:2;a:2:{s:5:"title";s:0:"";s:6:"number";i:5;}s:12:"_multiwidget";i:1;}', 'yes'),
(93, 'widget_archives', 'a:2:{i:2;a:3:{s:5:"title";s:0:"";s:5:"count";i:0;s:8:"dropdown";i:0;}s:12:"_multiwidget";i:1;}', 'yes'),
(94, 'widget_meta', 'a:2:{i:2;a:1:{s:5:"title";s:0:"";}s:12:"_multiwidget";i:1;}', 'yes'),
(95, 'sidebars_widgets', 'a:6:{s:13:"pages-sidebar";a:1:{i:0;s:6:"text-2";}s:19:"wp_inactive_widgets";a:0:{}s:13:"about-sidebar";a:1:{i:0;s:6:"text-3";}s:15:"sidebar-default";a:6:{i:0;s:8:"search-2";i:1;s:14:"recent-posts-2";i:2;s:17:"recent-comments-2";i:3;s:10:"archives-2";i:4;s:12:"categories-2";i:5;s:6:"meta-2";}s:14:"footer-credits";a:1:{i:0;s:10:"nav_menu-2";}s:13:"array_version";i:3;}', 'yes'),
(96, 'cron', 'a:6:{i:1409859286;a:1:{s:26:"upgrader_scheduled_cleanup";a:1:{s:32:"fc19c4f86c84de3502c015130f36e28f";a:2:{s:8:"schedule";b:0;s:4:"args";a:1:{i:0;i:290;}}}}i:1409890061;a:3:{s:16:"wp_version_check";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:17:"wp_update_plugins";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:16:"wp_update_themes";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}}i:1409901180;a:1:{s:20:"wp_maybe_auto_update";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}}i:1409933276;a:1:{s:19:"wp_scheduled_delete";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:5:"daily";s:4:"args";a:0:{}s:8:"interval";i:86400;}}}i:1409939880;a:1:{s:30:"wp_scheduled_auto_draft_delete";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:5:"daily";s:4:"args";a:0:{}s:8:"interval";i:86400;}}}s:7:"version";i:2;}', 'yes'),
(105, 'auth_key', 'v5&8@bl%UFmoR}n]fT@@ZCV$<#/lja@[WD^jdr#uZ@|/^e=|Ephy bBjoJ2y/6ko', 'yes'),
(106, 'auth_salt', 'x1 HqCULcS:|TA>d@uFl pR#Hmw-Dr.%x4g)vp@d~oRgB&%>jIfdyig/fdt51]F*', 'yes'),
(107, 'logged_in_key', '!lk(}Q9CxIEu%{z{ay.k`P;mFASLZ,lo;W~a4l/[FF5/<OM$5NEy?j8,ye`,xP ;', 'yes'),
(108, 'logged_in_salt', 'FAhbg$X/lZ)G^ P:6iDXBk+0i%dZ p&QOls;{e:$/Yrl2;F#;2cF{A;On^iztKWz', 'yes') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(109, 'nonce_key', '1g#Kds(^Ro:1DaIt8U{WD+8->KI<T`ktX?g!rJ:0miA/5AmB%|*Euj/%p}a`_V)T', 'yes'),
(110, 'nonce_salt', 'z</ylVG#pEu3W>LrY)VF8ODAf?tH!Qy]Tb8a-bwmX.G>*elb8:);c_WBS hlDr0x', 'yes'),
(115, 'can_compress_scripts', '1', 'yes'),
(132, 'theme_mods_twentyfourteen', 'a:1:{s:16:"sidebars_widgets";a:2:{s:4:"time";i:1402934888;s:4:"data";a:4:{s:19:"wp_inactive_widgets";a:0:{}s:9:"sidebar-1";a:6:{i:0;s:8:"search-2";i:1;s:14:"recent-posts-2";i:2;s:17:"recent-comments-2";i:3;s:10:"archives-2";i:4;s:12:"categories-2";i:5;s:6:"meta-2";}s:9:"sidebar-2";a:0:{}s:9:"sidebar-3";a:0:{}}}}', 'yes'),
(133, 'current_theme', 'Paradox', 'yes'),
(134, 'theme_mods_Paradox', 'a:2:{i:0;b:0;s:18:"nav_menu_locations";a:1:{s:7:"primary";i:2;}}', 'yes'),
(135, 'theme_switched', '', 'yes'),
(139, 'recently_activated', 'a:0:{}', 'yes'),
(147, '_image_widget_version', '4.1', 'yes'),
(148, 'gravityformsaddon_gravityformswebapi_version', '1.0', 'yes'),
(149, 'rg_form_version', '1.8.12', 'yes'),
(154, 'rg_gforms_key', '099c03f26e64e93459a2cf51dc992f60', 'yes'),
(155, 'rg_gforms_disable_css', '1', 'yes'),
(156, 'rg_gforms_enable_html5', '0', 'yes'),
(157, 'gform_enable_noconflict', '0', 'yes'),
(158, 'rg_gforms_enable_akismet', '', 'yes'),
(159, 'rg_gforms_captcha_public_key', '', 'yes'),
(160, 'rg_gforms_captcha_private_key', '', 'yes'),
(161, 'rg_gforms_currency', 'USD', 'yes'),
(162, 'rg_gforms_message', '<!--GFM-->', 'yes'),
(168, 'nav_menu_options', 'a:2:{i:0;b:0;s:8:"auto_add";a:0:{}}', 'yes'),
(169, 'widget_nav_menu', 'a:2:{i:2;a:2:{s:5:"title";s:0:"";s:8:"nav_menu";i:3;}s:12:"_multiwidget";i:1;}', 'yes'),
(188, 'category_children', 'a:0:{}', 'yes'),
(235, 'disqus_forum_url', 'paradoxjournal', 'yes'),
(236, 'disqus_api_key', 't3qIqjeFZst9CXMf5EEL8HdJspRY76y5MPxgjhYxuekM5KK5WppIgWWFcCvW6JQq', 'yes'),
(237, 'disqus_user_api_key', '5YuY4X1eqAVKraqVoUqpyErwW3hDNQ7JxMxbYAqHMKn7OVCnXtfUY1x92bURO76M', 'yes'),
(238, 'disqus_replace', 'all', 'yes'),
(243, 'disqus_last_comment_id', '1439740298', 'yes'),
(256, 'gform_email_count', '16', 'yes'),
(266, 'gf_user_registration_version', '1.9', 'yes'),
(272, 'gf_mailchimp_version', '2.4.2', 'yes'),
(275, 'gf_mailchimp_settings', 'a:3:{s:8:"username";s:0:"";s:8:"password";s:0:"";s:6:"apikey";s:36:"1031d78d0040b255686a1423593780bf-us8";}', 'yes'),
(334, 'mailgun', 'a:10:{s:6:"useAPI";s:1:"1";s:6:"domain";s:19:"mg.paradoxsites.com";s:6:"apiKey";s:36:"key-7ol99x3jpeppy1846t-ri0dcc9xmy-j7";s:8:"username";s:0:"";s:8:"password";s:0:"";s:6:"secure";s:1:"1";s:12:"track-clicks";s:3:"yes";s:11:"track-opens";s:1:"1";s:11:"campaign-id";s:0:"";s:3:"tag";s:0:"";}', 'yes'),
(574, 'disqus_active', '1', 'yes'),
(575, 'disqus_version', '2.77', 'yes'),
(714, 'bawmrp', 'a:4:{s:9:"max_posts";s:1:"0";s:10:"post_types";a:3:{i:0;s:4:"post";i:1;s:4:"page";i:2;s:10:"attachment";}s:11:"head_titles";a:3:{s:4:"post";a:1:{s:5:"en_US";s:27:"You might want to checkout:";}s:4:"page";a:1:{s:5:"en_US";s:18:"You may also like:";}s:10:"attachment";a:1:{s:5:"en_US";s:18:"You may also like:";}}s:15:"in_content_mode";s:4:"list";}', 'yes'),
(1227, 'wpmdb_settings', 'a:8:{s:11:"max_request";i:1048576;s:3:"key";s:32:"ZHdQSQMCu1VuKULvcasbeTOY9GelYbWM";s:10:"allow_pull";b:0;s:10:"allow_push";b:0;s:8:"profiles";a:2:{i:0;a:18:{s:13:"save_computer";s:1:"1";s:9:"gzip_file";s:1:"1";s:13:"replace_guids";s:1:"1";s:12:"exclude_spam";s:1:"0";s:19:"keep_active_plugins";s:1:"0";s:13:"create_backup";s:1:"1";s:18:"exclude_post_types";s:1:"0";s:6:"action";s:4:"push";s:15:"connection_info";s:52:"http://dorails.com\r\nRcmIiK4pvqNtfbxkPDKM7xxPqOtJk6o2";s:11:"replace_old";a:2:{i:1;s:17:"//dev.dorails.com";i:2;s:44:"/Users/tyrichards/Sites/Do Rails/public_html";}s:11:"replace_new";a:2:{i:1;s:13:"//dorails.com";i:2;s:29:"/var/www/do_rails/public_html";}s:20:"table_migrate_option";s:24:"migrate_only_with_prefix";s:18:"exclude_transients";s:1:"1";s:13:"backup_option";s:23:"backup_only_with_prefix";s:22:"save_migration_profile";s:1:"1";s:29:"save_migration_profile_option";s:1:"0";s:18:"create_new_profile";s:11:"dorails.com";s:4:"name";s:18:"Push: Local > Live";}i:1;a:18:{s:13:"save_computer";s:1:"1";s:9:"gzip_file";s:1:"1";s:13:"replace_guids";s:1:"1";s:12:"exclude_spam";s:1:"0";s:19:"keep_active_plugins";s:1:"0";s:13:"create_backup";s:1:"1";s:18:"exclude_post_types";s:1:"0";s:6:"action";s:4:"pull";s:15:"connection_info";s:52:"http://dorails.com\r\nRcmIiK4pvqNtfbxkPDKM7xxPqOtJk6o2";s:11:"replace_old";a:2:{i:1;s:13:"//dorails.com";i:2;s:29:"/var/www/do_rails/public_html";}s:11:"replace_new";a:2:{i:1;s:17:"//dev.dorails.com";i:2;s:44:"/Users/tyrichards/Sites/Do Rails/public_html";}s:20:"table_migrate_option";s:24:"migrate_only_with_prefix";s:18:"exclude_transients";s:1:"1";s:13:"backup_option";s:23:"backup_only_with_prefix";s:22:"save_migration_profile";s:1:"1";s:29:"save_migration_profile_option";s:3:"new";s:18:"create_new_profile";s:18:"Pull: Live > Local";s:4:"name";s:18:"Pull: Live > Local";}}s:7:"licence";s:36:"4451cb15-9ae0-4ba0-a513-46ce44235bc9";s:10:"verify_ssl";b:0;s:17:"blacklist_plugins";a:0:{}}', 'yes'),
(1241, '_site_transient_update_themes', 'O:8:"stdClass":4:{s:12:"last_checked";i:1409858173;s:7:"checked";a:1:{s:7:"Paradox";s:3:"1.0";}s:8:"response";a:0:{}s:12:"translations";a:0:{}}', 'yes'),
(1310, '_site_transient_timeout_wpmdb_addons', '1413944438', 'yes'),
(1311, '_site_transient_wpmdb_addons', 'a:2:{s:29:"wp-migrate-db-pro-media-files";a:5:{s:4:"name";s:11:"Media Files";s:4:"desc";s:359:"Determines the Media Library files that have been added or updated on the remote site and downloads them. Includes an option to remove local files that are no longer found on the remote site. <a style="color:#fff;text-decoration:underline;" href="https://deliciousbrains.com/wp-migrate-db-pro/documentation/#media-files-addon" style="">More Details &rarr;</a>";s:7:"version";s:5:"1.1.4";s:12:"beta_version";s:0:"";s:6:"tested";s:5:"3.9.2";}s:21:"wp-migrate-db-pro-cli";a:6:{s:4:"name";s:3:"CLI";s:4:"desc";s:466:"Use WP-CLI to run migrations from the command line: <code>wp wpmdb migrate <span class="bracket">&lt;</span><span class="var">profile</span><span class="bracket">&gt;</span></code> or run them from your own code with the <code>wpmdb_migrate<span class="bracket">(</span> <span class="var">$profile</span> <span class="bracket">)</span></code> function. <a href="https://deliciousbrains.com/wp-migrate-db-pro/documentation/#cli-addon" style="">More Details &rarr;</a>";s:7:"version";s:3:"1.0";s:12:"beta_version";s:0:"";s:8:"required";s:5:"1.4b1";s:6:"tested";s:5:"3.9.2";}}', 'yes'),
(1314, '_transient_random_seed', 'c2e463dde0a9aca6caa91ed4d5af3e5c', 'yes'),
(1315, 'rewrite_rules', 'a:69:{s:61:"railsvitamins/category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$";s:52:"index.php?category_name=$matches[1]&feed=$matches[2]";s:56:"railsvitamins/category/(.+?)/(feed|rdf|rss|rss2|atom)/?$";s:52:"index.php?category_name=$matches[1]&feed=$matches[2]";s:49:"railsvitamins/category/(.+?)/page/?([0-9]{1,})/?$";s:53:"index.php?category_name=$matches[1]&paged=$matches[2]";s:31:"railsvitamins/category/(.+?)/?$";s:35:"index.php?category_name=$matches[1]";s:58:"railsvitamins/tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?tag=$matches[1]&feed=$matches[2]";s:53:"railsvitamins/tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?tag=$matches[1]&feed=$matches[2]";s:46:"railsvitamins/tag/([^/]+)/page/?([0-9]{1,})/?$";s:43:"index.php?tag=$matches[1]&paged=$matches[2]";s:28:"railsvitamins/tag/([^/]+)/?$";s:25:"index.php?tag=$matches[1]";s:59:"railsvitamins/type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?post_format=$matches[1]&feed=$matches[2]";s:54:"railsvitamins/type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?post_format=$matches[1]&feed=$matches[2]";s:47:"railsvitamins/type/([^/]+)/page/?([0-9]{1,})/?$";s:51:"index.php?post_format=$matches[1]&paged=$matches[2]";s:29:"railsvitamins/type/([^/]+)/?$";s:33:"index.php?post_format=$matches[1]";s:12:"robots\\.txt$";s:18:"index.php?robots=1";s:48:".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$";s:18:"index.php?feed=old";s:20:".*wp-app\\.php(/.*)?$";s:19:"index.php?error=403";s:18:".*wp-register.php$";s:23:"index.php?register=true";s:32:"feed/(feed|rdf|rss|rss2|atom)/?$";s:27:"index.php?&feed=$matches[1]";s:27:"(feed|rdf|rss|rss2|atom)/?$";s:27:"index.php?&feed=$matches[1]";s:20:"page/?([0-9]{1,})/?$";s:28:"index.php?&paged=$matches[1]";s:27:"comment-page-([0-9]{1,})/?$";s:40:"index.php?&page_id=109&cpage=$matches[1]";s:41:"comments/feed/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?&feed=$matches[1]&withcomments=1";s:36:"comments/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?&feed=$matches[1]&withcomments=1";s:44:"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:40:"index.php?s=$matches[1]&feed=$matches[2]";s:39:"search/(.+)/(feed|rdf|rss|rss2|atom)/?$";s:40:"index.php?s=$matches[1]&feed=$matches[2]";s:32:"search/(.+)/page/?([0-9]{1,})/?$";s:41:"index.php?s=$matches[1]&paged=$matches[2]";s:14:"search/(.+)/?$";s:23:"index.php?s=$matches[1]";s:61:"railsvitamins/author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?author_name=$matches[1]&feed=$matches[2]";s:56:"railsvitamins/author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?author_name=$matches[1]&feed=$matches[2]";s:49:"railsvitamins/author/([^/]+)/page/?([0-9]{1,})/?$";s:51:"index.php?author_name=$matches[1]&paged=$matches[2]";s:31:"railsvitamins/author/([^/]+)/?$";s:33:"index.php?author_name=$matches[1]";s:83:"railsvitamins/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$";s:80:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]";s:78:"railsvitamins/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$";s:80:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]";s:71:"railsvitamins/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$";s:81:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]";s:53:"railsvitamins/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$";s:63:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]";s:70:"railsvitamins/([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$";s:64:"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]";s:65:"railsvitamins/([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$";s:64:"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]";s:58:"railsvitamins/([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$";s:65:"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]";s:40:"railsvitamins/([0-9]{4})/([0-9]{1,2})/?$";s:47:"index.php?year=$matches[1]&monthnum=$matches[2]";s:57:"railsvitamins/([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?year=$matches[1]&feed=$matches[2]";s:52:"railsvitamins/([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?year=$matches[1]&feed=$matches[2]";s:45:"railsvitamins/([0-9]{4})/page/?([0-9]{1,})/?$";s:44:"index.php?year=$matches[1]&paged=$matches[2]";s:27:"railsvitamins/([0-9]{4})/?$";s:26:"index.php?year=$matches[1]";s:27:".?.+?/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:37:".?.+?/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:57:".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:20:"(.?.+?)/trackback/?$";s:35:"index.php?pagename=$matches[1]&tb=1";s:40:"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?pagename=$matches[1]&feed=$matches[2]";s:35:"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?pagename=$matches[1]&feed=$matches[2]";s:28:"(.?.+?)/page/?([0-9]{1,})/?$";s:48:"index.php?pagename=$matches[1]&paged=$matches[2]";s:35:"(.?.+?)/comment-page-([0-9]{1,})/?$";s:48:"index.php?pagename=$matches[1]&cpage=$matches[2]";s:20:"(.?.+?)(/[0-9]+)?/?$";s:47:"index.php?pagename=$matches[1]&page=$matches[2]";s:41:"railsvitamins/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:51:"railsvitamins/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:71:"railsvitamins/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:66:"railsvitamins/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:66:"railsvitamins/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:34:"railsvitamins/([^/]+)/trackback/?$";s:31:"index.php?name=$matches[1]&tb=1";s:54:"railsvitamins/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?name=$matches[1]&feed=$matches[2]";s:49:"railsvitamins/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?name=$matches[1]&feed=$matches[2]";s:42:"railsvitamins/([^/]+)/page/?([0-9]{1,})/?$";s:44:"index.php?name=$matches[1]&paged=$matches[2]";s:49:"railsvitamins/([^/]+)/comment-page-([0-9]{1,})/?$";s:44:"index.php?name=$matches[1]&cpage=$matches[2]";s:34:"railsvitamins/([^/]+)(/[0-9]+)?/?$";s:43:"index.php?name=$matches[1]&page=$matches[2]";s:30:"railsvitamins/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:40:"railsvitamins/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:60:"railsvitamins/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:55:"railsvitamins/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:55:"railsvitamins/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";}', 'yes'),
(1424, '_transient_timeout_GFCache_51b2bd9f718498a67cbe02a639340f3d', '1408875041', 'no'),
(1425, '_transient_GFCache_51b2bd9f718498a67cbe02a639340f3d', '1', 'no'),
(1430, '_transient_timeout_GFCache_14ffe21b7bf421714a3f9320878c470d', '1408875083', 'no'),
(1431, '_transient_GFCache_14ffe21b7bf421714a3f9320878c470d', '1', 'no'),
(1438, '_transient_timeout_GFCache_945ced1e738341cf603a6cd295d8bbb0', '1408876117', 'no'),
(1439, '_transient_GFCache_945ced1e738341cf603a6cd295d8bbb0', '1', 'no'),
(1449, 'ssl_host', '', 'yes'),
(1450, 'ssl_port', '', 'yes'),
(1451, 'secure_external_urls', 'a:0:{}', 'yes'),
(1452, 'unsecure_external_urls', 'a:0:{}', 'yes'),
(1453, 'ssl_host_diff', '0', 'yes'),
(1454, 'ssl_host_subdomain', '0', 'yes'),
(1455, 'exclusive_https', '0', 'yes'),
(1456, 'remove_unsecure', '0', 'yes'),
(1457, 'ssl_admin', '0', 'yes'),
(1458, 'ssl_proxy', '0', 'yes'),
(1459, 'debug', '0', 'yes'),
(1460, 'admin_menu', 'side', 'yes'),
(1461, 'secure_filter', 'a:0:{}', 'yes'),
(1462, 'ssl_host_mapping', 'a:0:{}', 'yes'),
(1463, 'network_defaults', 'a:0:{}', 'yes'),
(1464, 'wordpress-https_secure_external_urls', 'a:0:{}', 'yes'),
(1465, 'wordpress-https_unsecure_external_urls', 'a:0:{}', 'yes'),
(1466, 'wordpress-https_ssl_host_mapping', 'a:2:{s:15:"w.sharethis.com";s:16:"ws.sharethis.com";s:15:"\\d.gravatar.com";s:19:"secure.gravatar.com";}', 'yes'),
(1467, 'wordpress-https_ssl_host', 'https://dev.dorails.com/', 'yes'),
(1468, 'wordpress-https_ssl_port', '', 'yes'),
(1469, 'wordpress-https_ssl_host_diff', '0', 'yes'),
(1470, 'wordpress-https_ssl_host_subdomain', '', 'yes'),
(1471, 'wordpress-https_exclusive_https', '0', 'yes'),
(1472, 'wordpress-https_remove_unsecure', '0', 'yes'),
(1473, 'wordpress-https_ssl_admin', '1', 'yes'),
(1474, 'wordpress-https_ssl_proxy', '0', 'yes'),
(1475, 'wordpress-https_debug', '0', 'yes'),
(1476, 'wordpress-https_admin_menu', 'side', 'yes'),
(1588, '_site_transient_timeout_browser_6f259a4cdb090f07f558dd67c54df828', '1410138699', 'yes'),
(1589, '_site_transient_browser_6f259a4cdb090f07f558dd67c54df828', 'a:9:{s:8:"platform";s:9:"Macintosh";s:4:"name";s:6:"Chrome";s:7:"version";s:13:"36.0.1985.143";s:10:"update_url";s:28:"http://www.google.com/chrome";s:7:"img_src";s:49:"http://s.wordpress.org/images/browsers/chrome.png";s:11:"img_src_ssl";s:48:"https://wordpress.org/images/browsers/chrome.png";s:15:"current_version";s:2:"18";s:7:"upgrade";b:0;s:8:"insecure";b:0;}', 'yes'),
(1638, '_transient_timeout_plugin_slugs', '1409938497', 'no'),
(1639, '_transient_plugin_slugs', 'a:11:{i:0;s:35:"baw-manual-related-posts/bawmrp.php";i:1;s:32:"disqus-comment-system/disqus.php";i:2;s:29:"gravityforms/gravityforms.php";i:3;s:56:"gravity-forms-placeholders/gravityforms-placeholders.php";i:4;s:35:"gravityformsmailchimp/mailchimp.php";i:5;s:49:"gravityformsuserregistration/userregistration.php";i:6;s:29:"image-widget/image-widget.php";i:7;s:19:"mailgun/mailgun.php";i:8;s:48:"simple-301-redirects/wp-simple-301-redirects.php";i:9;s:27:"woosidebars/woosidebars.php";i:10;s:39:"wp-migrate-db-pro/wp-migrate-db-pro.php";}', 'no'),
(1661, '_site_transient_timeout_browser_c416e41b69ca461e248e4a897373a70c', '1410275919', 'yes'),
(1663, '_site_transient_browser_c416e41b69ca461e248e4a897373a70c', 'a:9:{s:8:"platform";s:9:"Macintosh";s:4:"name";s:6:"Chrome";s:7:"version";s:12:"37.0.2062.94";s:10:"update_url";s:28:"http://www.google.com/chrome";s:7:"img_src";s:49:"http://s.wordpress.org/images/browsers/chrome.png";s:11:"img_src_ssl";s:48:"https://wordpress.org/images/browsers/chrome.png";s:15:"current_version";s:2:"18";s:7:"upgrade";b:0;s:8:"insecure";b:0;}', 'yes'),
(1687, '_transient_timeout_GFCache_453db3b43527a504c83a246d4e6b814b', '1409671367', 'no'),
(1688, '_transient_GFCache_453db3b43527a504c83a246d4e6b814b', '1', 'no'),
(1701, 'woosidebars-version', '1.3.1', 'yes'),
(1735, '_site_transient_update_core', 'O:8:"stdClass":4:{s:7:"updates";a:2:{i:0;O:8:"stdClass":10:{s:8:"response";s:7:"upgrade";s:8:"download";s:57:"https://downloads.wordpress.org/release/wordpress-4.0.zip";s:6:"locale";s:5:"en_US";s:8:"packages";O:8:"stdClass":5:{s:4:"full";s:57:"https://downloads.wordpress.org/release/wordpress-4.0.zip";s:10:"no_content";s:68:"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip";s:11:"new_bundled";s:69:"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip";s:7:"partial";b:0;s:8:"rollback";b:0;}s:7:"current";s:3:"4.0";s:7:"version";s:3:"4.0";s:11:"php_version";s:5:"5.2.4";s:13:"mysql_version";s:3:"5.0";s:11:"new_bundled";s:3:"3.8";s:15:"partial_version";s:0:"";}i:1;O:8:"stdClass":11:{s:8:"response";s:10:"autoupdate";s:8:"download";s:57:"https://downloads.wordpress.org/release/wordpress-4.0.zip";s:6:"locale";s:5:"en_US";s:8:"packages";O:8:"stdClass":5:{s:4:"full";s:57:"https://downloads.wordpress.org/release/wordpress-4.0.zip";s:10:"no_content";s:68:"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip";s:11:"new_bundled";s:69:"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip";s:7:"partial";b:0;s:8:"rollback";b:0;}s:7:"current";s:3:"4.0";s:7:"version";s:3:"4.0";s:11:"php_version";s:5:"5.2.4";s:13:"mysql_version";s:3:"5.0";s:11:"new_bundled";s:3:"3.8";s:15:"partial_version";s:0:"";s:13:"support_email";s:27:"updatehelp392@wordpress.org";}}s:12:"last_checked";i:1409858173;s:15:"version_checked";s:5:"3.9.2";s:12:"translations";a:0:{}}', 'yes'),
(1772, 'wpmdb_error_log', '********************************************\n******  Log date: 2014/09/03 17:54:13 ******\n********************************************\n\nWPMDB Error: The connection failed, an unexpected error occurred, please contact support. (#121 - scope: ajax_verify_connection_to_remote_site)\n\nAttempted to connect to: http://dorails.com/wp-admin/admin-ajax.php\n\nWP_Error Object\n(\n    [errors] => Array\n        (\n            [http_request_failed] => Array\n                (\n                    [0] => Couldn\'t resolve host \'dorails.com\'\n                )\n\n        )\n\n    [error_data] => Array\n        (\n        )\n\n)\n\n\n********************************************\n******  Log date: 2014/09/04 18:21:23 ******\n********************************************\n\nWPMDB Error: The connection failed, an unexpected error occurred, please contact support. (#121 - scope: ajax_verify_connection_to_remote_site)\n\nAttempted to connect to: http://dorails.com/wp-admin/admin-ajax.php\n\nWP_Error Object\n(\n    [errors] => Array\n        (\n            [http_request_failed] => Array\n                (\n                    [0] => Couldn\'t resolve host \'dorails.com\'\n                )\n\n        )\n\n    [error_data] => Array\n        (\n        )\n\n)\n\n\n********************************************\n******  Log date: 2014/09/04 19:23:10 ******\n********************************************\n\nWPMDB Error: Unable to connect to the remote server, please check the connection details - 404 Not Found (#129 - scope: ajax_verify_connection_to_remote_site)\n\nAttempted to connect to: http://dorails.com/wp-admin/admin-ajax.php\n\nArray\n(\n    [headers] => Array\n        (\n            [date] => Thu, 04 Sep 2014 19:23:10 GMT\n            [server] => Apache\n            [content-length] => 221\n            [connection] => close\n            [content-type] => text/html; charset=iso-8859-1\n        )\n\n    [body] => <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL /wp-admin/admin-ajax.php was not found on this server.</p>\n</body></html>\n\n    [response] => Array\n        (\n            [code] => 404\n            [message] => Not Found\n        )\n\n    [cookies] => Array\n        (\n        )\n\n    [filename] => \n)\n\n\n', 'yes'),
(1788, '_transient_timeout_GFCache_e8733c9cb65ff23375b175aa4a4ca281', '1409775648', 'no'),
(1789, '_transient_GFCache_e8733c9cb65ff23375b175aa4a4ca281', '1', 'no'),
(1809, '_site_transient_timeout_wpmdb_upgrade_data', '1409880897', 'yes'),
(1810, '_site_transient_wpmdb_upgrade_data', 'a:3:{s:17:"wp-migrate-db-pro";a:2:{s:7:"version";s:5:"1.4.2";s:6:"tested";s:5:"3.9.2";}s:29:"wp-migrate-db-pro-media-files";a:2:{s:7:"version";s:5:"1.1.5";s:6:"tested";s:5:"3.9.2";}s:21:"wp-migrate-db-pro-cli";a:2:{s:7:"version";s:5:"1.0.1";s:6:"tested";s:5:"3.9.2";}}', 'yes'),
(1813, '_site_transient_timeout_gforms_userregistration_version', '1409880898', 'yes'),
(1814, '_site_transient_gforms_userregistration_version', 'a:3:{s:12:"is_valid_key";s:1:"1";s:7:"version";s:3:"1.9";s:3:"url";s:195:"http://s3.amazonaws.com/gravityforms/addons/userregistration/gravityformsuserregistration_1.9.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=3kyTJSn%2B6uOqbKYWUYqp967vZsw%3D";}', 'yes'),
(1815, '_transient_timeout_gform_update_info', '1409924098', 'no'),
(1816, '_transient_gform_update_info', 'a:5:{s:7:"headers";a:8:{s:4:"date";s:29:"Thu, 04 Sep 2014 13:34:57 GMT";s:6:"server";s:12:"Apache/2.4.7";s:12:"x-powered-by";s:20:"PHP/5.5.9-1ubuntu4.3";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:14:"content-length";s:4:"1164";s:10:"connection";s:5:"close";s:12:"content-type";s:9:"text/html";}s:4:"body";s:5427:"{"is_valid_key":"1","version":"1.8.12","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/releases\\/gravityforms_1.8.12.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=G0yIjorELYI0QhheG%2FEynpy52PY%3D","expiration_time":1431147600,"offerings":{"gravityforms":{"is_available":true,"version":"1.8.12","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/releases\\/gravityforms_1.8.12.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=G0yIjorELYI0QhheG%2FEynpy52PY%3D"},"gravityformsauthorizenet":{"is_available":true,"version":"1.5","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/authorizenet\\/gravityformsauthorizenet_1.5.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=de2EbIky%2F%2FV7x%2F%2FxPGuPiwNPGOM%3D"},"gravityformsaweber":{"is_available":true,"version":"1.4","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/aweber\\/gravityformsaweber_1.4.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=N1BR89q%2BRt3zwINT9gWCM8YzFbo%3D"},"gravityformscampaignmonitor":{"is_available":true,"version":"2.5","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/campaignmonitor\\/gravityformscampaignmonitor_2.5.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=zwlyWI4ag%2FGvEzNQFhUpmJXCrsA%3D"},"gravityformscoupons":{"is_available":true,"version":"1.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/coupons\\/gravityformscoupons_1.0.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=MeySsaHeBdoaDu1NN1ixSYL0D6c%3D"},"gravityformsfreshbooks":{"is_available":true,"version":"1.5","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/freshbooks\\/gravityformsfreshbooks_1.5.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=hR25IxY%2BXkl%2BT6CIYjA3892BGXE%3D"},"gravityformslogging":{"is_available":true,"version":"1.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/authorizenet\\/gravityformsauthorizenet_1.3.4.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=9KVrpRPMlK%2B%2F42AqADelq9cDBZE%3D"},"gravityformsmailchimp":{"is_available":true,"version":"2.4","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/mailchimp\\/gravityformsmailchimp_2.4.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=31DkHhO6qa8QQnsh7hDcZcSZaqQ%3D"},"gravityformspaypal":{"is_available":true,"version":"1.10","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/paypal\\/gravityformspaypal_1.10.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=Z4VYQ2rvPmL7DUJXc7waLVxQ01c%3D"},"gravityformspaypalpaymentspro":{"is_available":true,"version":"1.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/paypalpaymentspro\\/gravityformspaypalpaymentspro_1.0.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=sMlyv9nXn4DAbmkArEntuPPbLPI%3D"},"gravityformspaypalpro":{"is_available":true,"version":"1.3","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/paypalpro\\/gravityformspaypalpro_1.3.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=aGl27Ks%2FpcDqFHnUHB%2FRYoFqDmQ%3D"},"gravityformspicatcha":{"is_available":true,"version":"2.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/picatcha\\/gravityformspicatcha_2.0.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=jxXWshDdW%2FlQBLLETsOo%2BIfh06M%3D"},"gravityformspolls":{"is_available":true,"version":"2.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/polls\\/gravityformspolls_2.0.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=2UJ0jZMJhVfC%2FE1v%2FyTpRLo%2F8tg%3D"},"gravityformsquiz":{"is_available":true,"version":"2.1","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/quiz\\/gravityformsquiz_2.1.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=ycIVMV%2B6aTpyb7WJ8F6myuhwkGw%3D"},"gravityformssignature":{"is_available":true,"version":"2.2","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/signature\\/gravityformssignature_2.2.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=tLhzrRouG9%2BhL4OX%2BwRcTmwpnGQ%3D"},"gravityformsstripe":{"is_available":true,"version":"1.2","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/stripe\\/gravityformsstripe_1.2.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=nVm7H%2FW2Vv%2FJID89llnsR7h4Lzs%3D"},"gravityformssurvey":{"is_available":true,"version":"2.1","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/survey\\/gravityformssurvey_2.1.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=5j%2BieOQdv3k4NVJJ63z%2FM2Wwum8%3D"},"gravityformstwilio":{"is_available":true,"version":"1.0","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/twilio\\/gravityformstwilio_1.0.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=VUIr4YcOUCTPdsl%2FanwkAAm7qdg%3D"},"gravityformsuserregistration":{"is_available":true,"version":"1.9","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/userregistration\\/gravityformsuserregistration_1.9.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=3kyTJSn%2B6uOqbKYWUYqp967vZsw%3D"},"gravityformszapier":{"is_available":true,"version":"1.4","url":"http:\\/\\/s3.amazonaws.com\\/gravityforms\\/addons\\/zapier\\/gravityformszapier_1.4.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=OCJe%2BBtMnwUbvQsGJzU7DVQDhrw%3D"}},"is_active":"1"}";s:8:"response";a:2:{s:4:"code";i:200;s:7:"message";s:2:"OK";}s:7:"cookies";a:0:{}s:8:"filename";N;}', 'no'),
(1817, '_site_transient_timeout_gforms_mailchimp_version', '1409880898', 'yes'),
(1818, '_site_transient_gforms_mailchimp_version', 'a:3:{s:12:"is_valid_key";s:1:"1";s:7:"version";s:3:"2.4";s:3:"url";s:179:"http://s3.amazonaws.com/gravityforms/addons/mailchimp/gravityformsmailchimp_2.4.zip?AWSAccessKeyId=1603BBK66770VCSCJSG2&Expires=1410010497&Signature=31DkHhO6qa8QQnsh7hDcZcSZaqQ%3D";}', 'yes'),
(1833, '_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1409895141', 'no') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1834, '_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n\n\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:51:"\n	\n	\n	\n	\n	\n	\n		\n		\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"WordPress News";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:25:"http://wordpress.org/news";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:14:"WordPress News";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:13:"lastBuildDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 17:05:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:5:"en-US";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:27:"http://wordpress.org/?v=4.0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:10:{i:0;a:6:{s:4:"data";s:42:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"WordPress 4.0 “Benny”";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:40:"http://wordpress.org/news/2014/09/benny/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:49:"http://wordpress.org/news/2014/09/benny/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 17:05:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3296";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:370:"Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:23288:"<p>Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader <a href="http://en.wikipedia.org/wiki/Benny_Goodman">Benny Goodman</a>, is available <a href="http://wordpress.org/download/">for download</a> or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id="v-bUdzKMro-1" class="video-player"><embed id="v-bUdzKMro-1-video" src="http://s0.videopress.com/player.swf?v=1.03&amp;guid=bUdzKMro&amp;isDynamicSeeking=true" type="application/x-shockwave-flash" width="692" height="388" title="Introducing WordPress 4.0 &quot;Benny&quot;" wmode="direct" seamlesstabbing="true" allowfullscreen="true" allowscriptaccess="always" overstretch="true"></embed></div>\n<hr />\n<h2 style="text-align: center">Manage your media with style</h2>\n<p><img class="alignnone size-full wp-image-3316" src="http://i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406" alt="Media Library" data-recalc-dims="1" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2 style="text-align: center">Working with embeds has never been easier</h2>\n<div style="width: 632px; height: 445px; " class="wp-video"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class="wp-video-shortcode" id="video-3296-1" width="632" height="445" autoplay="true" preload="metadata" controls="controls"><source type="video/mp4" src="//s.w.org/images/core/4.0/embed.mp4?_=1" /><source type="video/webm" src="//s.w.org/images/core/4.0/embed.webm?_=1" /><source type="video/ogg" src="//s.w.org/images/core/4.0/embed.ogv?_=1" /><a href="//s.w.org/images/core/4.0/embed.mp4">//s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah — embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>We’ve expanded the services supported by default, too — you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED. <a href="http://codex.wordpress.org/Embeds">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2 style="text-align: center">Focus on your content</h2>\n<div style="width: 632px; height: 356px; " class="wp-video"><video class="wp-video-shortcode" id="video-3296-2" width="632" height="356" autoplay="true" preload="metadata" controls="controls"><source type="video/mp4" src="//s.w.org/images/core/4.0/focus.mp4?_=2" /><source type="video/webm" src="//s.w.org/images/core/4.0/focus.webm?_=2" /><source type="video/ogg" src="//s.w.org/images/core/4.0/focus.ogv?_=2" /><a href="//s.w.org/images/core/4.0/focus.mp4">//s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2 style="text-align: center">Finding the right plugin</h2>\n<p><img class="aligncenter size-large wp-image-3309" src="http://i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405" alt="Add plugins" data-recalc-dims="1" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2 style="text-align: center">The Ensemble</h2>\n<p>This release was led by <a href="http://helenhousandi.com">Helen Hou-Sandí</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href="http://profiles.wordpress.org/sharonaustin">_Redd</a>, <a href="http://profiles.wordpress.org/aaroncampbell">Aaron D. Campbell</a>, <a href="http://profiles.wordpress.org/jorbin">Aaron Jorbin</a>, <a href="http://profiles.wordpress.org/adamsilverstein">Adam Silverstein</a>, <a href="http://profiles.wordpress.org/viper007bond">Alex Mills (Viper007Bond)</a>, <a href="http://profiles.wordpress.org/tellyworth">Alex Shiels</a>, <a href="http://profiles.wordpress.org/alexanderrohmann">Alexander Rohmann</a>, <a href="http://profiles.wordpress.org/aliso">Alison Barrett</a>, <a href="http://profiles.wordpress.org/collinsinternet">Allan Collins</a>, <a href="http://profiles.wordpress.org/amit">Amit Gupta</a>, <a href="http://profiles.wordpress.org/sabreuse">Amy Hendrix (sabreuse)</a>, <a href="http://profiles.wordpress.org/afercia">Andrea Fercia</a>, <a href="http://profiles.wordpress.org/andrezrv">Andres Villarreal</a>, <a href="http://profiles.wordpress.org/zamfeer">Andrew Mowe</a>, <a href="http://profiles.wordpress.org/nacin">Andrew Nacin</a>, <a href="http://profiles.wordpress.org/azaozz">Andrew Ozz</a>, <a href="http://profiles.wordpress.org/andy">Andy Skelton</a>, <a href="http://profiles.wordpress.org/ankit-k-gupta">Ankit K Gupta</a>, <a href="http://profiles.wordpress.org/atimmer">Anton Timmermans</a>, <a href="http://profiles.wordpress.org/arnee">Arne Brachhold</a>, <a href="http://profiles.wordpress.org/aubreypwd">Aubrey Portwood</a>, <a href="http://profiles.wordpress.org/filosofo">Austin Matzko</a>, <a href="http://profiles.wordpress.org/empireoflight">Ben Dunkle</a>, <a href="http://profiles.wordpress.org/kau-boy">Bernhard Kau</a>, <a href="http://profiles.wordpress.org/boonebgorges">Boone Gorges</a>, <a href="http://profiles.wordpress.org/bradyvercher">Brady Vercher</a>, <a href="http://profiles.wordpress.org/bramd">bramd</a>, <a href="http://profiles.wordpress.org/kraftbj">Brandon Kraft</a>, <a href="http://profiles.wordpress.org/krogsgard">Brian Krogsgard</a>, <a href="http://profiles.wordpress.org/brianlayman">Brian Layman</a>, <a href="http://profiles.wordpress.org/rzen">Brian Richards</a>, <a href="http://profiles.wordpress.org/camdensegal">camden</a>, <a href="http://profiles.wordpress.org/lukecarbis">Carbis</a>, <a href="http://profiles.wordpress.org/sixhours">Caroline Moore</a>, <a href="http://profiles.wordpress.org/mackensen">Charles Fulton</a>, <a href="http://profiles.wordpress.org/chouby">Chouby</a>, <a href="http://profiles.wordpress.org/chrico">ChriCo</a>, <a href="http://profiles.wordpress.org/c3mdigital">Chris Olbekson</a>, <a href="http://profiles.wordpress.org/chrisl27">chrisl27</a>, <a href="http://profiles.wordpress.org/caxelsson">Christian Axelsson</a>, <a href="http://profiles.wordpress.org/cfinke">Christopher Finke</a>, <a href="http://profiles.wordpress.org/boda1982">Christopher Spires</a>, <a href="http://profiles.wordpress.org/clifgriffin">Clifton Griffin</a>, <a href="http://profiles.wordpress.org/codenameeli">codenameEli</a>, <a href="http://profiles.wordpress.org/jupiterwise">Corey McKrill</a>, <a href="http://profiles.wordpress.org/corphi">Corphi</a>, <a href="http://profiles.wordpress.org/extendwings">Daisuke Takahashi</a>, <a href="http://profiles.wordpress.org/ghost1227">Dan Griffiths</a>, <a href="http://profiles.wordpress.org/danielbachhuber">Daniel Bachhuber</a>, <a href="http://profiles.wordpress.org/danielhuesken">Daniel Husken</a>, <a href="http://profiles.wordpress.org/redsweater">Daniel Jalkut (Red Sweater)</a>, <a href="http://profiles.wordpress.org/dannydehaan">Danny de Haan</a>, <a href="http://profiles.wordpress.org/dkotter">Darin Kotter</a>, <a href="http://profiles.wordpress.org/koop">Daryl Koopersmith</a>, <a href="http://profiles.wordpress.org/dllh">Daryl L. L. Houston (dllh)</a>, <a href="http://profiles.wordpress.org/davidakennedy">David A. Kennedy</a>, <a href="http://profiles.wordpress.org/dlh">David Herrera</a>, <a href="http://profiles.wordpress.org/dnaber-de">David Naber</a>, <a href="http://profiles.wordpress.org/davidthemachine">DavidTheMachine</a>, <a href="http://profiles.wordpress.org/debaat">DeBAAT</a>, <a href="http://profiles.wordpress.org/dd32">Dion Hulse</a>, <a href="http://profiles.wordpress.org/ocean90">Dominik Schilling</a>, <a href="http://profiles.wordpress.org/donncha">Donncha O Caoimh</a>, <a href="http://profiles.wordpress.org/drewapicture">Drew Jaynes</a>, <a href="http://profiles.wordpress.org/dustyn">dustyn</a>, <a href="http://profiles.wordpress.org/eddiemoya">Eddie Moya</a>, <a href="http://profiles.wordpress.org/oso96_2000">Eduardo Reveles</a>, <a href="http://profiles.wordpress.org/edwin-at-studiojoyocom">Edwin Siebel</a>, <a href="http://profiles.wordpress.org/ehg">ehg</a>, <a href="http://profiles.wordpress.org/tmeister">Enrique Chavez</a>, <a href="http://profiles.wordpress.org/erayalakese">erayalakese</a>, <a href="http://profiles.wordpress.org/ericlewis">Eric Andrew Lewis</a>, <a href="http://profiles.wordpress.org/ebinnion">Eric Binnion</a>, <a href="http://profiles.wordpress.org/ericmann">Eric Mann</a>, <a href="http://profiles.wordpress.org/ejdanderson">Evan Anderson</a>, <a href="http://profiles.wordpress.org/eherman24">Evan Herman</a>, <a href="http://profiles.wordpress.org/fab1en">Fabien Quatravaux</a>, <a href="http://profiles.wordpress.org/fahmiadib">Fahmi Adib</a>, <a href="http://profiles.wordpress.org/feedmeastraycat">feedmeastraycat</a>, <a href="http://profiles.wordpress.org/frank-klein">Frank Klein</a>, <a href="http://profiles.wordpress.org/garhdez">garhdez</a>, <a href="http://profiles.wordpress.org/garyc40">Gary Cao</a>, <a href="http://profiles.wordpress.org/garyj">Gary Jones</a>, <a href="http://profiles.wordpress.org/pento">Gary Pendergast</a>, <a href="http://profiles.wordpress.org/garza">garza</a>, <a href="http://profiles.wordpress.org/gauravmittal1995">gauravmittal1995</a>, <a href="http://profiles.wordpress.org/gavra">Gavrisimo</a>, <a href="http://profiles.wordpress.org/georgestephanis">George Stephanis</a>, <a href="http://profiles.wordpress.org/grahamarmfield">Graham Armfield</a>, <a href="http://profiles.wordpress.org/vancoder">Grant Mangham</a>, <a href="http://profiles.wordpress.org/gcorne">Gregory Cornelius</a>, <a href="http://profiles.wordpress.org/bordoni">Gustavo Bordoni</a>, <a href="http://profiles.wordpress.org/harrym">harrym</a>, <a href="http://profiles.wordpress.org/hebbet">hebbet</a>, <a href="http://profiles.wordpress.org/hinnerk">Hinnerk Altenburg</a>, <a href="http://profiles.wordpress.org/hlashbrooke">Hugh Lashbrooke</a>, <a href="http://profiles.wordpress.org/iljoja">iljoja</a>, <a href="http://profiles.wordpress.org/imath">imath</a>, <a href="http://profiles.wordpress.org/ipstenu">Ipstenu (Mika Epstein)</a>, <a href="http://profiles.wordpress.org/issuu">issuu</a>, <a href="http://profiles.wordpress.org/jdgrimes">J.D. Grimes</a>, <a href="http://profiles.wordpress.org/jacklenox">Jack Lenox</a>, <a href="http://profiles.wordpress.org/jackreichert">Jack Reichert</a>, <a href="http://profiles.wordpress.org/jacobdubail">Jacob Dubail</a>, <a href="http://profiles.wordpress.org/janhenkg">JanHenkG</a>, <a href="http://profiles.wordpress.org/avryl">Janneke Van Dorpe</a>, <a href="http://profiles.wordpress.org/jaza613">Jaza613</a>, <a href="http://profiles.wordpress.org/jeffstieler">Jeff Stieler</a>, <a href="http://profiles.wordpress.org/jeremyfelt">Jeremy Felt</a>, <a href="http://profiles.wordpress.org/jpry">Jeremy Pry</a>, <a href="http://profiles.wordpress.org/slimndap">Jeroen Schmit</a>, <a href="http://profiles.wordpress.org/jerrysarcastic">Jerry Bates (jerrysarcastic)</a>, <a href="http://profiles.wordpress.org/jesin">Jesin A</a>, <a href="http://profiles.wordpress.org/jayjdk">Jesper Johansen (jayjdk)</a>, <a href="http://profiles.wordpress.org/jesper800">Jesper van Engelen</a>, <a href="http://profiles.wordpress.org/engelen">Jesper van Engelen</a>, <a href="http://profiles.wordpress.org/jessepollak">Jesse Pollak</a>, <a href="http://profiles.wordpress.org/jgadbois">jgadbois</a>, <a href="http://profiles.wordpress.org/jartes">Joan Artes</a>, <a href="http://profiles.wordpress.org/joedolson">Joe Dolson</a>, <a href="http://profiles.wordpress.org/joehoyle">Joe Hoyle</a>, <a href="http://profiles.wordpress.org/jkudish">Joey Kudish</a>, <a href="http://profiles.wordpress.org/johnbillion">John Blackbourn</a>, <a href="http://profiles.wordpress.org/johnjamesjacoby">John James Jacoby</a>, <a href="http://profiles.wordpress.org/johnzanussi">John Zanussi</a>, <a href="http://profiles.wordpress.org/duck_">Jon Cave</a>, <a href="http://profiles.wordpress.org/jonnyauk">jonnyauk</a>, <a href="http://profiles.wordpress.org/joostdevalk">Joost de Valk</a>, <a href="http://profiles.wordpress.org/softmodeling">Jordi Cabot</a>, <a href="http://profiles.wordpress.org/jjeaton">Josh Eaton</a>, <a href="http://profiles.wordpress.org/tai">JOTAKI Taisuke</a>, <a href="http://profiles.wordpress.org/juliobox">Julio Potier</a>, <a href="http://profiles.wordpress.org/justinsainton">Justin Sainton</a>, <a href="http://profiles.wordpress.org/jtsternberg">Justin Sternberg</a>, <a href="http://profiles.wordpress.org/greenshady">Justin Tadlock</a>, <a href="http://profiles.wordpress.org/jwenerd">jwenerd</a>, <a href="http://profiles.wordpress.org/kadamwhite">K.Adam White</a>, <a href="http://profiles.wordpress.org/trepmal">Kailey (trepmal)</a>, <a href="http://profiles.wordpress.org/ixkaito">Kaito</a>, <a href="http://profiles.wordpress.org/kapeels">kapeels</a>, <a href="http://profiles.wordpress.org/ryelle">Kelly Dwan</a>, <a href="http://profiles.wordpress.org/kevinlangleyjr">Kevin Langley</a>, <a href="http://profiles.wordpress.org/kworthington">Kevin Worthington</a>, <a href="http://profiles.wordpress.org/kpdesign">Kim Parsell</a>, <a href="http://profiles.wordpress.org/kwight">Kirk Wight</a>, <a href="http://profiles.wordpress.org/kitchin">kitchin</a>, <a href="http://profiles.wordpress.org/knutsp">Knut Sparhell</a>, <a href="http://profiles.wordpress.org/kovshenin">Konstantin Kovshenin</a>, <a href="http://profiles.wordpress.org/obenland">Konstantin Obenland</a>, <a href="http://profiles.wordpress.org/kurtpayne">Kurt Payne</a>, <a href="http://profiles.wordpress.org/lancewillett">Lance Willett</a>, <a href="http://profiles.wordpress.org/leewillis77">Lee Willis</a>, <a href="http://profiles.wordpress.org/lessbloat">lessbloat</a>, <a href="http://profiles.wordpress.org/layotte">Lew Ayotte</a>, <a href="http://profiles.wordpress.org/lritter">lritter</a>, <a href="http://profiles.wordpress.org/lgedeon">Luke Gedeon</a>, <a href="http://profiles.wordpress.org/m_i_n">m_i_n</a>, <a href="http://profiles.wordpress.org/funkatronic">Manny Fleurmond</a>, <a href="http://profiles.wordpress.org/targz-1">Manuel Schmalstieg</a>, <a href="http://profiles.wordpress.org/clorith">Marius Jensen (Clorith)</a>, <a href="http://profiles.wordpress.org/markjaquith">Mark Jaquith</a>, <a href="http://profiles.wordpress.org/markoheijnen">Marko Heijnen</a>, <a href="http://profiles.wordpress.org/mjbanks">Matt Banks</a>, <a href="http://profiles.wordpress.org/sivel">Matt Martz</a>, <a href="http://profiles.wordpress.org/matt">Matt Mullenweg</a>, <a href="http://profiles.wordpress.org/mattwiebe">Matt Wiebe</a>, <a href="http://profiles.wordpress.org/mboynes">Matthew Boynes</a>, <a href="http://profiles.wordpress.org/mdbitz">Matthew Denton</a>, <a href="http://profiles.wordpress.org/mattheweppelsheimer">Matthew Eppelsheimer</a>, <a href="http://profiles.wordpress.org/mattheu">Matthew Haines-Young</a>, <a href="http://profiles.wordpress.org/mattyrob">mattyrob</a>, <a href="http://profiles.wordpress.org/meekyhwang">meekyhwang</a>, <a href="http://profiles.wordpress.org/melchoyce">Mel Choyce</a>, <a href="http://profiles.wordpress.org/midxcat">mi_cat</a>, <a href="http://profiles.wordpress.org/mdawaffe">Michael Adams (mdawaffe)</a>, <a href="http://profiles.wordpress.org/michalzuber">michalzuber</a>, <a href="http://profiles.wordpress.org/mauteri">Mike Auteri</a>, <a href="http://profiles.wordpress.org/mikehansenme">Mike Hansen</a>, <a href="http://profiles.wordpress.org/mikelittle">Mike Little</a>, <a href="http://profiles.wordpress.org/mikemanger">Mike Manger</a>, <a href="http://profiles.wordpress.org/dh-shredder">Mike Schroder</a>, <a href="http://profiles.wordpress.org/mikejolley">mikejolley</a>, <a href="http://profiles.wordpress.org/mikeyarce">mikeyarce</a>, <a href="http://profiles.wordpress.org/dimadin">Milan Dinic</a>, <a href="http://profiles.wordpress.org/mnelson4">mnelson4</a>, <a href="http://profiles.wordpress.org/morganestes">Morgan Estes</a>, <a href="http://profiles.wordpress.org/usermrpapa">Mr Papa</a>, <a href="http://profiles.wordpress.org/mrmist">mrmist</a>, <a href="http://profiles.wordpress.org/m_uysl">Mustafa Uysal</a>, <a href="http://profiles.wordpress.org/muvimotv">MuViMoTV</a>, <a href="http://profiles.wordpress.org/nabil_kadimi">nabil_kadimi</a>, <a href="http://profiles.wordpress.org/namibia">Namibia</a>, <a href="http://profiles.wordpress.org/alex-ye">Nashwan Doaqan</a>, <a href="http://profiles.wordpress.org/nd987">nd987</a>, <a href="http://profiles.wordpress.org/neil_pie">Neil Pie</a>, <a href="http://profiles.wordpress.org/niallkennedy">Niall Kennedy</a>, <a href="http://profiles.wordpress.org/celloexpressions">Nick Halsey</a>, <a href="http://profiles.wordpress.org/nbachiyski">Nikolay Bachiyski</a>, <a href="http://profiles.wordpress.org/schoenwaldnils">Nils Schonwald</a>, <a href="http://profiles.wordpress.org/ninos-ego">Ninos</a>, <a href="http://profiles.wordpress.org/nvwd">Nowell VanHoesen</a>, <a href="http://profiles.wordpress.org/compute">Patrick Hesselberg</a>, <a href="http://profiles.wordpress.org/pbearne">Paul Bearne</a>, <a href="http://profiles.wordpress.org/pdclark">Paul Clark</a>, <a href="http://profiles.wordpress.org/paulwilde">Paul Wilde</a>, <a href="http://profiles.wordpress.org/paulschreiber">paulschreiber</a>, <a href="http://profiles.wordpress.org/pavelevap">pavelevap</a>, <a href="http://profiles.wordpress.org/westi">Peter Westwood</a>, <a href="http://profiles.wordpress.org/philiparthurmoore">Philip Arthur Moore</a>, <a href="http://profiles.wordpress.org/philipjohn">Philip John</a>, <a href="http://profiles.wordpress.org/senlin">Piet</a>, <a href="http://profiles.wordpress.org/psoluch">Piotr Soluch</a>, <a href="http://profiles.wordpress.org/mordauk">Pippin Williamson</a>, <a href="http://profiles.wordpress.org/purzlbaum">purzlbaum</a>, <a href="http://profiles.wordpress.org/rachelbaker">Rachel Baker</a>, <a href="http://profiles.wordpress.org/rclations">rclations</a>, <a href="http://profiles.wordpress.org/iamfriendly">Richard Tape</a>, <a href="http://profiles.wordpress.org/rickalee">Ricky Lee Whittemore</a>, <a href="http://profiles.wordpress.org/rob1n">rob1n</a>, <a href="http://profiles.wordpress.org/miqrogroove">Robert Chapin</a>, <a href="http://profiles.wordpress.org/rdall">Robert Dall</a>, <a href="http://profiles.wordpress.org/harmr">RobertHarm</a>, <a href="http://profiles.wordpress.org/rohan013">Rohan Rawat</a>, <a href="http://profiles.wordpress.org/rhurling">Rouven Hurling</a>, <a href="http://profiles.wordpress.org/ruudjoyo">Ruud Laan</a>, <a href="http://profiles.wordpress.org/ryan">Ryan Boren</a>, <a href="http://profiles.wordpress.org/rmccue">Ryan McCue</a>, <a href="http://profiles.wordpress.org/sammybeats">Sam Brodie</a>, <a href="http://profiles.wordpress.org/otto42">Samuel Wood (Otto)</a>, <a href="http://profiles.wordpress.org/sathishn">sathishn</a>, <a href="http://profiles.wordpress.org/coffee2code">Scott Reilly</a>, <a href="http://profiles.wordpress.org/wonderboymusic">Scott Taylor</a>, <a href="http://profiles.wordpress.org/greglone">ScreenfeedFr</a>, <a href="http://profiles.wordpress.org/scribu">scribu</a>, <a href="http://profiles.wordpress.org/seanchayes">Sean Hayes</a>, <a href="http://profiles.wordpress.org/nessworthy">Sean Nessworthy</a>, <a href="http://profiles.wordpress.org/sergejmueller">Sergej Muller</a>, <a href="http://profiles.wordpress.org/sergeybiryukov">Sergey Biryukov</a>, <a href="http://profiles.wordpress.org/shanebp">shanebp</a>, <a href="http://profiles.wordpress.org/shaunandrews">Shaun Andrews</a>, <a href="http://profiles.wordpress.org/simonwheatley">Simon Wheatley</a>, <a href="http://profiles.wordpress.org/simonp303">simonp303</a>, <a href="http://profiles.wordpress.org/slobodanmanic">Slobodan Manic</a>, <a href="http://profiles.wordpress.org/solarissmoke">solarissmoke</a>, <a href="http://profiles.wordpress.org/sphoid">sphoid</a>, <a href="http://profiles.wordpress.org/stephdau">Stephane Daury</a>, <a href="http://profiles.wordpress.org/netweb">Stephen Edgar</a>, <a href="http://profiles.wordpress.org/stompweb">Steven Jones</a>, <a href="http://profiles.wordpress.org/strangerstudios">strangerstudios</a>, <a href="http://profiles.wordpress.org/5um17">Sumit Singh</a>, <a href="http://profiles.wordpress.org/sumobi">sumobi</a>, <a href="http://profiles.wordpress.org/t4k1s">t4k1s</a>, <a href="http://profiles.wordpress.org/iamtakashi">Takashi Irie</a>, <a href="http://profiles.wordpress.org/taylorde">Taylor Dewey</a>, <a href="http://profiles.wordpress.org/thomasvanderbeek">Thomas van der Beek</a>, <a href="http://profiles.wordpress.org/tillkruess">Till Kruss</a>, <a href="http://profiles.wordpress.org/tobiasbg">TobiasBg</a>, <a href="http://profiles.wordpress.org/tjnowell">Tom J Nowell</a>, <a href="http://profiles.wordpress.org/willmot">Tom Willmot</a>, <a href="http://profiles.wordpress.org/topher1kenobe">Topher</a>, <a href="http://profiles.wordpress.org/torresga">torresga</a>, <a href="http://profiles.wordpress.org/liljimmi">Tracy Levesque</a>, <a href="http://profiles.wordpress.org/wpsmith">Travis Smith</a>, <a href="http://profiles.wordpress.org/treyhunner">treyhunner</a>, <a href="http://profiles.wordpress.org/umeshsingla">Umesh Kumar</a>, <a href="http://profiles.wordpress.org/vinod-dalvi">Vinod Dalvi</a>, <a href="http://profiles.wordpress.org/vlajos">vlajos</a>, <a href="http://profiles.wordpress.org/voldemortensen">voldemortensen</a>, <a href="http://profiles.wordpress.org/westonruter">Weston Ruter</a>, <a href="http://profiles.wordpress.org/winterdev">winterDev</a>, <a href="http://profiles.wordpress.org/wojtekszkutnik">Wojtek Szkutnik</a>, <a href="http://profiles.wordpress.org/yoavf">Yoav Farhi</a>, <a href="http://profiles.wordpress.org/katzwebdesign">Zack Katz</a>, <a href="http://profiles.wordpress.org/tollmanz">Zack Tollman</a>, and <a href="http://profiles.wordpress.org/zoerooney">Zoe Rooney</a>. Also thanks to <a href="http://michaelpick.wordpress.com/">Michael Pick</a> for producing the release video, and Helen with <a href="http://adriansandi.com">Adrián Sandí</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href="http://make.wordpress.org/">Make WordPress</a> and our <a href="http://make.wordpress.org/core/">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:45:"http://wordpress.org/news/2014/09/benny/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:31:"WordPress 4.0 Release Candidate";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:75:"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 12:20:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:11:"Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3287";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:321:"The first release candidate for WordPress 4.0 is now available! In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there. If you [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Helen Hou-Sandi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2127:"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href="http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present. (Please, not on a production site, unless you’re adventurous.)</p>\n<p><strong>Think you’ve found a bug? </strong>Please post to the <a href="http://wordpress.org/support/forum/alphabeta/">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href="http://core.trac.wordpress.org/report/5">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try the <a href="http://wordpress.org/extend/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="http://wordpress.org/wordpress-4.0-RC1.zip">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src="http://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692" alt="" width="16" height="16" /> → About</strong> in the toolbar).</p>\n<p><strong>Developers,</strong> please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release. You also may want to <a href="http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:71:"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"WordPress 4.0 Beta 4";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:64:"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 15 Aug 2014 05:06:19 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:11:"Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3280";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:353:"The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made more than 250 changes in the past month, including: Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes. Better handling of small screens in the media library modals. A separate bulk selection mode [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Helen Hou-Sandi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1999:"<p>The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made <a href="https://core.trac.wordpress.org/log?rev=29496&amp;stop_rev=29229&amp;limit=300">more than 250 changes</a> in the past month, including:</p>\n<ul>\n<li>Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes.</li>\n<li>Better handling of small screens in the media library modals.</li>\n<li>A separate bulk selection mode for the media library grid view.</li>\n<li>Improvements to the installation language selector.</li>\n<li>Visual tweaks to plugin details and customizer panels.</li>\n</ul>\n<p><strong>We need your help</strong>. We’re still aiming for a release this month, which means the next week will be critical for identifying and squashing bugs. If you’re just joining us, please see <a href="http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/">the Beta 1 announcement post</a> for what to look out for.</p>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href="http://wordpress.org/support/forum/alphabeta">Alpha/Beta area</a> in the support forums, where friendly moderators are standing by. <b>Plugin developers</b><strong>,</strong> if you haven’t tested WordPress 4.0 yet, now is the time — and be sure to update the “tested up to” version for your plugins so they’re listed as compatible with 4.0.</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href="http://wordpress.org/extend/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="http://wordpress.org/wordpress-4.0-beta4.zip">download the beta here</a> (zip).</p>\n<p><em>We are working hard</em><br />\n<em>To finish up 4.0<br />\n</em><em>Will you help us too?</em></p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.org/news/2014/08/wordpress-4-0-beta-4/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:32:"WordPress 3.9.2 Security Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:50:"http://wordpress.org/news/2014/08/wordpress-3-9-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/news/2014/08/wordpress-3-9-2/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 06 Aug 2014 19:04:27 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Security";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3269";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:377:"WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately. This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by Nir Goldshlager of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Andrew Nacin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2352:"<p>WordPress 3.9.2 is now available as a security release for all previous versions. We strongly encourage you to update your sites immediately.</p>\n<p>This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by <a href="https://twitter.com/nirgoldshlager">Nir Goldshlager</a> of the Salesforce.com Product Security Team. It  was fixed by Michael Adams and Andrew Nacin of the WordPress security team and David Rothstein of the <a href="https://www.drupal.org/SA-CORE-2014-004">Drupal security team</a>. This is the first time our two projects have coordinated joint security releases.</p>\n<p>WordPress 3.9.2 also contains other security changes:</p>\n<ul>\n<li>Fixes a possible but unlikely code execution when processing widgets (WordPress is not affected by default), discovered by <a href="http://www.buayacorp.com/">Alex Concha</a> of the WordPress security team.</li>\n<li>Prevents information disclosure via XML entity attacks in the external GetID3 library, reported by <a href="http://onsec.ru/en/">Ivan Novikov</a> of ONSec.</li>\n<li>Adds protections against brute attacks against CSRF tokens, reported by <a href="http://systemoverlord.com/">David Tomaschik</a> of the Google Security Team.</li>\n<li>Contains some additional security hardening, like preventing cross-site scripting that could be triggered only by administrators.</li>\n</ul>\n<p>We appreciated responsible disclosure of these issues directly to our security team. For more information, see the <a href="http://codex.wordpress.org/Version_3.9.2">release notes</a> or consult the <a href="https://core.trac.wordpress.org/log/branches/3.9?stop_rev=29383&amp;rev=29411">list of changes</a>.</p>\n<p><a href="https://wordpress.org/download/">Download WordPress 3.9.2</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now&#8221;.</p>\n<p>Sites that support automatic background updates will be updated to WordPress 3.9.2 within 12 hours. (If you are still on WordPress 3.8.3 or 3.7.3, you will also be updated to 3.8.4 or 3.7.4. We don&#8217;t support older versions, so please update to 3.9.2 for the latest and greatest.)</p>\n<p>Already testing WordPress 4.0? The third beta is <a href="https://wordpress.org/wordpress-4.0-beta3.zip">now available</a> (zip) and it contains these security fixes.</p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/08/wordpress-3-9-2/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"WordPress 4.0 Beta 2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:64:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 18 Jul 2014 21:15:35 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:11:"Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3261";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:374:"WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can download the beta here (zip). For more of what’s new in version 4.0, check out [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Helen Hou-Sandi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1738:"<p>WordPress 4.0 Beta 2 is now available for download and testing. This is software still in development, so we don’t recommend that you run it on a production site. To get the beta, try the <a href="http://wordpress.org/extend/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="http://wordpress.org/wordpress-4.0-beta2.zip">download the beta here</a> (zip).</p>\n<p>For more of what’s new in version 4.0, <a href="http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/">check out the Beta 1 blog post</a>. Some of the changes in Beta 2 include:</p>\n<ul>\n<li>Further refinements for the the plugin installation and media library experiences.</li>\n<li>Updated TinyMCE, which now includes better indentation for lists and the restoration of the color picker.</li>\n<li>Cookies are now tied to a session internally, so if you have trouble logging in, <a href="https://core.trac.wordpress.org/ticket/20276">#20276</a> may be the culprit.</li>\n<li>Various bug fixes (there were <a href="https://core.trac.wordpress.org/log?rev=29228&amp;stop_rev=29060&amp;limit=200">nearly 170 changes</a> since last week).</li>\n</ul>\n<p>If you think you’ve found a bug, you can post to the <a href="http://wordpress.org/support/forum/alphabeta">Alpha/Beta area</a> in the support forums. Or, if you’re comfortable writing a bug report, <a href="http://core.trac.wordpress.org/">file one on the WordPress Trac</a>. There, you can also find <a href="http://core.trac.wordpress.org/tickets/major">a list of known bugs</a> and <a href="http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0">everything we’ve fixed</a>.</p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-2/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"WordPress 4.0 Beta 1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:64:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 10 Jul 2014 10:17:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:11:"Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3248";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:329:"WordPress 4.0 Beta 1 is now available! This software is still in development, so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the WordPress Beta Tester plugin (you’ll want “bleeding edge nightlies”). Or you can [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Helen Hou-Sandi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:4025:"<p>WordPress 4.0 Beta 1 is now available!</p>\n<p><strong>This software is still in development,</strong> so we don’t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href="http://wordpress.org/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="https://wordpress.org/wordpress-4.0-beta1.zip">download the beta here</a> (zip).</p>\n<p>4.0 is due out next month, but to get there, we need your help testing what we&#8217;ve been working on:</p>\n<ul>\n<li><strong>Previews of <a href="http://codex.wordpress.org/Embeds">embedding via URLs</a></strong> in the visual editor and the &#8220;Insert from URL&#8221; tab in the media modal. Try pasting a URL (such as a <a href="http://wordpress.tv/">WordPress.tv</a> or YouTube video) onto its own line in the visual editor. (<a href="https://core.trac.wordpress.org/ticket/28195">#28195</a>, <a href="https://core.trac.wordpress.org/ticket/15490">#15490</a>)</li>\n<li>The <strong>Media Library</strong> now has a &#8220;grid&#8221; view in addition to the existing list view. Clicking on an item takes you into a modal where you can see a larger preview and edit information about that attachment, and you can navigate between items right from the modal without closing it. (<a href="https://core.trac.wordpress.org/ticket/24716">#24716</a>)</li>\n<li>We&#8217;re freshening up the <strong>plugin install experience</strong>. You&#8217;ll see some early visual changes as well as more information when searching for plugins and viewing details. (<a href="https://core.trac.wordpress.org/ticket/28785">#28785</a>, <a href="https://core.trac.wordpress.org/ticket/27440">#27440</a>)</li>\n<li><strong>Selecting a language</strong> when you run the installation process. (<a href="https://core.trac.wordpress.org/ticket/28577">#28577</a>)</li>\n<li>The <strong>editor</strong> intelligently resizes and its top and bottom bars pin when needed. Browsers don&#8217;t like to agree on where to put things like cursors, so if you find a bug here, please also let us know your browser and operating system. (<a href="https://core.trac.wordpress.org/ticket/28328">#28328</a>)</li>\n<li>We&#8217;ve made some improvements to how your keyboard and cursor interact with <strong>TinyMCE views</strong> such as the gallery preview. Much like the editor resizing and scrolling improvements, knowing about your setup is particularly important for bug reports here. (<a href="https://core.trac.wordpress.org/ticket/28595">#28595</a>)</li>\n<li><strong>Widgets in the Customizer</strong> are now loaded in a separate panel. (<a href="https://core.trac.wordpress.org/ticket/27406">#27406</a>)</li>\n<li>We&#8217;ve also made some changes to some <strong>formatting</strong> functions, so if you see quotes curling in the wrong direction, please file a bug report.</li>\n</ul>\n<p><strong>If you think you’ve found a bug</strong>, you can post to the <a href="http://wordpress.org/support/forum/alphabeta">Alpha/Beta area</a> in the support forums. We’d love to hear from you! If you’re comfortable writing a reproducible bug report, <a href="https://make.wordpress.org/core/reports/">file one on the WordPress Trac</a>. There, you can also find <a href="http://core.trac.wordpress.org/tickets/major">a list of known bugs</a> and <a href="http://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0">everything we’ve fixed</a> so far.</p>\n<p><strong>Developers:</strong> Never fear, we haven&#8217;t forgotten you. There&#8217;s plenty for you, too &#8211; more on that in upcoming posts. In the meantime, check out the <a href="http://make.wordpress.org/core/2014/07/08/customizer-improvements-in-4-0/#customizer-panels">API for panels in the Customizer</a>.</p>\n<p>Happy testing!</p>\n<p><em>Plugins, editor</em><br />\n<em>Media, things in between</em><br />\n<em>Please help look for bugs</em></p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:42:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"WordPress 3.9.1 Maintenance Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:50:"http://wordpress.org/news/2014/05/wordpress-3-9-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/news/2014/05/wordpress-3-9-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 08 May 2014 18:40:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3241";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:385:"After three weeks and more than 9 million downloads of WordPress 3.9, we&#8217;re pleased to announce that WordPress 3.9.1 is now available. This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Andrew Nacin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:3077:"<p>After three weeks and more than 9 million downloads of <a title="WordPress 3.9 “Smith”" href="http://wordpress.org/news/2014/04/smith/">WordPress 3.9</a>, we&#8217;re pleased to announce that WordPress 3.9.1 is now available.</p>\n<p>This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video playlists feature and made some adjustments to improve performance. For a full list of changes, consult the <a href="https://core.trac.wordpress.org/query?milestone=3.9.1">list of tickets</a> and the <a href="https://core.trac.wordpress.org/log/branches/3.9?rev=28353&amp;stop_rev=28154">changelog</a>.</p>\n<p>If you are one of the millions already running WordPress 3.9, we&#8217;ve started rolling out automatic background updates for 3.9.1. For sites <a href="http://wordpress.org/plugins/background-update-tester/">that support them</a>, of course.</p>\n<p><a href="http://wordpress.org/download/">Download WordPress 3.9.1</a> or venture over to <strong>Dashboard → Updates</strong> and simply click &#8220;Update Now.&#8221;</p>\n<p>Thanks to all of these fine individuals for contributing to 3.9.1: <a href="http://profiles.wordpress.org/jorbin">Aaron Jorbin</a>, <a href="http://profiles.wordpress.org/nacin">Andrew Nacin</a>, <a href="http://profiles.wordpress.org/azaozz">Andrew Ozz</a>, <a href="http://profiles.wordpress.org/rzen">Brian Richards</a>, <a href="http://profiles.wordpress.org/ehg">Chris Blower</a>, <a href="http://profiles.wordpress.org/jupiterwise">Corey McKrill</a>, <a href="http://profiles.wordpress.org/danielbachhuber">Daniel Bachhuber</a>, <a href="http://profiles.wordpress.org/ocean90">Dominik Schilling</a>, <a href="http://profiles.wordpress.org/feedmeastraycat">feedmeastraycat</a>, <a href="http://profiles.wordpress.org/gcorne">Gregory Cornelius</a>, <a href="http://profiles.wordpress.org/helen">Helen Hou-Sandi</a>, <a href="http://profiles.wordpress.org/imath">imath</a>, <a href="http://profiles.wordpress.org/avryl">Janneke Van Dorpe</a>, <a href="http://profiles.wordpress.org/jeremyfelt">Jeremy Felt</a>, <a href="http://profiles.wordpress.org/johnbillion">John Blackbourn</a>, <a href="http://profiles.wordpress.org/obenland">Konstantin Obenland</a>, <a href="http://profiles.wordpress.org/lancewillett">Lance Willett</a>, <a href="http://profiles.wordpress.org/m_i_n">m_i_n</a>, <a href="http://profiles.wordpress.org/clorith">Marius Jensen</a>, <a href="http://profiles.wordpress.org/markjaquith">Mark Jaquith</a>, <a href="http://profiles.wordpress.org/dimadin">Milan Dinić</a>, <a href="http://profiles.wordpress.org/celloexpressions">Nick Halsey</a>, <a href="http://profiles.wordpress.org/pavelevap">pavelevap</a>, <a href="http://profiles.wordpress.org/wonderboymusic">Scott Taylor</a>, <a href="http://profiles.wordpress.org/SergeyBiryukov">Sergey Biryukov</a>, and <a href="http://profiles.wordpress.org/westonruter">Weston Ruter</a>.</p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/05/wordpress-3-9-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:42:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"WordPress 3.9 “Smith”";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:40:"http://wordpress.org/news/2014/04/smith/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:49:"http://wordpress.org/news/2014/04/smith/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 16 Apr 2014 18:33:44 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3154";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:411:"Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist Jimmy Smith, is available for download or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love. A smoother media editing experience Improved visual editing The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:23223:"<p>Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organist <a href="http://en.wikipedia.org/wiki/Jimmy_Smith_(musician)">Jimmy Smith</a>, is available <a href="http://wordpress.org/download/">for download</a> or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love.</p>\n<embed src="//v0.wordpress.com/player.swf?v=1.03" type="application/x-shockwave-flash" width="640" height="360" wmode="direct" seamlesstabbing="true" allowfullscreen="true" allowscriptaccess="always" overstretch="true" flashvars="guid=sAiXhCfV&amp;isDynamicSeeking=true" title=""></embed>\n<h2 class="about-headline-callout" style="text-align: center">A smoother media editing experience</h2>\n<div>\n<p><img class="alignright wp-image-3168" src="//wordpress.org/news/files/2014/04/editor1-300x233.jpg" alt="editor" width="228" height="177" /></p>\n<h3>Improved visual editing</h3>\n<p>The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the visual editor from your word processor without wasting time to clean up messy styling. (Yeah, we’re talking about you, Microsoft Word.)</p>\n</div>\n<div style="clear: both"></div>\n<div>\n<p><img class="alignright wp-image-3170" src="//wordpress.org/news/files/2014/04/image1-300x233.jpg" alt="image" width="228" height="178" /></p>\n<h3>Edit images easily</h3>\n<p>With quicker access to crop and rotation tools, it’s now much easier to edit your images while editing posts. You can also scale images directly in the editor to find just the right fit.</p>\n</div>\n<div style="clear: both"></div>\n<div>\n<p><img class="alignright wp-image-3187" src="//wordpress.org/news/files/2014/04/dragdrop1-300x233.jpg" alt="dragdrop" width="228" height="178" /></p>\n<h3>Drag and drop your images</h3>\n<p>Uploading your images is easier than ever. Just grab them from your desktop and drop them in the editor.</p>\n</div>\n<div style="clear: both"></div>\n<hr />\n<h2 style="text-align: center">Gallery previews</h2>\n<p><img class="aligncenter size-full wp-image-3169" src="//wordpress.org/news/files/2014/04/gallery1.jpg" alt="gallery" width="980" height="550" /></p>\n<p>Galleries display a beautiful grid of images right in the editor, just like they do in your published post.</p>\n<hr />\n<h2 style="text-align: center">Do more with audio and video</h2>\n\n<a href=\'http://wordpress.org/news/files/2014/04/AintMisbehavin.mp3\'>Ain\'t Misbehavin\'</a>\n<a href=\'http://wordpress.org/news/files/2014/04/DavenportBlues.mp3\'>Davenport Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/JellyRollMorton-BuddyBoldensBlues.mp3\'>Buddy Bolden\'s Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Johnny_Hodges_Orchestra-Squaty_Roo-1941.mp3\'>Squaty Roo</a>\n<a href=\'http://wordpress.org/news/files/2014/04/Louisiana_Five-Dixie_Blues-1919.mp3\'>Dixie Blues</a>\n<a href=\'http://wordpress.org/news/files/2014/04/WolverineBlues.mp3\'>Wolverine Blues</a>\n\n<p>Images have galleries; now we’ve added simple audio and video playlists, so you can showcase your music and clips.</p>\n<hr />\n<h2 style="text-align: center">Live widget and header previews</h2>\n<div style="width: 692px; height: 448px; " class="wp-video"><video class="wp-video-shortcode" id="video-3154-3" width="692" height="448" preload="metadata" controls="controls"><source type="video/mp4" src="//wordpress.org/news/files/2014/04/widgets.mp4?_=3" /><a href="//wordpress.org/news/files/2014/04/widgets.mp4">//wordpress.org/news/files/2014/04/widgets.mp4</a></video></div>\n<p>Add, edit, and rearrange your site’s widgets right in the theme customizer. No “save and surprise” — preview your changes live and only save them when you’re ready.</p>\n<p>The improved header image tool also lets you upload, crop, and manage headers while customizing your theme.</p>\n<hr />\n<h2 style="text-align: center">Stunning new theme browser</h2>\n<p><img class="aligncenter size-full wp-image-3172" src="//wordpress.org/news/files/2014/04/theme1.jpg" alt="theme" width="1003" height="558" /><br />\nLooking for a new theme should be easy and fun. Lose yourself in the boundless supply of free WordPress.org themes with the beautiful new theme browser.</p>\n<hr />\n<h2 style="text-align: center">The Crew</h2>\n<p>This release was led by <a href="http://nacin.com/">Andrew Nacin</a> and <a href="http://www.getsource.net/">Mike Schroder</a>, with the help of these fine individuals. There are 267 contributors with props in this release, a new high:</p>\n<p><a href="http://profiles.wordpress.org/aaroncampbell">Aaron D. Campbell</a>, <a href="http://profiles.wordpress.org/jorbin">Aaron Jorbin</a>, <a href="http://profiles.wordpress.org/kawauso">Adam Harley</a>, <a href="http://profiles.wordpress.org/adamsilverstein">Adam Silverstein</a>, <a href="http://profiles.wordpress.org/adelval">adelval</a>, <a href="http://profiles.wordpress.org/ajay">Ajay</a>, <a href="http://profiles.wordpress.org/akeda">Akeda Bagus</a>, <a href="http://profiles.wordpress.org/xknown">Alex Concha</a>, <a href="http://profiles.wordpress.org/tellyworth">Alex Shiels</a>, <a href="http://profiles.wordpress.org/aliso">Alison Barrett</a>, <a href="http://profiles.wordpress.org/collinsinternet">Allan Collins</a>, <a href="http://profiles.wordpress.org/sabreuse">Amy Hendrix (sabreuse)</a>, <a href="http://profiles.wordpress.org/afercia">Andrea Fercia</a>, <a href="http://profiles.wordpress.org/nacin">Andrew Nacin</a>, <a href="http://profiles.wordpress.org/norcross">Andrew Norcross</a>, <a href="http://profiles.wordpress.org/azaozz">Andrew Ozz</a>, <a href="http://profiles.wordpress.org/rarst">Andrey "Rarst" Savchenko</a>, <a href="http://profiles.wordpress.org/andykeith">Andy Keith</a>, <a href="http://profiles.wordpress.org/andy">Andy Skelton</a>, <a href="http://profiles.wordpress.org/atimmer">Anton Timmermans</a>, <a href="http://profiles.wordpress.org/aubreypwd">Aubrey Portwood</a>, <a href="http://profiles.wordpress.org/barry">Barry</a>, <a href="http://profiles.wordpress.org/toszcze">Bartosz Romanowski</a>, <a href="http://profiles.wordpress.org/bassgang">bassgang</a>, <a href="http://profiles.wordpress.org/bcworkz">bcworkz</a>, <a href="http://profiles.wordpress.org/empireoflight">Ben Dunkle</a>, <a href="http://profiles.wordpress.org/neoxx">Bernhard Riedl</a>, <a href="http://profiles.wordpress.org/bigdawggi">bigdawggi</a>, <a href="http://profiles.wordpress.org/bobbravo2">Bob Gregor</a>, <a href="http://profiles.wordpress.org/bobbingwide">bobbingwide</a>, <a href="http://profiles.wordpress.org/bradt">Brad Touesnard</a>, <a href="http://profiles.wordpress.org/bradparbs">bradparbs</a>, <a href="http://profiles.wordpress.org/bramd">bramd</a>, <a href="http://profiles.wordpress.org/kraftbj">Brandon Kraft</a>, <a href="http://profiles.wordpress.org/brasofilo">brasofilo</a>, <a href="http://profiles.wordpress.org/bravokeyl">bravokeyl</a>, <a href="http://profiles.wordpress.org/bpetty">Bryan Petty</a>, <a href="http://profiles.wordpress.org/cgaffga">cgaffga</a>, <a href="http://profiles.wordpress.org/chiragswadia">Chirag Swadia</a>, <a href="http://profiles.wordpress.org/chouby">Chouby</a>, <a href="http://profiles.wordpress.org/ehg">Chris Blower</a>, <a href="http://profiles.wordpress.org/cmmarslender">Chris Marslender</a>, <a href="http://profiles.wordpress.org/c3mdigital">Chris Olbekson</a>, <a href="http://profiles.wordpress.org/chrisscott">Chris Scott</a>, <a href="http://profiles.wordpress.org/chriseverson">chriseverson</a>, <a href="http://profiles.wordpress.org/chrisguitarguy">chrisguitarguy</a>, <a href="http://profiles.wordpress.org/cfinke">Christopher Finke</a>, <a href="http://profiles.wordpress.org/ciantic">ciantic</a>, <a href="http://profiles.wordpress.org/antorome">Comparativa de Bancos</a>, <a href="http://profiles.wordpress.org/cojennin">Connor Jennings</a>, <a href="http://profiles.wordpress.org/corvannoorloos">Cor van Noorloos</a>, <a href="http://profiles.wordpress.org/corphi">Corphi</a>, <a href="http://profiles.wordpress.org/cramdesign">cramdesign</a>, <a href="http://profiles.wordpress.org/danielbachhuber">Daniel Bachhuber</a>, <a href="http://profiles.wordpress.org/redsweater">Daniel Jalkut (Red Sweater)</a>, <a href="http://profiles.wordpress.org/dannydehaan">Danny de Haan</a>, <a href="http://profiles.wordpress.org/koop">Daryl Koopersmith</a>, <a href="http://profiles.wordpress.org/eightface">Dave Kellam (eightface)</a>, <a href="http://profiles.wordpress.org/dpe415">DaveE</a>, <a href="http://profiles.wordpress.org/davidakennedy">David A. Kennedy</a>, <a href="http://profiles.wordpress.org/davidanderson">David Anderson</a>, <a href="http://profiles.wordpress.org/davidmarichal">David Marichal</a>, <a href="http://profiles.wordpress.org/denis-de-bernardy">Denis de Bernardy</a>, <a href="http://profiles.wordpress.org/dd32">Dion Hulse</a>, <a href="http://profiles.wordpress.org/ocean90">Dominik Schilling</a>, <a href="http://profiles.wordpress.org/dougwollison">Doug Wollison</a>, <a href="http://profiles.wordpress.org/drewapicture">Drew Jaynes</a>, <a href="http://profiles.wordpress.org/drprotocols">DrProtocols</a>, <a href="http://profiles.wordpress.org/dustyf">Dustin Filippini</a>, <a href="http://profiles.wordpress.org/eatingrules">eatingrules</a>, <a href="http://profiles.wordpress.org/plocha">edik</a>, <a href="http://profiles.wordpress.org/oso96_2000">Eduardo Reveles</a>, <a href="http://profiles.wordpress.org/eliorivero">Elio Rivero</a>, <a href="http://profiles.wordpress.org/enej">enej</a>, <a href="http://profiles.wordpress.org/ericlewis">Eric Andrew Lewis</a>, <a href="http://profiles.wordpress.org/ericmann">Eric Mann</a>, <a href="http://profiles.wordpress.org/evarlese">Erica Varlese</a>, <a href="http://profiles.wordpress.org/ethitter">Erick Hitter</a>, <a href="http://profiles.wordpress.org/ejdanderson">Evan Anderson</a>, <a href="http://profiles.wordpress.org/fahmiadib">Fahmi Adib</a>, <a href="http://profiles.wordpress.org/fboender">fboender</a>, <a href="http://profiles.wordpress.org/frank-klein">Frank Klein</a>, <a href="http://profiles.wordpress.org/garyc40">Gary Cao</a>, <a href="http://profiles.wordpress.org/garyj">Gary Jones</a>, <a href="http://profiles.wordpress.org/pento">Gary Pendergast</a>, <a href="http://profiles.wordpress.org/genkisan">genkisan</a>, <a href="http://profiles.wordpress.org/soulseekah">Gennady Kovshenin</a>, <a href="http://profiles.wordpress.org/georgestephanis">George Stephanis</a>, <a href="http://profiles.wordpress.org/grahamarmfield">Graham Armfield</a>, <a href="http://profiles.wordpress.org/vancoder">Grant Mangham</a>, <a href="http://profiles.wordpress.org/gcorne">Gregory Cornelius</a>, <a href="http://profiles.wordpress.org/tivnet">Gregory Karpinsky (@tivnet)</a>, <a href="http://profiles.wordpress.org/hakre">hakre</a>, <a href="http://profiles.wordpress.org/hanni">hanni</a>, <a href="http://profiles.wordpress.org/helen">Helen Hou-Sandí</a>, <a href="http://profiles.wordpress.org/ippetkov">ippetkov</a>, <a href="http://profiles.wordpress.org/ipstenu">Ipstenu (Mika Epstein)</a>, <a href="http://profiles.wordpress.org/jdgrimes">J.D. Grimes</a>, <a href="http://profiles.wordpress.org/jackreichert">Jack Reichert</a>, <a href="http://profiles.wordpress.org/_jameslee">jameslee</a>, <a href="http://profiles.wordpress.org/avryl">Janneke Van Dorpe</a>, <a href="http://profiles.wordpress.org/janrenn">janrenn</a>, <a href="http://profiles.wordpress.org/jaycc">JayCC</a>, <a href="http://profiles.wordpress.org/jeffsebring">Jeff Sebring</a>, <a href="http://profiles.wordpress.org/jenmylo">Jen Mylo</a>, <a href="http://profiles.wordpress.org/jeremyfelt">Jeremy Felt</a>, <a href="http://profiles.wordpress.org/jesin">Jesin A</a>, <a href="http://profiles.wordpress.org/jayjdk">Jesper Johansen (jayjdk)</a>, <a href="http://profiles.wordpress.org/jnielsendotnet">jnielsendotnet</a>, <a href="http://profiles.wordpress.org/jartes">Joan Artes</a>, <a href="http://profiles.wordpress.org/joedolson">Joe Dolson</a>, <a href="http://profiles.wordpress.org/joehoyle">Joe Hoyle</a>, <a href="http://profiles.wordpress.org/johnbillion">John Blackbourn</a>, <a href="http://profiles.wordpress.org/johnjamesjacoby">John James Jacoby</a>, <a href="http://profiles.wordpress.org/johnpbloch">John P. Bloch</a>, <a href="http://profiles.wordpress.org/johnregan3">John Regan</a>, <a href="http://profiles.wordpress.org/duck_">Jon Cave</a>, <a href="http://profiles.wordpress.org/jond3r">Jonas Bolinder (jond3r)</a>, <a href="http://profiles.wordpress.org/joostdevalk">Joost de Valk</a>, <a href="http://profiles.wordpress.org/shelob9">Josh Pollock</a>, <a href="http://profiles.wordpress.org/joshuaabenazer">Joshua Abenazer</a>, <a href="http://profiles.wordpress.org/jstraitiff">jstraitiff</a>, <a href="http://profiles.wordpress.org/juliobox">Julio Potier</a>, <a href="http://profiles.wordpress.org/kopepasah">Justin Kopepasah</a>, <a href="http://profiles.wordpress.org/justinsainton">Justin Sainton</a>, <a href="http://profiles.wordpress.org/kadamwhite">K.Adam White</a>, <a href="http://profiles.wordpress.org/trepmal">Kailey (trepmal)</a>, <a href="http://profiles.wordpress.org/kasparsd">Kaspars</a>, <a href="http://profiles.wordpress.org/ryelle">Kelly Dwan</a>, <a href="http://profiles.wordpress.org/kerikae">kerikae</a>, <a href="http://profiles.wordpress.org/kworthington">Kevin Worthington</a>, <a href="http://profiles.wordpress.org/kpdesign">Kim Parsell</a>, <a href="http://profiles.wordpress.org/kwight">Kirk Wight</a>, <a href="http://profiles.wordpress.org/kitchin">kitchin</a>, <a href="http://profiles.wordpress.org/klihelp">klihelp</a>, <a href="http://profiles.wordpress.org/knutsp">Knut Sparhell</a>, <a href="http://profiles.wordpress.org/kovshenin">Konstantin Kovshenin</a>, <a href="http://profiles.wordpress.org/obenland">Konstantin Obenland</a>, <a href="http://profiles.wordpress.org/drozdz">Krzysiek Drozdz</a>, <a href="http://profiles.wordpress.org/lancewillett">Lance Willett</a>, <a href="http://profiles.wordpress.org/leewillis77">Lee Willis</a>, <a href="http://profiles.wordpress.org/lpointet">lpointet</a>, <a href="http://profiles.wordpress.org/ldebrouwer">Luc De Brouwer</a>, <a href="http://profiles.wordpress.org/spmlucas">Lucas Karpiuk</a>, <a href="http://profiles.wordpress.org/lkwdwrd">Luke Woodward</a>, <a href="http://profiles.wordpress.org/mark8barnes">Mark Barnes</a>, <a href="http://profiles.wordpress.org/markjaquith">Mark Jaquith</a>, <a href="http://profiles.wordpress.org/markoheijnen">Marko Heijnen</a>, <a href="http://profiles.wordpress.org/marventus">Marventus</a>, <a href="http://profiles.wordpress.org/iammattthomas">Matt (Thomas) Miklic</a>, <a href="http://profiles.wordpress.org/mjbanks">Matt Banks</a>, <a href="http://profiles.wordpress.org/matt">Matt Mullenweg</a>, <a href="http://profiles.wordpress.org/mboynes">Matthew Boynes</a>, <a href="http://profiles.wordpress.org/mdbitz">Matthew Denton</a>, <a href="http://profiles.wordpress.org/mattheu">Matthew Haines-Young</a>, <a href="http://profiles.wordpress.org/mattonomics">mattonomics</a>, <a href="http://profiles.wordpress.org/mattyrob">mattyrob</a>, <a href="http://profiles.wordpress.org/matveb">Matías Ventura</a>, <a href="http://profiles.wordpress.org/maxcutler">Max Cutler</a>, <a href="http://profiles.wordpress.org/mcadwell">mcadwell</a>, <a href="http://profiles.wordpress.org/melchoyce">Mel Choyce</a>, <a href="http://profiles.wordpress.org/meloniq">meloniq</a>, <a href="http://profiles.wordpress.org/michael-arestad">Michael Arestad</a>, <a href="http://profiles.wordpress.org/michelwppi">Michel - xiligroup dev</a>, <a href="http://profiles.wordpress.org/mcsf">Miguel Fonseca</a>, <a href="http://profiles.wordpress.org/gradyetc">Mike Burns</a>, <a href="http://profiles.wordpress.org/mikehansenme">Mike Hansen</a>, <a href="http://profiles.wordpress.org/mikemanger">Mike Manger</a>, <a href="http://profiles.wordpress.org/mikeschinkel">Mike Schinkel</a>, <a href="http://profiles.wordpress.org/dh-shredder">Mike Schroder</a>, <a href="http://profiles.wordpress.org/mikecorkum">mikecorkum</a>, <a href="http://profiles.wordpress.org/mitchoyoshitaka">mitcho (Michael Yoshitaka Erlewine)</a>, <a href="http://profiles.wordpress.org/batmoo">Mohammad Jangda</a>, <a href="http://profiles.wordpress.org/morganestes">Morgan Estes</a>, <a href="http://profiles.wordpress.org/mor10">Morten Rand-Hendriksen</a>, <a href="http://profiles.wordpress.org/Nao">Naoko Takano</a>, <a href="http://profiles.wordpress.org/alex-ye">Nashwan Doaqan</a>, <a href="http://profiles.wordpress.org/nendeb55">nendeb55</a>, <a href="http://profiles.wordpress.org/celloexpressions">Nick Halsey</a>, <a href="http://profiles.wordpress.org/nicolealleyinteractivecom">Nicole Arnold</a>, <a href="http://profiles.wordpress.org/nikv">Nikhil Vimal (NikV)</a>, <a href="http://profiles.wordpress.org/nivijah">Nivi Jah</a>, <a href="http://profiles.wordpress.org/nofearinc">nofearinc</a>, <a href="http://profiles.wordpress.org/nunomorgadinho">Nuno Morgadinho</a>, <a href="http://profiles.wordpress.org/olivm">olivM</a>, <a href="http://profiles.wordpress.org/jbkkd">Omer Korner</a>, <a href="http://profiles.wordpress.org/originalexe">OriginalEXE</a>, <a href="http://profiles.wordpress.org/patricknami">patricknami</a>, <a href="http://profiles.wordpress.org/pbearne">Paul Bearne</a>, <a href="http://profiles.wordpress.org/djpaul">Paul Gibbs</a>, <a href="http://profiles.wordpress.org/paulwilde">Paul Wilde</a>, <a href="http://profiles.wordpress.org/pavelevap">pavelevap</a>, <a href="http://profiles.wordpress.org/westi">Peter Westwood</a>, <a href="http://profiles.wordpress.org/philiparthurmoore">Philip Arthur Moore</a>, <a href="http://profiles.wordpress.org/mordauk">Pippin Williamson</a>, <a href="http://profiles.wordpress.org/nprasath002">Prasath Nadarajah</a>, <a href="http://profiles.wordpress.org/prettyboymp">prettyboymp</a>, <a href="http://profiles.wordpress.org/raamdev">Raam Dev</a>, <a href="http://profiles.wordpress.org/rachelbaker">Rachel Baker</a>, <a href="http://profiles.wordpress.org/mauryaratan">Ram Ratan Maurya</a>, <a href="http://profiles.wordpress.org/ramonchiara">ramonchiara</a>, <a href="http://profiles.wordpress.org/ounziw">Rescuework Support</a>, <a href="http://profiles.wordpress.org/rhyswynne">Rhys Wynne</a>, <a href="http://profiles.wordpress.org/ricardocorreia">Ricardo Correia</a>, <a href="http://profiles.wordpress.org/theorboman">Richard Sweeney</a>, <a href="http://profiles.wordpress.org/iamfriendly">Richard Tape</a>, <a href="http://profiles.wordpress.org/richard2222">richard2222</a>, <a href="http://profiles.wordpress.org/rickalee">Ricky Lee Whittemore</a>, <a href="http://profiles.wordpress.org/miqrogroove">Robert Chapin</a>, <a href="http://profiles.wordpress.org/robmiller">robmiller</a>, <a href="http://profiles.wordpress.org/rodrigosprimo">Rodrigo Primo</a>, <a href="http://profiles.wordpress.org/romaimperator">romaimperator</a>, <a href="http://profiles.wordpress.org/roothorick">roothorick</a>, <a href="http://profiles.wordpress.org/ruudjoyo">Ruud Laan</a>, <a href="http://profiles.wordpress.org/ryan">Ryan Boren</a>, <a href="http://profiles.wordpress.org/rmccue">Ryan McCue</a>, <a href="http://profiles.wordpress.org/salcode">Sal Ferrarello</a>, <a href="http://profiles.wordpress.org/otto42">Samuel Wood (Otto)</a>, <a href="http://profiles.wordpress.org/sandyr">Sandeep</a>, <a href="http://profiles.wordpress.org/scottlee">Scott Lee</a>, <a href="http://profiles.wordpress.org/coffee2code">Scott Reilly</a>, <a href="http://profiles.wordpress.org/wonderboymusic">Scott Taylor</a>, <a href="http://profiles.wordpress.org/greglone">ScreenfeedFr</a>, <a href="http://profiles.wordpress.org/scribu">scribu</a>, <a href="http://profiles.wordpress.org/sdasse">sdasse</a>, <a href="http://profiles.wordpress.org/bootsz">Sean Butze</a>, <a href="http://profiles.wordpress.org/seanchayes">Sean Hayes</a>, <a href="http://profiles.wordpress.org/nessworthy">Sean Nessworthy</a>, <a href="http://profiles.wordpress.org/sergeybiryukov">Sergey Biryukov</a>, <a href="http://profiles.wordpress.org/shahpranaf">shahpranaf</a>, <a href="http://profiles.wordpress.org/shaunandrews">Shaun Andrews</a>, <a href="http://profiles.wordpress.org/shinichin">ShinichiN</a>, <a href="http://profiles.wordpress.org/pross">Simon Prosser</a>, <a href="http://profiles.wordpress.org/simonwheatley">Simon Wheatley</a>, <a href="http://profiles.wordpress.org/siobhan">Siobhan</a>, <a href="http://profiles.wordpress.org/siobhyb">Siobhan Bamber (siobhyb)</a>, <a href="http://profiles.wordpress.org/sirzooro">sirzooro</a>, <a href="http://profiles.wordpress.org/solarissmoke">solarissmoke</a>, <a href="http://profiles.wordpress.org/sonjanyc">sonjanyc</a>, <a href="http://profiles.wordpress.org/spencerfinnell">Spencer Finnell</a>, <a href="http://profiles.wordpress.org/piontkowski">Spencer Piontkowski</a>, <a href="http://profiles.wordpress.org/stephcook22">stephcook22</a>, <a href="http://profiles.wordpress.org/netweb">Stephen Edgar</a>, <a href="http://profiles.wordpress.org/stephenharris">Stephen Harris</a>, <a href="http://profiles.wordpress.org/sbruner">Steve Bruner</a>, <a href="http://profiles.wordpress.org/stevenkword">Steven Word</a>, <a href="http://profiles.wordpress.org/miyauchi">Takayuki Miyauchi</a>, <a href="http://profiles.wordpress.org/tanner-m">Tanner Moushey</a>, <a href="http://profiles.wordpress.org/tlovett1">Taylor Lovett</a>, <a href="http://profiles.wordpress.org/tbrams">tbrams</a>, <a href="http://profiles.wordpress.org/tobiasbg">TobiasBg</a>, <a href="http://profiles.wordpress.org/tomauger">Tom Auger</a>, <a href="http://profiles.wordpress.org/willmot">Tom Willmot</a>, <a href="http://profiles.wordpress.org/topher1kenobe">Topher</a>, <a href="http://profiles.wordpress.org/topquarky">topquarky</a>, <a href="http://profiles.wordpress.org/zodiac1978">Torsten Landsiedel</a>, <a href="http://profiles.wordpress.org/toru">Toru</a>, <a href="http://profiles.wordpress.org/wpsmith">Travis Smith</a>, <a href="http://profiles.wordpress.org/umeshsingla">Umesh Kumar</a>, <a href="http://profiles.wordpress.org/undergroundnetwork">undergroundnetwork</a>, <a href="http://profiles.wordpress.org/varunagw">VarunAgw</a>, <a href="http://profiles.wordpress.org/wawco">wawco</a>, <a href="http://profiles.wordpress.org/westonruter">Weston Ruter</a>, <a href="http://profiles.wordpress.org/wokamoto">wokamoto</a>, <a href="http://profiles.wordpress.org/xsonic">xsonic</a>, <a href="http://profiles.wordpress.org/yoavf">Yoav Farhi</a>, <a href="http://profiles.wordpress.org/yurivictor">Yuri Victor</a>, <a href="http://profiles.wordpress.org/zbtirrell">Zach Tirrell</a>, and <a href="http://profiles.wordpress.org/vanillalounge">Ze Fontainhas</a>. Also thanks to <a href="http://michaelpick.wordpress.com/">Michael Pick</a> for producing the release video.</p>\n<p>If you want to follow along or help out, check out <a href="http://make.wordpress.org/">Make WordPress</a> and our <a href="http://make.wordpress.org/core/">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.0!</p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:45:"http://wordpress.org/news/2014/04/smith/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:45:"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:33:"WordPress 3.9 Release Candidate 2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:77:"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 15 Apr 2014 09:47:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:11:"Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3151";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:356:"The second release candidate for WordPress 3.9 is now available for testing. If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the first release candidate, and those changes are all helpfully summarized in our weekly post on the development blog. Probably the biggest fixes are to live [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Andrew Nacin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2273:"<p>The second release candidate for WordPress 3.9 is now available for testing.</p>\n<p>If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the <a title="WordPress 3.9 Release Candidate" href="//wordpress.org/news/2014/04/wordpress-3-9-release-candidate/">first release candidate</a>, and those changes are all helpfully summarized <a href="//make.wordpress.org/core/?p=10237">in our weekly post</a> on the development blog. Probably the biggest fixes are to live widget previews and the new theme browser, along with some extra TinyMCE compatibility and some RTL fixes.</p>\n<p><strong>Plugin authors:</strong> Could you test your plugins against 3.9, and if they&#8217;re compatible, make sure they are marked as tested up to 3.9? It only takes a few minutes and this really helps make launch easier. Be sure to follow along the core development blog; we&#8217;ve been posting <a href="//make.wordpress.org/core/tag/3-9-dev-notes/">notes for developers for 3.9</a>. (For example: <a href="//make.wordpress.org/core/2014/04/15/html5-galleries-captions-in-wordpress-3-9/">HTML5</a>, <a href="//make.wordpress.org/core/2014/04/14/symlinked-plugins-in-wordpress-3-9/">symlinks</a>, <a href="//make.wordpress.org/core/2014/04/07/mysql-in-wordpress-3-9/">MySQL</a>, <a href="//make.wordpress.org/core/2014/04/11/plupload-2-x-in-wordpress-3-9/">Plupload</a>.)</p>\n<p>To test WordPress 3.9 RC2, try the <a href="//wordpress.org/extend/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="//wordpress.org/wordpress-3.9-RC2.zip">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 3.9, visit the nearly complete About screen in your dashboard (<strong><img src="//i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692" alt="" width="16" height="16" /> → About</strong> in the toolbar) and also check out <a title="WordPress 3.9 Beta 1" href="//wordpress.org/news/2014/03/wordpress-3-9-beta-1/">the Beta 1 post</a>.</p>\n<p><em>This is for testing,</em><br />\n<em>so not recommended for<br />\nproduction sites—yet.</em></p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:73:"http://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:42:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"WordPress 3.8.3 Maintenance Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:50:"http://wordpress.org/news/2014/04/wordpress-3-8-3/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/news/2014/04/wordpress-3-8-3/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 14 Apr 2014 19:29:13 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:8:"Releases";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3145";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:338:"WordPress 3.8.3 is now available to fix a small but unfortunate bug in the WordPress 3.8.2 security release. The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using [&#8230;]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Andrew Nacin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2339:"<p>WordPress 3.8.3 is now available to fix a small but unfortunate bug in the <a title="WordPress 3.8.2 Security Release" href="http://wordpress.org/news/2014/04/wordpress-3-8-2/">WordPress 3.8.2 security release</a>.</p>\n<p>The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using this tool, <em>any</em> loss of content is unacceptable to us.</p>\n<p>We recognize how much trust you place in us to safeguard your content, and we take this responsibility very seriously. We&#8217;re sorry we let you down.</p>\n<p>We&#8217;ve all lost words we&#8217;ve written before, like an email thanks to a cat on the keyboard or a term paper to a blue screen of death. Over the last few WordPress releases, we&#8217;ve made a number of improvements to features like autosaves and revisions. With revisions, an old edit can always be restored. We&#8217;re trying our hardest to save your content somewhere even if your power goes out or your browser crashes. We even monitor your internet connection and prevent you from hitting that &#8220;Publish&#8221; button at the exact moment the coffee shop Wi-Fi has a hiccup.</p>\n<p>It&#8217;s <em>possible</em> that the quick draft you lost last week is still in the database, and just hidden from view. As an added complication, these &#8220;discarded drafts&#8221; normally get deleted after seven days, and it&#8217;s already been six days since the release. If we were able to rescue your draft, you&#8217;ll see it on the &#8220;All Posts&#8221; screen after you update to 3.8.3. (We&#8217;ll also be pushing 3.8.3 out as a background update, so you may just see a draft appear.)</p>\n<p>So, if you tried to jot down a quick idea last week, I hope WordPress has recovered it for you. Maybe it&#8217;ll turn into that novella.</p>\n<p><a href="http://wordpress.org/download/">Download WordPress 3.8.3</a> or click &#8220;Update Now&#8221; on Dashboard → Updates.</p>\n<p><em>This affected version 3.7.2 as well, so we&#8217;re pushing a 3.7.3 to these installs, but we&#8217;d encourage you to update to the latest and greatest.</em></p>\n<hr />\n<p><em>Now for some good news:<br />\nWordPress 3.9 is near.<br />\nExpect it this week</em></p>\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/news/2014/04/wordpress-3-8-3/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:31:"http://wordpress.org/news/feed/";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:44:"http://purl.org/rss/1.0/modules/syndication/";a:2:{s:12:"updatePeriod";a:1:{i:0;a:5:{s:4:"data";s:6:"hourly";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:15:"updateFrequency";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:9:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Thu, 04 Sep 2014 17:32:21 GMT";s:12:"content-type";s:23:"text/xml; charset=UTF-8";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:10:"x-pingback";s:36:"http://wordpress.org/news/xmlrpc.php";s:13:"last-modified";s:29:"Thu, 04 Sep 2014 17:05:39 GMT";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:4:"x-nc";s:11:"HIT lax 249";}s:5:"build";s:14:"20140613025753";}', 'no') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1835, '_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1409895141', 'no') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1836, '_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca', '1409851941', 'no'),
(1837, '_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c', '1409895144', 'no') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1838, '_transient_feed_867bd5c64f85878d03a060509cd2f92c', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n\n\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:61:"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"WordPress Planet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:28:"http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:2:"en";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:47:"WordPress Planet - http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:50:{i:0;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:56:"WPTavern: WordPress 4.0 Benny Now Available for Download";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29690";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://wptavern.com/wordpress-4-0-benny-now-available-for-download";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6916:"<p>WordPress 4.0 &#8220;Benny&#8221; was released today, named for American jazz and swing musician <a href="http://en.wikipedia.org/wiki/Benny_Goodman" target="_blank">Benny Goodman</a>, also known as the &#8220;King of Swing.&#8221;</p>\n<p>Development for 4.0 <a href="http://wptavern.com/wordpress-4-0-kicks-off-development-today-helen-hou-sandi-to-lead-release" target="_blank">kicked off at the end of April</a>, led by <a href="http://profiles.wordpress.org/helen" target="_blank">Helen Hou-Sandí</a>. This release includes hundreds of refinements and a few brand new features, culminating in a more polished media and editing experience. You&#8217;ll also find some exciting new tools for developers. Here&#8217;s a quick overview of what&#8217;s new.</p>\n<h2>New Media Grid View</h2>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/media-library.png" rel="prettyphoto[29690]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/media-library.png?resize=1025%2C409" alt="media-library" class="aligncenter size-full wp-image-29695" /></a></p>\n<p>The WordPress media library has a beautiful new default grid view. When you click on an item, the attachment details will launch a preview that allows you to easily edit and navigate items in your library. Media is now easier to manage with the &#8220;bulk select&#8221; option which enables you to delete multiple items at once.</p>\n<h2>Improved Writing Experience</h2>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sticky-editing-tools.png" rel="prettyphoto[29690]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sticky-editing-tools.png?resize=1025%2C572" alt="sticky-editing-tools" class="aligncenter size-full wp-image-29706" /></a></p>\n<p>Composing in WordPress has never been better. The visual editor now expands to fit your content, instead of the awkward scrollbar you used to see within the content area. The editing experience is smoother with a fixed toolbar as you scroll, which means your tools will follow you as your content expands.</p>\n<h2>oEmbed Previews</h2>\n<div class="wp-video"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<a href="http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4">http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4</a></div><div class="media-shortcode-extend"><div class="media-info video-info"><ul class="media-meta"><li><span class="prep">Run Time</span> <span class="data">0:17</span></li><li><span class="prep">Dimensions</span> <span class="data">1,312 &#215; 800</span></li><li><span class="prep">File Name</span> <span class="data"><a href="http://wptavern.com/wp-content/uploads/2014/09/oembed-previews.mp4">oembed-previews.mp4</a></span></li><li><span class="prep">File Size</span> <span class="data">2.41 MB</span></li><li><span class="prep">File Type</span> <span class="data">MP4</span></li><li><span class="prep">Mime Type</span> <span class="data">video/quicktime</span></li></ul></div><button class="media-info-toggle">Video Info</button></div>\n<p>WordPress 4.0 adds oEmbed support for TED talks, Mixcloud, CollegeHumor.com, Issuu, Polldaddy’s short URL format, YouTube playlist URLs. The visual editor now displays previews of media added via on oEmbed URL. The video above is included on the 4.0 about page, demonstrating oEmbed previews in action.</p>\n<h2>Refreshed Plugin Install and Search Experience</h2>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-plugins.png" rel="prettyphoto[29690]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/add-plugins.png?resize=1025%2C447" alt="add-plugins" class="aligncenter size-full wp-image-29712" /></a></p>\n<p>WordPress 4.0 makes it much easier to search for plugins in the admin. The plugin installer now displays plugin as cards in a grid view. Plugin authors can add <a href="http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer" target="_blank">custom icons</a> that will appear in the installer. Clicking on a listing launches the plugin details modal with a description, ratings, reviews, compatibility information and more.</p>\n<h2>Improved Language Support</h2>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/wordpress-languages.jpg" rel="prettyphoto[29690]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/07/wordpress-languages.jpg?resize=809%2C381" alt="wordpress-languages" class="aligncenter size-full wp-image-25834" /></a></p>\n<p>This release adds major <a href="http://wptavern.com/major-internationalization-improvements-planned-for-wordpress-4-0" target="_blank">internationalization improvements</a> to the software. <a href="http://wptavern.com/wordpress-4-0-to-add-language-selection-to-installation">Language selection</a> is now available at installation and language management has been streamlined in the dashboard.</p>\n<h3>What&#8217;s new under the hood?</h3>\n<p>WordPress 4.0 also includes an exciting array of new developer goodies. Here are a few of the highlights:</p>\n<h5>Customizer API</h5>\n<p>This release adds a new <a href="https://core.trac.wordpress.org/ticket/27406" target="_blank">Panels API</a> that enables developers to group customizer controls into sections. It also includes support for contextual controls that will be visible or hidden based on the page the user is viewing. The improved customizer offers a wider array of controls and parameters that allow developers to extend it for more varied uses beyond themes.</p>\n<h5>Query Ordering</h5>\n<p>WordPress 4.0 includes <a href="http://make.wordpress.org/core/2014/08/29/a-more-powerful-order-by-in-wordpress-4-0/" target="_blank">a more powerful ORDER BY</a> argument for developers working with <a href="http://codex.wordpress.org/Class_Reference/WP_Query" target="_blank">WP_Query</a>. Developers can now pass an array to WP_Query as the value for <a href="http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters" target="_blank">orderby</a> for more flexible and precise querying.</p>\n<h5>External Libraries</h5>\n<p>This major release includes updates for libraries used in WordPress, including TinyMCE 4.1.3, jQuery 1.11.1, MediaElement 2.15.</p>\n<p>You can find the full list of all the changes on the <a href="http://codex.wordpress.org/Version_4.0" target="_blank">4.0 release page</a>, which was created by volunteers from the docs team.</p>\n<p>WordPress 4.0 is the result of the tireless efforts of 275 contributors. If code is poetry, then this release is a skillfully-written sonnet that resolves problem spots and introduces new tools that users will love. Once you update, you&#8217;ll wonder how you ever lived without these improvements. Visit your WordPress site and navigate to Dashboard > Update to get 4.0 and take advantage of all the shiny new features.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 17:13:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"Dev Blog: WordPress 4.0 “Benny”";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3296";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:40:"http://wordpress.org/news/2014/09/benny/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:21825:"<p>Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader <a href="http://en.wikipedia.org/wiki/Benny_Goodman">Benny Goodman</a>, is available <a href="http://wordpress.org/download/">for download</a> or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id="v-bUdzKMro-1" class="video-player"></div>\n<hr />\n<h2>Manage your media with style</h2>\n<p><img class="alignnone size-full wp-image-3316" src="http://i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406" alt="Media Library" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2>Working with embeds has never been easier</h2>\n<div class="wp-video"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<a href="http://s.w.org/images/core/4.0/embed.mp4">//s.w.org/images/core/4.0/embed.mp4</a></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah — embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>We’ve expanded the services supported by default, too — you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED. <a href="http://codex.wordpress.org/Embeds">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2>Focus on your content</h2>\n<div class="wp-video"><a href="http://s.w.org/images/core/4.0/focus.mp4">//s.w.org/images/core/4.0/focus.mp4</a></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2>Finding the right plugin</h2>\n<p><img class="aligncenter size-large wp-image-3309" src="http://i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405" alt="Add plugins" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2>The Ensemble</h2>\n<p>This release was led by <a href="http://helenhousandi.com">Helen Hou-Sandí</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href="http://profiles.wordpress.org/sharonaustin">_Redd</a>, <a href="http://profiles.wordpress.org/aaroncampbell">Aaron D. Campbell</a>, <a href="http://profiles.wordpress.org/jorbin">Aaron Jorbin</a>, <a href="http://profiles.wordpress.org/adamsilverstein">Adam Silverstein</a>, <a href="http://profiles.wordpress.org/viper007bond">Alex Mills (Viper007Bond)</a>, <a href="http://profiles.wordpress.org/tellyworth">Alex Shiels</a>, <a href="http://profiles.wordpress.org/alexanderrohmann">Alexander Rohmann</a>, <a href="http://profiles.wordpress.org/aliso">Alison Barrett</a>, <a href="http://profiles.wordpress.org/collinsinternet">Allan Collins</a>, <a href="http://profiles.wordpress.org/amit">Amit Gupta</a>, <a href="http://profiles.wordpress.org/sabreuse">Amy Hendrix (sabreuse)</a>, <a href="http://profiles.wordpress.org/afercia">Andrea Fercia</a>, <a href="http://profiles.wordpress.org/andrezrv">Andres Villarreal</a>, <a href="http://profiles.wordpress.org/zamfeer">Andrew Mowe</a>, <a href="http://profiles.wordpress.org/nacin">Andrew Nacin</a>, <a href="http://profiles.wordpress.org/azaozz">Andrew Ozz</a>, <a href="http://profiles.wordpress.org/andy">Andy Skelton</a>, <a href="http://profiles.wordpress.org/ankit-k-gupta">Ankit K Gupta</a>, <a href="http://profiles.wordpress.org/atimmer">Anton Timmermans</a>, <a href="http://profiles.wordpress.org/arnee">Arne Brachhold</a>, <a href="http://profiles.wordpress.org/aubreypwd">Aubrey Portwood</a>, <a href="http://profiles.wordpress.org/filosofo">Austin Matzko</a>, <a href="http://profiles.wordpress.org/empireoflight">Ben Dunkle</a>, <a href="http://profiles.wordpress.org/kau-boy">Bernhard Kau</a>, <a href="http://profiles.wordpress.org/boonebgorges">Boone Gorges</a>, <a href="http://profiles.wordpress.org/bradyvercher">Brady Vercher</a>, <a href="http://profiles.wordpress.org/bramd">bramd</a>, <a href="http://profiles.wordpress.org/kraftbj">Brandon Kraft</a>, <a href="http://profiles.wordpress.org/krogsgard">Brian Krogsgard</a>, <a href="http://profiles.wordpress.org/brianlayman">Brian Layman</a>, <a href="http://profiles.wordpress.org/rzen">Brian Richards</a>, <a href="http://profiles.wordpress.org/camdensegal">camden</a>, <a href="http://profiles.wordpress.org/lukecarbis">Carbis</a>, <a href="http://profiles.wordpress.org/sixhours">Caroline Moore</a>, <a href="http://profiles.wordpress.org/mackensen">Charles Fulton</a>, <a href="http://profiles.wordpress.org/chouby">Chouby</a>, <a href="http://profiles.wordpress.org/chrico">ChriCo</a>, <a href="http://profiles.wordpress.org/c3mdigital">Chris Olbekson</a>, <a href="http://profiles.wordpress.org/chrisl27">chrisl27</a>, <a href="http://profiles.wordpress.org/caxelsson">Christian Axelsson</a>, <a href="http://profiles.wordpress.org/cfinke">Christopher Finke</a>, <a href="http://profiles.wordpress.org/boda1982">Christopher Spires</a>, <a href="http://profiles.wordpress.org/clifgriffin">Clifton Griffin</a>, <a href="http://profiles.wordpress.org/codenameeli">codenameEli</a>, <a href="http://profiles.wordpress.org/jupiterwise">Corey McKrill</a>, <a href="http://profiles.wordpress.org/corphi">Corphi</a>, <a href="http://profiles.wordpress.org/extendwings">Daisuke Takahashi</a>, <a href="http://profiles.wordpress.org/ghost1227">Dan Griffiths</a>, <a href="http://profiles.wordpress.org/danielbachhuber">Daniel Bachhuber</a>, <a href="http://profiles.wordpress.org/danielhuesken">Daniel Husken</a>, <a href="http://profiles.wordpress.org/redsweater">Daniel Jalkut (Red Sweater)</a>, <a href="http://profiles.wordpress.org/dannydehaan">Danny de Haan</a>, <a href="http://profiles.wordpress.org/dkotter">Darin Kotter</a>, <a href="http://profiles.wordpress.org/koop">Daryl Koopersmith</a>, <a href="http://profiles.wordpress.org/dllh">Daryl L. L. Houston (dllh)</a>, <a href="http://profiles.wordpress.org/davidakennedy">David A. Kennedy</a>, <a href="http://profiles.wordpress.org/dlh">David Herrera</a>, <a href="http://profiles.wordpress.org/dnaber-de">David Naber</a>, <a href="http://profiles.wordpress.org/davidthemachine">DavidTheMachine</a>, <a href="http://profiles.wordpress.org/debaat">DeBAAT</a>, <a href="http://profiles.wordpress.org/dd32">Dion Hulse</a>, <a href="http://profiles.wordpress.org/ocean90">Dominik Schilling</a>, <a href="http://profiles.wordpress.org/donncha">Donncha O Caoimh</a>, <a href="http://profiles.wordpress.org/drewapicture">Drew Jaynes</a>, <a href="http://profiles.wordpress.org/dustyn">dustyn</a>, <a href="http://profiles.wordpress.org/eddiemoya">Eddie Moya</a>, <a href="http://profiles.wordpress.org/oso96_2000">Eduardo Reveles</a>, <a href="http://profiles.wordpress.org/edwin-at-studiojoyocom">Edwin Siebel</a>, <a href="http://profiles.wordpress.org/ehg">ehg</a>, <a href="http://profiles.wordpress.org/tmeister">Enrique Chavez</a>, <a href="http://profiles.wordpress.org/erayalakese">erayalakese</a>, <a href="http://profiles.wordpress.org/ericlewis">Eric Andrew Lewis</a>, <a href="http://profiles.wordpress.org/ebinnion">Eric Binnion</a>, <a href="http://profiles.wordpress.org/ericmann">Eric Mann</a>, <a href="http://profiles.wordpress.org/ejdanderson">Evan Anderson</a>, <a href="http://profiles.wordpress.org/eherman24">Evan Herman</a>, <a href="http://profiles.wordpress.org/fab1en">Fabien Quatravaux</a>, <a href="http://profiles.wordpress.org/fahmiadib">Fahmi Adib</a>, <a href="http://profiles.wordpress.org/feedmeastraycat">feedmeastraycat</a>, <a href="http://profiles.wordpress.org/frank-klein">Frank Klein</a>, <a href="http://profiles.wordpress.org/garhdez">garhdez</a>, <a href="http://profiles.wordpress.org/garyc40">Gary Cao</a>, <a href="http://profiles.wordpress.org/garyj">Gary Jones</a>, <a href="http://profiles.wordpress.org/pento">Gary Pendergast</a>, <a href="http://profiles.wordpress.org/garza">garza</a>, <a href="http://profiles.wordpress.org/gauravmittal1995">gauravmittal1995</a>, <a href="http://profiles.wordpress.org/gavra">Gavrisimo</a>, <a href="http://profiles.wordpress.org/georgestephanis">George Stephanis</a>, <a href="http://profiles.wordpress.org/grahamarmfield">Graham Armfield</a>, <a href="http://profiles.wordpress.org/vancoder">Grant Mangham</a>, <a href="http://profiles.wordpress.org/gcorne">Gregory Cornelius</a>, <a href="http://profiles.wordpress.org/bordoni">Gustavo Bordoni</a>, <a href="http://profiles.wordpress.org/harrym">harrym</a>, <a href="http://profiles.wordpress.org/hebbet">hebbet</a>, <a href="http://profiles.wordpress.org/hinnerk">Hinnerk Altenburg</a>, <a href="http://profiles.wordpress.org/hlashbrooke">Hugh Lashbrooke</a>, <a href="http://profiles.wordpress.org/iljoja">iljoja</a>, <a href="http://profiles.wordpress.org/imath">imath</a>, <a href="http://profiles.wordpress.org/ipstenu">Ipstenu (Mika Epstein)</a>, <a href="http://profiles.wordpress.org/issuu">issuu</a>, <a href="http://profiles.wordpress.org/jdgrimes">J.D. Grimes</a>, <a href="http://profiles.wordpress.org/jacklenox">Jack Lenox</a>, <a href="http://profiles.wordpress.org/jackreichert">Jack Reichert</a>, <a href="http://profiles.wordpress.org/jacobdubail">Jacob Dubail</a>, <a href="http://profiles.wordpress.org/janhenkg">JanHenkG</a>, <a href="http://profiles.wordpress.org/avryl">Janneke Van Dorpe</a>, <a href="http://profiles.wordpress.org/jaza613">Jaza613</a>, <a href="http://profiles.wordpress.org/jeffstieler">Jeff Stieler</a>, <a href="http://profiles.wordpress.org/jeremyfelt">Jeremy Felt</a>, <a href="http://profiles.wordpress.org/jpry">Jeremy Pry</a>, <a href="http://profiles.wordpress.org/slimndap">Jeroen Schmit</a>, <a href="http://profiles.wordpress.org/jerrysarcastic">Jerry Bates (jerrysarcastic)</a>, <a href="http://profiles.wordpress.org/jesin">Jesin A</a>, <a href="http://profiles.wordpress.org/jayjdk">Jesper Johansen (jayjdk)</a>, <a href="http://profiles.wordpress.org/engelen">Jesper van Engelen</a>, <a href="http://profiles.wordpress.org/jesper800">Jesper van Engelen</a>, <a href="http://profiles.wordpress.org/jessepollak">jessepollak</a>, <a href="http://profiles.wordpress.org/jgadbois">jgadbois</a>, <a href="http://profiles.wordpress.org/jartes">Joan Artes</a>, <a href="http://profiles.wordpress.org/joedolson">Joe Dolson</a>, <a href="http://profiles.wordpress.org/joehoyle">Joe Hoyle</a>, <a href="http://profiles.wordpress.org/jkudish">Joey Kudish</a>, <a href="http://profiles.wordpress.org/johnbillion">John Blackbourn</a>, <a href="http://profiles.wordpress.org/johnjamesjacoby">John James Jacoby</a>, <a href="http://profiles.wordpress.org/johnzanussi">John Zanussi</a>, <a href="http://profiles.wordpress.org/duck_">Jon Cave</a>, <a href="http://profiles.wordpress.org/jonnyauk">jonnyauk</a>, <a href="http://profiles.wordpress.org/joostdevalk">Joost de Valk</a>, <a href="http://profiles.wordpress.org/softmodeling">Jordi Cabot</a>, <a href="http://profiles.wordpress.org/jjeaton">Josh Eaton</a>, <a href="http://profiles.wordpress.org/tai">JOTAKI Taisuke</a>, <a href="http://profiles.wordpress.org/juliobox">Julio Potier</a>, <a href="http://profiles.wordpress.org/justinsainton">Justin Sainton</a>, <a href="http://profiles.wordpress.org/jtsternberg">Justin Sternberg</a>, <a href="http://profiles.wordpress.org/greenshady">Justin Tadlock</a>, <a href="http://profiles.wordpress.org/jwenerd">jwenerd</a>, <a href="http://profiles.wordpress.org/kadamwhite">K.Adam White</a>, <a href="http://profiles.wordpress.org/trepmal">Kailey (trepmal)</a>, <a href="http://profiles.wordpress.org/ixkaito">Kaito</a>, <a href="http://profiles.wordpress.org/kapeels">kapeels</a>, <a href="http://profiles.wordpress.org/ryelle">Kelly Dwan</a>, <a href="http://profiles.wordpress.org/kevinlangleyjr">Kevin Langley</a>, <a href="http://profiles.wordpress.org/kworthington">Kevin Worthington</a>, <a href="http://profiles.wordpress.org/kpdesign">Kim Parsell</a>, <a href="http://profiles.wordpress.org/kwight">Kirk Wight</a>, <a href="http://profiles.wordpress.org/kitchin">kitchin</a>, <a href="http://profiles.wordpress.org/knutsp">Knut Sparhell</a>, <a href="http://profiles.wordpress.org/kovshenin">Konstantin Kovshenin</a>, <a href="http://profiles.wordpress.org/obenland">Konstantin Obenland</a>, <a href="http://profiles.wordpress.org/kurtpayne">Kurt Payne</a>, <a href="http://profiles.wordpress.org/lancewillett">Lance Willett</a>, <a href="http://profiles.wordpress.org/leewillis77">Lee Willis</a>, <a href="http://profiles.wordpress.org/lessbloat">lessbloat</a>, <a href="http://profiles.wordpress.org/layotte">Lew Ayotte</a>, <a href="http://profiles.wordpress.org/lritter">lritter</a>, <a href="http://profiles.wordpress.org/lgedeon">Luke Gedeon</a>, <a href="http://profiles.wordpress.org/m_i_n">m_i_n</a>, <a href="http://profiles.wordpress.org/funkatronic">Manny Fleurmond</a>, <a href="http://profiles.wordpress.org/targz-1">Manuel Schmalstieg</a>, <a href="http://profiles.wordpress.org/clorith">Marius Jensen (Clorith)</a>, <a href="http://profiles.wordpress.org/markjaquith">Mark Jaquith</a>, <a href="http://profiles.wordpress.org/markoheijnen">Marko Heijnen</a>, <a href="http://profiles.wordpress.org/mjbanks">Matt Banks</a>, <a href="http://profiles.wordpress.org/sivel">Matt Martz</a>, <a href="http://profiles.wordpress.org/matt">Matt Mullenweg</a>, <a href="http://profiles.wordpress.org/mattwiebe">Matt Wiebe</a>, <a href="http://profiles.wordpress.org/mboynes">Matthew Boynes</a>, <a href="http://profiles.wordpress.org/mdbitz">Matthew Denton</a>, <a href="http://profiles.wordpress.org/mattheweppelsheimer">Matthew Eppelsheimer</a>, <a href="http://profiles.wordpress.org/mattheu">Matthew Haines-Young</a>, <a href="http://profiles.wordpress.org/mattyrob">mattyrob</a>, <a href="http://profiles.wordpress.org/meekyhwang">meekyhwang</a>, <a href="http://profiles.wordpress.org/melchoyce">Mel Choyce</a>, <a href="http://profiles.wordpress.org/midxcat">mi_cat</a>, <a href="http://profiles.wordpress.org/mdawaffe">Michael Adams (mdawaffe)</a>, <a href="http://profiles.wordpress.org/michalzuber">michalzuber</a>, <a href="http://profiles.wordpress.org/mauteri">Mike Auteri</a>, <a href="http://profiles.wordpress.org/mikehansenme">Mike Hansen</a>, <a href="http://profiles.wordpress.org/mikelittle">Mike Little</a>, <a href="http://profiles.wordpress.org/mikemanger">Mike Manger</a>, <a href="http://profiles.wordpress.org/dh-shredder">Mike Schroder</a>, <a href="http://profiles.wordpress.org/mikejolley">mikejolley</a>, <a href="http://profiles.wordpress.org/mikeyarce">mikeyarce</a>, <a href="http://profiles.wordpress.org/dimadin">Milan Dinic</a>, <a href="http://profiles.wordpress.org/mnelson4">mnelson4</a>, <a href="http://profiles.wordpress.org/morganestes">Morgan Estes</a>, <a href="http://profiles.wordpress.org/usermrpapa">Mr Papa</a>, <a href="http://profiles.wordpress.org/mrmist">mrmist</a>, <a href="http://profiles.wordpress.org/m_uysl">Mustafa Uysal</a>, <a href="http://profiles.wordpress.org/muvimotv">MuViMoTV</a>, <a href="http://profiles.wordpress.org/nabil_kadimi">nabil_kadimi</a>, <a href="http://profiles.wordpress.org/namibia">Namibia</a>, <a href="http://profiles.wordpress.org/nd987">nd987</a>, <a href="http://profiles.wordpress.org/neil_pie">Neil Pie</a>, <a href="http://profiles.wordpress.org/niallkennedy">Niall Kennedy</a>, <a href="http://profiles.wordpress.org/celloexpressions">Nick Halsey</a>, <a href="http://profiles.wordpress.org/nbachiyski">Nikolay Bachiyski</a>, <a href="http://profiles.wordpress.org/schoenwaldnils">Nils Schonwald</a>, <a href="http://profiles.wordpress.org/ninos-ego">Ninos</a>, <a href="http://profiles.wordpress.org/nvwd">Nowell VanHoesen</a>, <a href="http://profiles.wordpress.org/compute">Patrick Hesselberg</a>, <a href="http://profiles.wordpress.org/pbearne">Paul Bearne</a>, <a href="http://profiles.wordpress.org/pdclark">Paul Clark</a>, <a href="http://profiles.wordpress.org/paulwilde">Paul Wilde</a>, <a href="http://profiles.wordpress.org/paulschreiber">paulschreiber</a>, <a href="http://profiles.wordpress.org/pavelevap">pavelevap</a>, <a href="http://profiles.wordpress.org/westi">Peter Westwood</a>, <a href="http://profiles.wordpress.org/philiparthurmoore">Philip Arthur Moore</a>, <a href="http://profiles.wordpress.org/philipjohn">Philip John</a>, <a href="http://profiles.wordpress.org/senlin">Piet</a>, <a href="http://profiles.wordpress.org/psoluch">Piotr Soluch</a>, <a href="http://profiles.wordpress.org/mordauk">Pippin Williamson</a>, <a href="http://profiles.wordpress.org/purzlbaum">purzlbaum</a>, <a href="http://profiles.wordpress.org/rachelbaker">Rachel Baker</a>, <a href="http://profiles.wordpress.org/rclations">rclations</a>, <a href="http://profiles.wordpress.org/iamfriendly">Richard Tape</a>, <a href="http://profiles.wordpress.org/rickalee">Ricky Lee Whittemore</a>, <a href="http://profiles.wordpress.org/rob1n">rob1n</a>, <a href="http://profiles.wordpress.org/miqrogroove">Robert Chapin</a>, <a href="http://profiles.wordpress.org/rdall">Robert Dall</a>, <a href="http://profiles.wordpress.org/harmr">RobertHarm</a>, <a href="http://profiles.wordpress.org/rohan013">Rohan Rawat</a>, <a href="http://profiles.wordpress.org/rhurling">Rouven Hurling</a>, <a href="http://profiles.wordpress.org/ruudjoyo">Ruud Laan</a>, <a href="http://profiles.wordpress.org/ryan">Ryan Boren</a>, <a href="http://profiles.wordpress.org/rmccue">Ryan McCue</a>, <a href="http://profiles.wordpress.org/sammybeats">Sam Brodie</a>, <a href="http://profiles.wordpress.org/otto42">Samuel Wood (Otto)</a>, <a href="http://profiles.wordpress.org/sathishn">sathishn</a>, <a href="http://profiles.wordpress.org/coffee2code">Scott Reilly</a>, <a href="http://profiles.wordpress.org/wonderboymusic">Scott Taylor</a>, <a href="http://profiles.wordpress.org/greglone">ScreenfeedFr</a>, <a href="http://profiles.wordpress.org/scribu">scribu</a>, <a href="http://profiles.wordpress.org/seanchayes">Sean Hayes</a>, <a href="http://profiles.wordpress.org/nessworthy">Sean Nessworthy</a>, <a href="http://profiles.wordpress.org/sergejmueller">Sergej Muller</a>, <a href="http://profiles.wordpress.org/sergeybiryukov">Sergey Biryukov</a>, <a href="http://profiles.wordpress.org/shanebp">shanebp</a>, <a href="http://profiles.wordpress.org/shaunandrews">Shaun Andrews</a>, <a href="http://profiles.wordpress.org/simonwheatley">Simon Wheatley</a>, <a href="http://profiles.wordpress.org/simonp303">simonp303</a>, <a href="http://profiles.wordpress.org/slobodanmanic">Slobodan Manic</a>, <a href="http://profiles.wordpress.org/solarissmoke">solarissmoke</a>, <a href="http://profiles.wordpress.org/sphoid">sphoid</a>, <a href="http://profiles.wordpress.org/stephdau">Stephane Daury</a>, <a href="http://profiles.wordpress.org/netweb">Stephen Edgar</a>, <a href="http://profiles.wordpress.org/stompweb">Steven Jones</a>, <a href="http://profiles.wordpress.org/strangerstudios">strangerstudios</a>, <a href="http://profiles.wordpress.org/5um17">Sumit Singh</a>, <a href="http://profiles.wordpress.org/sumobi">sumobi</a>, <a href="http://profiles.wordpress.org/t4k1s">t4k1s</a>, <a href="http://profiles.wordpress.org/iamtakashi">Takashi Irie</a>, <a href="http://profiles.wordpress.org/taylorde">Taylor Dewey</a>, <a href="http://profiles.wordpress.org/thomasvanderbeek">Thomas van der Beek</a>, <a href="http://profiles.wordpress.org/tillkruess">Till Kruss</a>, <a href="http://profiles.wordpress.org/tobiasbg">TobiasBg</a>, <a href="http://profiles.wordpress.org/tjnowell">Tom J Nowell</a>, <a href="http://profiles.wordpress.org/willmot">Tom Willmot</a>, <a href="http://profiles.wordpress.org/topher1kenobe">Topher</a>, <a href="http://profiles.wordpress.org/torresga">torresga</a>, <a href="http://profiles.wordpress.org/liljimmi">Tracy Levesque</a>, <a href="http://profiles.wordpress.org/wpsmith">Travis Smith</a>, <a href="http://profiles.wordpress.org/treyhunner">treyhunner</a>, <a href="http://profiles.wordpress.org/umeshsingla">Umesh Kumar</a>, <a href="http://profiles.wordpress.org/vinod-dalvi">Vinod Dalvi</a>, <a href="http://profiles.wordpress.org/vlajos">vlajos</a>, <a href="http://profiles.wordpress.org/westonruter">Weston Ruter</a>, <a href="http://profiles.wordpress.org/winterdev">winterDev</a>, <a href="http://profiles.wordpress.org/wojtekszkutnik">Wojtek Szkutnik</a>, <a href="http://profiles.wordpress.org/yoavf">Yoav Farhi</a>, <a href="http://profiles.wordpress.org/katzwebdesign">Zack Katz</a>, <a href="http://profiles.wordpress.org/tollmanz">Zack Tollman</a>, and <a href="http://profiles.wordpress.org/zoerooney">Zoe Rooney</a>. Also thanks to <a href="http://michaelpick.wordpress.com/">Michael Pick</a> for producing the release video, and Helen with <a href="http://adriansandi.com">Adrián Sandí</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href="http://make.wordpress.org/">Make WordPress</a> and our <a href="http://make.wordpress.org/core/">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 17:05:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:41:"WP iPhone: WordPress for iOS 4.3 Released";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://apps.wordpress.org/?p=2207";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:49:"http://apps.wordpress.org/2014/09/04/4-3-release/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3735:"<p>WordPress for iOS 4.3 is here! The download is available from the App Store. Here&#8217;s a glimpse at the latest updates:</p>\n<h3>Various stats improvements</h3>\n<p>We know you love checking your stats on the go, wherever you may be. On your Stats page, you can now see more details in the stats chart in your Visitors and Views. Just tap on any view &#8212; Days, Weeks, Months &#8212; and then click on a particular day, week, or month to view specific views and visitors stats for that item.</p>\n\n<a href="http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-37-51-am/"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-37-51-am.png?w=84&h=150" class="attachment-thumbnail" alt="Stat details for a specific day, August 20" /></a>\n<a href="http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-39-06-am/"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-39-06-am.png?w=84&h=150" class="attachment-thumbnail" alt="Stat details for the week of August 4" /></a>\n<a href="http://apps.wordpress.org/2014/09/04/4-3-release/photo-aug-26-9-38-57-am/"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-38-57-am.png?w=84&h=150" class="attachment-thumbnail" alt="Stat details for July 2014" /></a>\n\n<h3>Follow more sites in your Reader</h3>\n<p>You can now follow a blog or website, on WordPress.com and elsewhere on the web, by adding its URL. In your Reader, click on the tag at the top right of the screen, and enter the URL of the site you&#8217;d like to follow:</p>\n<p><a href="https://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-49-28-am.png"><img class="alignnone size-medium wp-image-2214" src="http://wpmobileapps.files.wordpress.com/2014/08/photo-aug-26-9-49-28-am.png?w=300&h=110" alt="Photo Aug 26, 9 49 28 AM" width="300" height="110" /></a></p>\n<p>After you click &#8220;Done,&#8221; you&#8217;ll see a &#8220;Followed&#8221; message on the screen that confirms you&#8217;ve successfully followed the site.</p>\n<h3>Other updates and fixes</h3>\n<p>In addition, we&#8217;ve provided initial support for iOS 8 in preparation for upcoming features &#8212; we&#8217;re excited about what&#8217;s to come! We&#8217;ve also released numerous stability updates, including fixes for errors that affected some users, including a crash when opening the Reader, as well as an error for live chat users who were unable to follow up on their support requests.</p>\n<p>As usual, we&#8217;re hard at work on the next release, which will include an iOS 8 &#8220;Today&#8221; extension to view stats, a major interface update for notifications and a limited rollout of a new WYSIWYG post editor.</p>\n<p>Many thanks to the contributors who worked on this release: <a href="https://github.com/astralbodies">Aaron Douglas</a>, <a href="https://github.com/irbrad">Brad Angelcyk</a>, <a href="https://github.com/cyrilchandelier">Cyril Chandelier</a>, <a href="https://github.com/roundhill">Dan Roundhill</a>, <a href="https://github.com/davidfilip">David Filip</a>, <a href="https://github.com/aerych">Eric Johnson</a>, <a href="https://github.com/koke">Jorge Bernal</a>, <a href="https://github.com/jleandroperez">Jorge Leandro Perez</a>, <a href="https://github.com/bummytime">Matt Bumgardner</a>, <a href="https://github.com/oguzkocer">Oguz Kocer</a> and <a href="https://github.com/sendhil">Sendhil Panchadsaram</a>.</p>\n<p>If you have feedback, please leave a comment below or tweet us @WordPressiOS. Thanks!</p><img alt="" border="0" src="http://pixel.wp.com/b.gif?host=apps.wordpress.org&blog=62767514&post=2207&subd=wpmobileapps&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 15:18:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Brad Angelcyk";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:50:"WordPress.tv Blog: WordPress.tv Weekly Staff Picks";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://blog.wordpress.tv/?p=369";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4079:"<p>The past week (August 25-31, 2014) has brought with it a great collection of WordCamp videos for designers and developers alike.  If you&#8217;re looking to learn more about WordPress, these videos are a great way to level up!</p>\n<h3>Loris Grillet: Selling Your Projects and Building the Perfect Client Relationship</h3>\n<p>From <a href="http://wordpress.tv/event/wordcamp-switzerland-2014/" title="Visit the WordCamp Switzerland event page on WordPress.tv" target="_blank">WordCamp Switzerland</a> (May 3-4, 2014) comes this great presentation by web and UX designer Loris Grillet on presenting design work and building a good relationship with clients.</p>\n<div id="v-Be6CkbNN-1" class="video-player">\n</div>\n<p><a href="http://wordpress.tv/2014/08/25/loris-grillet-selling-your-projects-and-building-the-perfect-client-relationship/" title="View Loris Grillet: Selling Your Projects and Building the Perfect Client Relationship" target="_blank">View on WordPress.tv</a></p>\n<h3>Simon Owen: Optimising Your Front-End Workflow for WordPress</h3>\n<p>For theme developers, this presentation from <a href="http://wordpress.tv/event/wordcamp-manchester-2014/" title="Visit the WordCamp Manchester event page on WordPress.tv" target="_blank">WordCamp Manchester</a> (June 28-29, 2014) by Simon Owen covers the techniques, applications and shortcuts that he uses to help him when building WordPress themes.</p>\n<div id="v-jtf0hlWq-1" class="video-player">\n</div>\n<p><a href="http://wordpress.tv/2014/08/29/simon-owen-optimising-your-front-end-workflow-for-wordpress/" title="View Simon Owen: Optimising Your Front-End Workflow for WordPress on WordPress.tv" target="_blank">View on WordPress.tv</a></p>\n<h3>Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin… Is Scary</h3>\n<p>Also from <a href="http://wordpress.tv/event/wordcamp-manchester-2014/" title="Visit the WordCamp Manchester event page on WordPress.tv" target="_blank">WordCamp Manchester</a> (June 28-29, 2014) comes this presentation from Kevin Stover that is an honest look at the very scary prospect of releasing a plugin to the public, and how to overcome that fear.</p>\n<div id="v-1WQjXPlQ-1" class="video-player">\n</div>\n<p><a href="http://wordpress.tv/2014/08/29/kevin-stover-the-candid-developer-developing-and-maintaining-a-successful-plugin-is-scary-2/" title="View Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin Is Scary on WordPress.tv" target="_blank">View on WordPress.tv</a></p>\n<p>Of course, this is just a sampling of the great videos that are being published every day, so feel free to visit <a href="http://wordpress.tv" title="Visit the WordPress.tv homepage" target="_blank">WordPress.tv</a> and expand your WordPress knowledge!</p>\n<p>- Your WordPress.tv Moderator Squad</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptvblog.wordpress.com/369/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptvblog.wordpress.com/369/" /></a> <img alt="" border="0" src="http://pixel.wp.com/b.gif?host=blog.wordpress.tv&blog=5310177&post=369&subd=wptvblog&ref=&feed=1" width="1" height="1" /><div><a href="http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/"><img alt="Loris Grillet: Selling Your Projects and Bbuilding the Perfect Client Relationship" src="http://videos.videopress.com/Be6CkbNN/loris-grillet-wcch14_scruberthumbnail_1.jpg" width="160" height="120" /></a></div><div><a href="http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/"><img alt="Simon Owen: Optimising Your Front-End Workflow for WordPress" src="http://videos.videopress.com/jtf0hlWq/video-365e1f5a2b_scruberthumbnail_0.jpg" width="160" height="120" /></a></div><div><a href="http://blog.wordpress.tv/2014/09/04/wordpress-tv-weekly-staff-picks/"><img alt="Kevin Stover: The Candid Developer. Developing and Maintaining A Successful Plugin… Is Scary" src="http://videos.videopress.com/1WQjXPlQ/video-7fd062bfb2_scruberthumbnail_2.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 01:01:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"Jerry Bates";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:111:"WPTavern: Critical Security Vulnerability Found in WordPress Slider Revolution Plugin, Immediate Update Advised";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29756";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:120:"http://wptavern.com/critical-security-vulnerability-found-in-wordpress-slider-revolution-plugin-immediate-update-advised";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5476:"<p>The security team at Sucuri <a href="http://blog.sucuri.net/2014/09/slider-revolution-plugin-critical-vulnerability-being-exploited.html" target="_blank">publicized a critical vulnerability</a> found in the WordPress Slider Revolution plugin recently. The bug has since been patched, but the development team for <a href="http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380" target="_blank">Slider Revolution</a> kept silent about it and did not notify their users of the importance of updating.</p>\n<p>The popular commercial slider plugin is hosted on Codecanyon, an offshoot of <a href="http://market.envato.com/" target="_blank">EnvatoMarket</a>. The slider is bundled in theme packages, such as <a href="http://theme-fusion.com/avada/" target="_blank">Avada</a>, Themeforest&#8217;s top-selling theme. It&#8217;s also packaged with other themes and used independently on thousands of websites.</p>\n<h3>Details of the Vulnerability</h3>\n<p>This is a nasty security vulnerability by which virtually anyone could easily gain access to your database credentials and everything else. It allows a remote attacker to download any file from the server, including the <em>wp-config.php</em> file, which gives the hacker full access to your site. Sucuri shared an example of how one might easily access a site&#8217;s wp-config file by exploiting the vulnerability:</p>\n<p><code>http://victim.com/wp-admin/admin-ajax.php?action=revslider_show_image&#038;img=../wp-config.php</code></p>\n<p>&#8220;This type of vulnerability is known as a Local File Inclusion (LFI) attack,&#8221; Sucuri explained. &#8220;The attacker is able to access, review, download a local file on the server.&#8221;</p>\n<p>The Slider Revolution vulnerability was first disclosed via underground forums before the plugin&#8217;s author decided to patch it silently. A team of Bangladeshi hackers published a <a href="https://www.youtube.com/watch?v=8wlTaWnhSvQ" target="_blank">video</a> on Youtube, detailing how to exploit sites that are vulnerable.</p>\n<p>The <a href="https://msisac.cisecurity.org/advisories/2014/2014-070.cfm" target="_blank">cyber advisory</a> issued on the security threat states that the vulnerability is being actively exploited in the wild. The vulnerability places small, medium, and large government and business entities at a high risk.</p>\n<p>Sucuri analyzed <a href="http://cloudproxy.sucuri.net/" target="_blank">WAF</a> access logs and confirmed that today alone &#8220;there were 64 different IP addresses trying to trigger this vulnerability on more than 1,000 different websites within our environment.&#8221;</p>\n<h3>Users Advised to Update Slider Revolution Immediately</h3>\n<p>If you are using the Slider Revolution plugin on your site, you need to update immediately to avoid becoming a victim of this critical vulnerability. You should also scan your files and database for evidence of hacking and put <a href="http://codex.wordpress.org/Hardening_WordPress" target="_blank">hardening measures</a> in place to prevent future attacks.</p>\n<p>Although the issue was fixed in version 4.2 of the plugin, issued February 25th, the changelog simply referenced a &#8220;security fix.&#8221; Users have since <a href="http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380/comments#comment_7681157" target="_blank">commented</a> on the product&#8217;s Codecanyon page to express outrage at not having been further notified:</p>\n<blockquote><p>You should have let us know to update immediately. I am signed up for notifications of updates, but the only way I found out about this was through the Sucuri blog.</p></blockquote>\n<p>The team at <a href="http://codecanyon.net/user/themepunch" target="_blank">ThemePunch</a>, the plugin&#8217;s creators, allegedly contacted multiple security companies for advice on the matter.</p>\n<p>&#8220;We urgently discussed this security issue with leading Security Companies and we were strongly advised to go with a Silent Update,&#8221; a ThemePunch representative replied. They also referenced an auto update system that users can sign up for to receive notice in the future.</p>\n<p>&#8220;We have an Update system for Auto Updates, for which you can register once you have purchased the item, which informs you about new updates.&#8221;</p>\n<h3>The Risk of Using Free or Commercial Extensions Without Update Notifications</h3>\n<p>If you are using a commercial plugin or theme that has no auto-update system or relies on email to notify you of updates, you need to be very proactive about keeping yourself informed.  A critical security vulnerability, such as the one reported for Slider Revolution, can easily take down your site(s) if you neglect updates. Theme authors don&#8217;t always update their bundled plugins and their users cannot take advantage of the auto update system provided by the plugin author.</p>\n<p>This particular security threat wouldn&#8217;t put so many sites in danger if the Slider Revolution plugin was not bundled into themes. Bundling commercial plugins with themes tends to obscure the details of how users can get plugin updates. Even with an update notification system, users are made vulnerable by developers who patch silently and don&#8217;t make an effort to notify their user base about a critical security update. Users can protect themselves from situations like this by declining to purchase themes that bundle plugins/functionality.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 23:39:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"WPTavern: Tom McFarlin Launches Crowdfunding Campaign For PodsCamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29684";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:76:"http://wptavern.com/tom-mcfarlin-launches-crowdfunding-campaign-for-podscamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2467:"<p>Running a conference is usually <a title="http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket" href="http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket">an expensive</a> endeavor. Scott Kingsley Clark is finding out personally as he continues to work towards putting on the first ever <a title="http://podscamp.org/" href="http://podscamp.org/">PodsCamp</a>, a <a title="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp" href="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp">conference devoted</a> to the <a title="http://pods.io/" href="http://pods.io/">Pods Framework</a>. Tom McFarlin hopes to ease budget concerns and has started a <a title="https://www.tilt.com/campaigns/podscamp" href="https://www.tilt.com/campaigns/podscamp">Crowd Tilt campaign</a> for PodsCamp.</p>\n<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/PodsCampCrowdTilt.png" rel="prettyphoto[29684]"><img class="size-full wp-image-29750" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/PodsCampCrowdTilt.png?resize=667%2C447" alt="Crowd Tilt Campaign For PodsCamp" /></a>Crowd Tilt Campaign For PodsCamp\n<p>The campaign is set to tilt at $1,500 with $3,000 being the target amount. According to the <a title="https://www.tilt.com/campaigns/podscamp/description" href="https://www.tilt.com/campaigns/podscamp/description">campaign description</a>, it offers an opportunity for people to give back to the project.</p>\n<blockquote><p>Since the Pods team has given so much to WordPress in a variety of ways and since I <i>know</i> how generous the WordPress community is, I&#8217;d love to raise some money to help out with the finances of the conference.</p>\n<p>No amount is too small. Seriously &#8211; $1.00 is helpful &#8211; but I know that Scott and his team are doing amazing things for WordPress, and I know that many of us are benefiting from it &#8211; or will benefit from it &#8211; in some way.</p></blockquote>\n<p>An alternative to donating is to <a title="http://podscamp.org/tickets/" href="http://podscamp.org/tickets/">purchase a ticket</a> for $50 and attend the event. It&#8217;s October 3rd in Dallas, TX, and will focus on all things Pods. It&#8217;s the first time the entire development team will be in the same physical location.</p>\n<p>If you&#8217;ve been thinking about donating to the Pods plugin, consider contributing to the campaign to help Clark put on a phenomenal conference.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 21:46:24 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:103:"WPTavern: Gitium Provides Automatic Git Version Control and Deployment for WordPress Plugins and Themes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29556";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:113:"http://wptavern.com/gitium-provides-automatic-git-version-control-and-deployment-for-wordpress-plugins-and-themes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3894:"<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium.jpg" rel="prettyphoto[29556]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium.jpg?resize=1025%2C481" alt="gitium" class="aligncenter size-full wp-image-29717" /></a></p>\n<p>One important trend surfacing this year is WordPress developers&#8217; growing desire to add git-based version control to their sites. It adds an extra layer of safety in case you need to revert changes. Version control also helps multi-person teams work together more efficiently on the same website.</p>\n<p>Several plugin options are in the works in varying stages of development. While VersionPress <a href="http://wptavern.com/versionpress-misses-crowdfunding-goal-by-14-5k" target="_blank">missed its crowdfunding goal by $14.5K</a> and struggles to put out a working prototype, the <a href="http://wptavern.com/free-revisr-plugin-offers-git-management-for-wordpress" target="_blank">Revisr plugin</a> is open source and already available on WordPress.org.</p>\n<p><a href="http://www.gitium.com/" target="_blank">Gitium</a> is a new plugin in beta, targeted specifically at adding version control for plugins and themes. It enables continuous deployment for WordPress and integrates with Github, Bitbucket, or Travis-CI.The plugin provides automatic git version control and deployment for WordPress extensions and also tracks code edits that originate in the plugin and theme editors.</p>\n<p>Gitium was built by the folks at <a href="http://www.presslabs.com/" target="_blank">PressLabs</a>, a Romanian-based WordPress hosting company. It requires the git command line tool (minimum version of 1.7) installed on the server and the <a href="http://php.net/manual/en/function.proc-open.php" target="_blank">proc_open PHP function</a> enabled.</p>\n<p>Gitium installs like a normal plugin and the settings page prompts the user to provide a URL for remote access to a Git repository via SSH, HTTPS, or Subversion. If you use <a href="https://github.com/" target="_blank">GitHub</a> or <a href="https://bitbucket.org/" target="_blank">Bitbucket</a>, you will need the key issued by Gitum for SSH key-based authentication to allow write access to your repository.</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium-settings.jpg" rel="prettyphoto[29556]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/gitium-settings.jpg?resize=779%2C453" alt="gitium-settings" class="aligncenter size-full wp-image-29718" /></a></p>\n<p>Once configured, Gitium will monitor when you add, remove, update or change files in a plugin or theme. The plugin sets the WordPress logged-in user as the author of the commits. It allows for staging and production to follow different branches of the same repository. Code can be deployed using <code>git push</code>. In the event of a conflict, Gitium will overwrite the changes on the origin repository with the local changes- local modifications will always take precedence over remove ones.</p>\n<p>Ordinarily, most of the code changes on a WordPress site happen within the context of plugins and themes. Gitium allows you to keep track of who changed what. At the moment, the plugin does not support WordPress multisite or submodules. If you need to track changes in both the files and database of your site, then <a href="http://wptavern.com/free-revisr-plugin-offers-git-management-for-wordpress" target="_blank">Revisr</a> might be a more suitable option for adding git-based version control to your site.</p>\n<p>Gitium is licensed under the GPLv2 license. It is still in beta and is not yet ready for production use. Adventurous folks can download it for free from the <a href="http://www.gitium.com/" target="_blank">Gitium</a> website or check out the project on <a href="https://github.com/PressLabs/gitium" target="_blank">GitHub</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 19:06:11 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"Matt: ALS Challenge Fails";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44069";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:41:"http://ma.tt/2014/09/als-challenge-fails/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:394:"<p><span class="embed-youtube"></span></p>\n<p>Pretty hilarious compilation of ALS Ice Bucket Challenges gone wrong. I&#8217;ve been challenged and it&#8217;s not going to happen, but <a href="http://www.alsa.org/donate/">did make a donation to the foundation</a>. Really clever marketing, reminenscent of <a href="http://www.charitywater.org/">charity: water&#8217;s</a> birthday campaigns.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 17:34:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:44:"WP iPhone: WordPress Android App Version 3.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://apps.wordpress.org/?p=2193";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:71:"http://apps.wordpress.org/2014/09/03/wordpress-android-app-version-3-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3747:"<p>The WordPress Android app version 3.1 is now available in the Google Play Store. This update brings robust statistics to the app experience, and makes keeping up with your favorite sites in the Reader even easier.</p>\n<h1>Native Statistics Details</h1>\n<p>Now, you can tap the bar chart in your Statistics to access more detailed stats. Tap a specific bar in the Days, Weeks, or Months views to see detailed data on your views and visitors.</p>\n\n<a href="http://apps.wordpress.org/?attachment_id=2228"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/09/native-stats-day.png?w=84&h=150" class="attachment-thumbnail" alt="native-stats-day" /></a>\n<a href="http://apps.wordpress.org/?attachment_id=2229"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/09/native-stats-week.png?w=84&h=150" class="attachment-thumbnail" alt="native-stats-week" /></a>\n<a href="http://apps.wordpress.org/?attachment_id=2230"><img width="84" height="150" src="http://wpmobileapps.files.wordpress.com/2014/09/native-stats-month.png?w=84&h=150" class="attachment-thumbnail" alt="native-stats-month" /></a>\n\n<h1>General Changes</h1>\n<ul>\n<li>Automatic refresh: Statistics and Reader post lists automatically refresh when you open the app, so you always see the newest data.</li>\n<li>Improved Reader experience: To make interacting on the go easier, we added <a href="http://en.blog.wordpress.com/2014/08/07/introducing-comment-likes/" target="_blank">comment likes</a> to the Reader. You can also block blogs on Reader tag pages to customize your reading experience.</li>\n<li>Updated blog preview. See screenshot below:</li>\n</ul>\n<p><a href="https://wpmobileapps.files.wordpress.com/2014/08/new-blog-preview2.png"><img class="alignnone size-large wp-image-2205" src="http://wpmobileapps.files.wordpress.com/2014/08/new-blog-preview2.png?w=720&h=352" alt="new-blog-preview2" width="720" height="352" /></a></p>\n<p>&nbsp;</p>\n<p>We&#8217;ve also temporarily disabled the live chat with Automattic support due to an issue with the library we&#8217;re using. We expect to re-enable it in the next version or two.</p>\n<h1>Bug Fixes</h1>\n<p>This version also comes with a bunch of bug fixes. Here&#8217;s a non-exhaustive list:</p>\n<ul>\n<li>Improved notifications synchronization, which sometimes got stuck.</li>\n<li>Fixed the ability to follow a blog by its URL.</li>\n<li>Fixed broken blockquote styling in the comments view.</li>\n</ul>\n<h1>What’s Next?</h1>\n<p>A big thanks to all of the contributors who worked on this release: <a href="https://github.com/beaucollins">@beaucollins</a>, <a href="https://github.com/daniloercoli">@daniloercoli</a>, <a href="https://github.com/maxme">@maxme</a>, <a href="https://github.com/mjangda">@mjangda</a>, <a href="https://github.com/nbradbury">@nbradbury</a>, <a href="https://github.com/roundhill">@roundhill</a> and <a href="https://github.com/sendhil">@sendhil</a>! You can keep up with the development progress for the next version by visiting <a href="https://github.com/wordpress-mobile/WordPress-Android/issues?q=is%3Aopen+is%3Aissue+milestone%3A3.2">our 3.2 milestone on GitHub</a> or by following us on Twitter <a href="http://twitter.com/wpandroid">@WPAndroid</a>.</p>\n<p>Beta testers have access to beta versions with beta updates shipped directly through Google Play. The beta versions may have new features, new fixes, and possibly new bugs. If you want to join them, request access on our <a href="https://plus.google.com/communities/108813167297661427043">Google+ Community</a>.</p><img alt="" border="0" src="http://pixel.wp.com/b.gif?host=apps.wordpress.org&blog=62767514&post=2193&subd=wpmobileapps&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 14:30:16 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Maxime";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Matt: Downtown Vegas Podcast";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44072";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:44:"http://ma.tt/2014/09/downtown-vegas-podcast/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:430:"<p>I&#8217;m a fan of Tony Hsieh&#8217;s <a href="http://downtownproject.com/">Downtown Project</a> and try to do something with the community whenever I&#8217;m in town. On Thursday I&#8217;m going to be on the <a href="http://www.downtownpodcast.tv/">Downtown Vegas Podcast</a> which will be filmed live at 9 pm at <a href="https://www.facebook.com/inspirelv">Inspire Theatre</a>. Please come by if you&#8217;re in the area!</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Sep 2014 06:55:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:62:"WPTavern: Sprout Apps Launches Free WordPress Invoicing Plugin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29553";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:72:"http://wptavern.com/sprout-apps-launches-free-wordpress-invoicing-plugin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4837:"<p>Last month, <a href="https://sproutapps.co/" target="_blank">Sprout Apps</a> announced that it would soon be <a href="http://wptavern.com/sprout-apps-to-launch-a-suite-of-wordpress-powered-apps-targeted-at-freelancers-and-small-businesses" target="_blank">launching a suite of business apps</a> targeted at WordPress freelancers and small businesses. While the company is still in pre-launch operations, <a href="http://wordpress.org/plugins/sprout-invoices/" target="_blank">Sprout Invoices</a> was just released on WordPress.org as part of the launch plan.</p>\n<p><a href="http://dancameron.org/" target="_blank">Dan Cameron</a>, the founder of Sprout Apps, believes there are some distinct advantages to managing common business-related tasks in the admin. The Sprout Apps product suite aims to streamline and brand all client communications, making your WordPress site the center of activity for your business. Cameron hopes that users will opt for a homegrown WordPress solution that fits right into their websites, instead of relegating business tasks to third-party applications with narrow customization options.</p>\n<p>The <a href="http://wordpress.org/plugins/sprout-invoices/" target="_blank">Sprout Invoices</a> plugin unifies the workflow of estimate creation and invoice management. It allows you to receive estimate requests via a default form, or you can integrate it with Gravity Forms or Ninja Forms. The plugin automatically creates estimates based on the requests you receive and you can easily manage their status in the admin:</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/easy-estimate-management.png" rel="prettyphoto[29553]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/easy-estimate-management.png?resize=1025%2C705" alt="easy-estimate-management" class="aligncenter size-full wp-image-29660" /></a></p>\n<p>Once an estimate is accepted, the plugin automatically generates the invoice to speed up the process of being paid. Sprout Invoicing has built-in support for deposit payments.</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoice.png" rel="prettyphoto[29553]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoice.png?resize=1025%2C795" alt="sprout-invoice" class="aligncenter size-full wp-image-29662" /></a></p>\n<p>Sprout Invoicing allows for custom estimate and invoice templates, which you can brand for your business via a standards WordPress theme template. Notification editing allows for plain-text or HTML, so you can also match the branding in your email communications.</p>\n<p>The plugin&#8217;s dashboard lets you know how your business is doing at a glance, with charts and summaries:</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoicing-dashboard.gif" rel="prettyphoto[29553]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/sprout-invoicing-dashboard.gif?resize=606%2C342" alt="sprout-invoicing-dashboard" class="aligncenter size-full wp-image-29665" /></a></p>\n<p>Sprout Invoicing also includes dynamic reports, which allow for date filtering, sorting, search, and exporting &#8211; all of the features you would normally expect from your standard invoicing app.</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/dynamic-reports.gif" rel="prettyphoto[29553]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/dynamic-reports.gif?resize=606%2C342" alt="dynamic-reports" class="aligncenter size-full wp-image-29666" /></a></p>\n<p>The free Sprout Invoicing plugin allows you to accept payment via Paypal Pro or send customers to Paypal to pay invoices. The <a href="https://sproutapps.co/marketplace/" target="_blank">Sprout App marketplace</a> includes additional upgrades and payment add-ons.</p>\n<p>Sprout Invoicing features at a glance include:</p>\n<ul>\n<li>Advanced Estimate and Invoice Admin</li>\n<li>200+ filters and actions for hooking into the plugin and altering anything</li>\n<li>Customizable invoice and estimate templates</li>\n<li>Discounts</li>\n<li>Deposit Payments</li>\n<li>Taxes</li>\n<li>Client records with multiple points of contact</li>\n<li>Nested line items</li>\n<li>Pre-defined tasks/line items</li>\n<li>AJAX throughout to speed up workflow</li>\n</ul>\n<p>In the future, Cameron plans to add importing from WP-Invoice, Harvest, and Freshbooks. Other major features on the roadmap include time tracking, recurring payments, and payment terms.</p>\n<p>If you are currently using commercial invoicing software and want to save your small business a little bit of cash, Sprout Invoices looks like a promising WordPress-based alternative. You can <a href="http://wordpress.org/plugins/sprout-invoices/" target="_blank">download</a> it for free from WordPress.org.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 02 Sep 2014 22:00:08 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:49:"WPTavern: The Hidden Savings Of a WordCamp Ticket";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29602";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wptavern.com/the-hidden-savings-of-a-wordcamp-ticket";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:12215:"<p>When we wrote about tickets going on sale for the <a title="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp" href="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp">first ever PodsCamp</a>, some folks commented that <a title="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58410" href="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58410">$50 was too much</a> for a one day event, especially when compared to a WordCamp. I agree with <a title="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58440" href="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58440">Sarah Pressler who said</a>, &#8220;WordCampers are spoiled by the $20-40 fees associated with WordCamps.&#8221;</p>\n<p>To see how spoiled the WordPress community is in having the WordPress Foundation, WordCamp Central pillar sponsors, and <a title="">Multi-Event Sponsors</a> foot most of the bill for WordCamps, I compared their prices with other conferences. I also discovered through public budget reports that ticket prices are 2-4 times cheaper than what the total amount of expenses are per attendee.</p>\n<h2>Joomla Conferences</h2>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/Joomla-Logo.png" rel="prettyphoto[29602]"><img class="aligncenter size-full wp-image-29604" src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/Joomla-Logo.png?resize=1025%2C260" alt="Joomla Logo" /></a></p>\n<p>Joomla has two different types of conferences. One is called <a title="http://docs.joomla.org/JoomlaDays" href="http://docs.joomla.org/JoomlaDays">Joomla Day</a> while the other is <a title="http://events.joomla.org./joomla-conferences/699-joomla-world-conference" href="http://events.joomla.org./joomla-conferences/699-joomla-world-conference">Joomla World</a>. Joomla Day is a 1-3 day event, similar to WordCamps. They&#8217;re held all over the world. Based on my research, prices for events based in the United States range from $20-$80.</p>\n<p>Joomla World is similar to WordCamp San Francisco in that its a once a year, unique experience in addition to learning about Joomla from premiere speakers. The location of Joomla World changes every year.</p>\n<p>This year, it&#8217;s in Grand Oasis Cancun, Mexico, November 7th-9th. Early bird tickets are $199 while standard tickets are $299. The 3-day pass includes access to all the sessions from Friday through Sunday. Food and accommodations are <strong>NOT</strong> included with the ticket.</p>\n<p>According to the <a title="http://events.joomla.org./how-to-organize-a-joomla-day" href="http://events.joomla.org./how-to-organize-a-joomla-day">Joomla events website</a>, <a title="http://opensourcematters.org/" href="http://opensourcematters.org/">Open Source Matters</a> will provide $2,500 in funding to first time Joomla Days. For subsequent annual events, OSM will provide $1,500 in financial support.</p>\n<h2>Drupal Conferences</h2>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/drupal_logo-blue.png" rel="prettyphoto[29602]"><img class="aligncenter size-full wp-image-29657" src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/drupal_logo-blue.png?resize=620%2C249" alt="Drupal Logo" /></a></p>\n<p>Drupal also has two different conference types, Drupal Camp and DrupalCon. A <a title="https://www.drupal.org/node/247972" href="https://www.drupal.org/node/247972">Drupal Camp</a> is similar to WordCamp in that it&#8217;s a 1-2 day event that focuses on many aspects of Drupal in one location. DrupalCon is the official conference of the Drupal Community.</p>\n<p>Tickets for DrupalCon Austin, TX, that took place June 2nd-6th ranged in price depending on when you purchased them. Here&#8217;s what the ticket price break down looks like.</p>\n<ul>\n<li>Earlybird     $400     ends April 4</li>\n<li>Regular        $500     ends May 2</li>\n<li>Late              $550     ends May 30</li>\n<li>Onsite          $600     ends June 5</li>\n</ul>\n<p>These are the average prices for a DrupalCon held in the United States. A ticket to DrupalCon Austin would have given you access to a daily lunch and morning coffee break, most of the event, and swag items. Drupal Camps on the other hand average $20 for admission. The ticket price includes food and swag items.</p>\n<p><a title="http://www.acquia.com/" href="http://www.acquia.com/">Acquia</a> is the commercial entity that supports the Drupal project and is the top-tier sponsor for most DrupalCons. Similar to WordPress and Joomla, <a title="https://assoc.drupal.org/" href="https://assoc.drupal.org/">Drupal has an association</a> dedicated to helping the open-source CMS project flourish. Unlike Joomla and WordPress, the Drupal Association does not help with the fiscal responsibilities of Drupal Camps.</p>\n<h2>Everyone Sees Value Differently</h2>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png" rel="prettyphoto[29602]"><img class="size-full wp-image-29491" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png?resize=697%2C284" alt="The First Ever Podscamp" /></a>The First Ever Podscamp\n<p>The only person that determines whether a conference is worth the price of admission is the attendee. On price alone, WordCamps are substantially more affordable than several other conferences related to open source software. This is in large part due to the financial support provided by the <a title="http://wordpressfoundation.org/" href="http://wordpressfoundation.org/">WordPress Foundation, </a> <a title="http://central.wordcamp.org/sponsorship-level/wordcamp-pillar/" href="http://central.wordcamp.org/sponsorship-level/wordcamp-pillar/">WordCamp Pillar Sponsors</a>, and <a title="http://central.wordcamp.org/multi-event-sponsorship-packages/" href="http://central.wordcamp.org/multi-event-sponsorship-packages/">Multi-Event Sponsors</a>.</p>\n<p>While Scott Kingsley Clark would love to have <a title="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58437" href="http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp#comment-58437">PodsCamp be free to attend</a>, the costs associated with the event prohibit it from happening. Since it&#8217;s a separate event from WordCamp, Clark doesn&#8217;t have access to the funds WordCamps enjoy. Instead, he&#8217;s relying on sponsors to help offset the costs so everything is not out of his pocket.</p>\n<p>Again, value is determined by an individual but for $50, you get food, a full day of sessions devoted to Pods, and face to face access with the entire development team. I think $50 is a bargain, especially for those who use Pods extensively.</p>\n<h2>Should Open Source Conferences Be Free?</h2>\n<p>There is a line of thought that open source conferences should be free to attend. Steve Burge, of OSTraining.com, <a title="https://www.ostraining.com/blog/general/open-source-event-free/" href="https://www.ostraining.com/blog/general/open-source-event-free/">explains why</a>.</p>\n<blockquote><p>If you want to increase the number of people using your software, you should leverage your event to attract as many people as you possibly can.</p>\n<p>If you charge $50 or more, you&#8217;ll only ever attract the same old people. If you want to attract new people, try and remove all barriers that might stop them from attending.</p></blockquote>\n<p>Burge goes on to list a few different ways offering free tickets can work. I&#8217;ve never organized a WordCamp myself but have spoken to many who have. Several of them have told me the cost of the venue is the most expensive part of the event. Food and beverages are typically the second largest expense. Swag items are not as expensive as you might think since they are purchased in bulk.</p>\n<p>I don&#8217;t think what Burge describes is likely to happen for WordCamps. Part of the reason is expectations. The other is that because of the <a title="http://plan.wordcamp.org/" href="http://plan.wordcamp.org/">WordCamp guidelines</a>, several of the events are <em>cookie cutter</em> in nature. By upping the ante with a bigger after party or extravagant offerings, WordCamps can differentiate themselves. It&#8217;s possible the cost of differentiating the event will generate more expensive tickets unless it&#8217;s offset by a sponsorship.</p>\n<p>One item Burge doesn&#8217;t mention in his post is the incentive given to people who pay for a ticket. The <a title="http://plan.wordcamp.org/planning-details/selling-tickets/" href="http://plan.wordcamp.org/planning-details/selling-tickets/">WordCamp planning site</a> explains the benefits of charging a small fee.</p>\n<blockquote><p>We think of WordCamp tickets not as being comparable to conference tickets (for many WordCamp lineups, you’d have to pay hundreds of dollars at a regular conference), but as being just enough to get people out of bed on that sleepy WordCamp morning.</p>\n<p>Typical prices run about $15-20 per day, which basically covers lunch and a t-shirt, leaving you to cover the additional event costs through <a title="Fundraising" href="http://plan.wordcamp.org/planning-details/fundraising/">fundraising</a>. If you think you need to charge more than $20 per day, chances are there’s something going on your budget that can be adjusted.</p></blockquote>\n<h2>WordCamp Budgets Show How Much Money We&#8217;re Saving On Ticket Prices</h2>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/06/CashRegisterFeaturedImage.png" rel="prettyphoto[29602]"><img class="size-full wp-image-25380" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/06/CashRegisterFeaturedImage.png?resize=637%2C200" alt="Cash Register Featured Image" /></a>photo credit: <a href="http://www.flickr.com/photos/jalevega/8733967750/">Historias Visuales</a> &#8211; <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/">cc</a>\n<p>At least a few WordCamps have their budget reports available for public viewing. The numbers that jump out at me are the total expenses per attendee.</p>\n<ul>\n<li><a title="http://2013.london.wordcamp.org/2014/04/30/wordcamp-london-2013-budget/" href="http://2013.london.wordcamp.org/2014/04/30/wordcamp-london-2013-budget/">WordCamp London 2013</a></li>\n<li><a title="https://docs.google.com/spreadsheet/ccc?key=0ArMhzS3WJ97adExMLXZBbDVrVkxKZks2c1BhWGdQc3c&usp=sharing" href="https://docs.google.com/spreadsheet/ccc?key=0ArMhzS3WJ97adExMLXZBbDVrVkxKZks2c1BhWGdQc3c&usp=sharing">WordCamp Milwaukee 2014</a></li>\n<li><a title="http://2013.sf.wordcamp.org/2013/04/07/the-wordcamp-san-francisco-budget-or-how-i-learned-to-stop-worrying-and-love-the-spreadsheet/" href="http://2013.sf.wordcamp.org/2013/04/07/the-wordcamp-san-francisco-budget-or-how-i-learned-to-stop-worrying-and-love-the-spreadsheet/">WordCamp San Francisco 2013</a></li>\n<li><a title="http://www.wordcamphouston.com/2010-wordcamp-budget/" href="http://www.wordcamphouston.com/2010-wordcamp-budget/">WordCamp Houston 2010</a></li>\n</ul>\n<p>Both WordCamp San Francisco and Milwaukee had a total expense amount close to $83 per attendee. This means both events would have needed to charge attendees $84 to put on the event without financial support from external sources. WCSF charged $20 per day per person while Milwaukee charged $25 for Saturday and Sunday. Thanks to sponsorships and the WordPress Foundation, attendees saved anywhere from $40-$60 per ticket.</p>\n<h2>WordCamps Need To Keep Ticket Prices Low</h2>\n<p>The biggest point Burge makes in his post and something I agree with is that the more affordable conferences are, the more people who can attend them. I&#8217;d hate to see average WordCamp prices between $50-$80 for 1-2 days of learning. More expensive WordCamps would cause exclusivity which is against the ethos of WordPress.</p>\n<p>I&#8217;d love to hear from WordCamp organizers on ideas or steps you&#8217;ve taken to get more people with low income levels to attend your event. I&#8217;m also interested to know if you offer free tickets to college students or members of non-profit organizations.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 02 Sep 2014 21:12:34 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:68:"WPTavern: Saga: A Free WordPress Theme for Writers from Theme Hybrid";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29076";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:77:"http://wptavern.com/saga-a-free-wordpress-theme-for-writers-from-theme-hybrid";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4333:"<p>When Theme Hybrid <a href="http://wptavern.com/stargazer-a-free-design-specific-parent-theme-for-wordpress" target="_blank">launched its Stargazer theme</a>, the idea of a design-specific parent theme that would provide limitations landed in stark contrast to the super generic, all-encompassing themes that permeate the market. You&#8217;ve probably seen themes marketed as &#8220;the last WordPress theme you&#8217;ll ever need.&#8221; They kinds of themes purport to have so much flexibility that they can be suitable for any kind of website. Stargazer was launched as the exact opposite.</p>\n<p>Justin Tadlock is aiming to restore the original design for the relationship between parent and child themes. His post on <a href="http://themehybrid.com/weblog/designing-the-box" target="_blank">Designing in a Box</a> further explains the philosophy behind child themes with limitations where the parent theme houses the majority of the design. The Stargazer experiment inspired a flurry of child themes. It represented a shift in how Theme Hybrid themes are built and its overwhelming success prompted Tadlock to create another.</p>\n<p><a href="http://themehybrid.com/weblog/saga-wordpress-theme" target="_blank">Saga</a> is the next parent theme in Theme Hybrid&#8217;s revolution. It was designed specifically for writers and has been stripped of anything that would distract from the content.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/saga.png" rel="prettyphoto[29076]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/09/saga.png?resize=880%2C660" alt="saga" class="aligncenter size-full wp-image-29607" /></a></p>\n<p>The theme was designed with careful attention to typography, since it focuses on the written word. The homepage and single posts display big, bold featured images. The customizer offers custom color options and a header icon option with 400+ icons to choose from. Navigation is mobile-friendly and hidden until clicked.</p>\n<p>Saga seamlessly integrates with several of Tadlock&#8217;s free plugins for further customization, including <a href="http://themehybrid.com/plugins/custom-background-extended" target="_blank">Custom Background Extended</a>, <a href="http://themehybrid.com/plugins/grid-columns" target="_blank">Grid Columns</a>, and <a href="http://themehybrid.com/plugins/custom-header-extended" target="_blank">Custom Header Extended</a> for per-post headers and backgrounds.</p>\n<p>The theme is compatible with Philip Author Moore’s new <a href="http://wptavern.com/new-plugin-adds-subtitles-to-wordpress-posts-pages-and-custom-post-types" target="_blank">Subtitles</a> plugin, which offers an elegant and portable way to include subtitles even if you change themes.</p>\n<p>Saga also includes beautiful support for post formats with a unique design for each format.</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/saga-post-formats.png" rel="prettyphoto[29076]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/saga-post-formats.png?resize=970%2C540" alt="saga-post-formats" class="aligncenter size-full wp-image-29625" /></a></p>\n<p>Check out a <a href="http://locallylost.com/saga/" target="_blank">live demo</a> of Saga to see the theme in action.</p>\n<h3>Build a Saga Child Theme</h3>\n<p>If you want to build a child theme for Saga, the barrier for entry is intentionally low so that new theme developers can easily get started experimenting. &#8220;Like Stargazer, you can literally build a custom child theme for Saga with just a few lines of code,&#8221; Tadlock said. Child theme authors who submit their themes to Theme Hybrid and WordPress.org will receive a free, lifetime membership to Theme Hybrid. You&#8217;ll also receive a detailed technical review from Tadlock and the WordPress Theme Review Team, which will help you refine your skills as a theme author.</p>\n<p>Even if you&#8217;re not planning on building a child theme, Saga is beautiful without any modifications. It offers writers a unique design for sharing stories while keeping the focus on the content. If your blog needs a design refresh, you can <a href="http://themehybrid.com/themes/saga" target="_blank">download Saga</a> for free from Theme Hybrid. It will also be arriving soon on WordPress.org, pending approval.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 02 Sep 2014 18:32:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:78:"WPTavern: WordPress Plugin Boilerplate 3.0 Released with New Community Website";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29559";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:88:"http://wptavern.com/wordpress-plugin-boilerplate-3-0-released-with-new-community-website";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6679:"<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb.png" rel="prettyphoto[29559]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb.png?resize=1025%2C482" alt="wppb" class="aligncenter size-full wp-image-29572" /></a></p>\n<p>Version 3.0 of the <a href="https://github.com/tommcfarlin/WordPress-Plugin-Boilerplate" target="_blank">WordPress Plugin Boilerplate</a> was released today. The open source project was started in 2011 by Tom McFarlin as a GitHub repository for storing code while he learned plugin development. Over the past three years, the boilerplate has matured beyond his expectations with the help of 39 contributors. It now has more than 1800 stars on GitHub and a brand new logo and <a href="http://wppb.io/" target="_blank">website</a>.</p>\n<h3>What&#8217;s New in 3.0?</h3>\n<p>The 3.0 release constitutes a major rewrite of the boilerplate. The primary objective of the project is to provide a standardized, object-oriented starting place for building high quality plugins.</p>\n<p>&#8220;In the new version, we&#8217;ve broken things down into a very, very specific organizational structure,&#8221; McFarlin explained. &#8220;It&#8217;s much more object-oriented than it&#8217;s predecessor, the code doesn&#8217;t include a lot of TODO&#8217;s. Instead, the comments give developers guidance as to what a variable or a function should be doing when using the Boilerplate.&#8221;</p>\n<p>As developers implement their own work using the boilerplate, they are encouraged to overwrite the comments that are included as a guide.</p>\n<p>McFarlin and contributors made every effort to ensure that the code in version 3.0 conforms to WordPress&#8217; <a href="http://codex.wordpress.org/WordPress_Coding_Standards" target="_blank">coding standards</a> and its <a href="http://codex.wordpress.org/Inline_Documentation" target="_blank">inline documentation standards</a>.</p>\n<p>The plugin boilerplate now includes classes that are responsible for everything. There are classes for:</p>\n<ul>\n<li>Plugin activation</li>\n<li>Plugin deactivation</li>\n<li>Plugin Internationalization</li>\n<li>A class that&#8217;s used to register all hooks with WordPress</li>\n<li>A core plugin class</li>\n<li>Some use of common object-oriented design paradigms</li>\n<li>A specific location for dashboard-related functionality, styles, and scripts</li>\n<li>A location for public-facing styles, and scripts</li>\n<li>A location for shared code (be it libraries or not)</li>\n<li>A template for a plugin readme</li>\n<li>A directory structure that mimics the WordPress Plugin Repository&#8217;s Subversion directory</li>\n<li>Places for screenshots, banner images, and even the <a href="http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer" target="_blank">custom icons</a> that were just announced for WordPress 4.0</li>\n</ul>\n<p>The new directory structure is now broken down into assets and trunk directories:</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb-directory-structure.png" rel="prettyphoto[29559]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/09/wppb-directory-structure.png?resize=884%2C620" alt="wppb-directory-structure" class="aligncenter size-full wp-image-29580" /></a></p>\n<p>One of the most exciting updates to 3.0 is that this version of the boilerplate can be installed and activated like a regular plugin, making it easier for new plugin developers to get started. &#8220;It doesn&#8217;t introduce any functionality into WordPress,&#8221; McFarlin explained. &#8220;But there are two sample JavaScript files that show how to use the core Boilerplate code to get started.&#8221;</p>\n<h3>The Future of the WordPress Plugin Boilerplate: Expanded Documentation and Community</h3>\n<p>Version 3.0 omits the <a href="https://github.com/afragen/github-updater" target="_blank">Github Updater</a>, which was part of previous versions. The reason behind this change is that McFarlin wanted to scale back the boilerplate&#8217;s contents in order to offer only the bare essentials to get started.</p>\n<p><strong>&#8220;I want to start up Editions (or basically forks) of the Boilerplate that are tailored to those who like to use Grunt or Composer or those who want to include the GitHub updater in the plugin,&#8221;</strong> he said. &#8220;Personally, I&#8217;m a big fan of it and I use it in a number of my plugins, but I didn&#8217;t want to build it into this version when it can just as easily be added by someone else&#8217;s fork.&#8221;</p>\n<p>With the new website and branding in place, McFarlin hopes to develop the community behind the project. &#8220;Hopefully, having a face to relate to the Boilerplate will help elevate it beyond just a miscellaneous GitHub repository,&#8221; he said. &#8220;A domain, a logo, branding, and all of that stuff can go a long way in helping others to associate a project with an idea and a group of people more than an open source repository and a README could ever do.&#8221;</p>\n<p>McFarlin plans to expand the boilerplate&#8217;s documentation on the website and grow a community where developers can share ideas and forks that they&#8217;ve created for specific use cases, such as WordPress multisite.</p>\n<p>Appealing to new developers is also part of the goal for the new website. <strong>&#8220;I want to make the Boilerplate more accessible &#8211; GitHub is great, but it&#8217;s great if you&#8217;re a programmer,&#8221;<strong> McFarlin said. &#8220;If not, it&#8217;s really intimidating and people have no idea how to get started with contributing to a project.&#8221;</p>\n<p>The boilerplate website will serve to provide documentation, example code, and an explanation of how people can get involved contributing to the project. McFarlin is even considering adding courses, editions, and a forum. &#8220;To be honest, I&#8217;ve even considered holding online events where people can pay to learn how to use the Boilerplate for certain things, though this and all of the other things are so far on the backburner that it&#8217;s hard to envision how it&#8217;s going to play out right now,&#8221; he said.</p>\n<p>Over the years, the community surrounding the boilerplate has helped to shape its future and McFarlin is committed to move the project in a direction that continues to serve WordPress plugin developers.</p>\n<p>&#8220;I think the one thing that I never expect to hear, yet never get tired of hearing, is: <em>&#8216;I didn&#8217;t know how to write a plugin or where to start until I found the Boilerplate,&#8217;</em>&#8221; he said. &#8220;That&#8217;s a really great feeling.&#8221;</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 02 Sep 2014 14:41:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Matt: Fight Club A/B Testing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44063";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:42:"http://ma.tt/2014/09/fight-club-abtesting/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:221:"<p>Luca Sartoni writes <a href="http://lucasartoni.com/2014/08/28/the-rules-of-ab-testing-by-tyler-durden/">The Rules of A/B Testing by Tyler Durden</a>. &#8220;1st Rule: You don&#8217;t talk about A/B Testing.&#8221;</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 01 Sep 2014 15:39:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:15;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:29:"Akismet: August Stats Roundup";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://blog.akismet.com/?p=1680";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://blog.akismet.com/2014/09/01/august-stats-roundup/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3819:"<div id="attachment_1681" class="wp-caption alignright"><img class="wp-image-1681 size-medium" src="http://akismet.files.wordpress.com/2014/09/harry_potter_stack_of_books.jpg?w=240&h=300" alt="Harry Potter stack of books" width="240" height="300" /><p class="wp-caption-text"><a href="https://www.flickr.com/photos/angelic0devil6/865080396">&#8220;Potter II&#8221; by </a><a href="https://www.flickr.com/photos/angelic0devil6/">L. Whittaker</a><a href="https://www.flickr.com/photos/angelic0devil6/865080396"> is licensed under </a><a href="https://creativecommons.org/licenses/by/2.0/">CC BY 2.0</a></p></div>\n<p><em>This post is part of a monthly series summarizing some stats and figures from the Akismet universe. Feel free to browse <a href="http://blog.akismet.com/category/monthly-roundup/">all of the posts in the series</a>.</em></p>\n<p>In August, there were 7,203,785,500 pieces of spam that came through Akismet. <strong>If each piece of spam were one word, it would take 6645 copies of the Harry Potter series to accomodate them all.</strong></p>\n<p>Here&#8217;s a breakdown of the number of spam and legitimate comments (what we call ham) we saw last month:</p>\n<div id="attachment_1682" class="wp-caption alignnone"><a href="https://akismet.files.wordpress.com/2014/09/akismet-spam-and-ham-stats-aug-2014.png"><img class="wp-image-1682 size-large" src="http://akismet.files.wordpress.com/2014/09/akismet-spam-and-ham-stats-aug-2014.png?w=700&h=436" alt="Akismet spam and ham stats Aug 2014" /></a><p class="wp-caption-text">Our busiest day was August 21, with about 269 million spam messages, and the slowest day was August 3 with 173 million. We missed only about 1 in every 5,916 spams.</p></div>\n<p>The number of spam message is up 92% from last year, which is a similar large rise we&#8217;ve seen in previous months. It&#8217;s also up from last month by 28%.</p>\n<p>The number of legimate messages that went through this month is 33,377,8500. <strong>If each legitimate comment was a word, they&#8217;d only fill 307 copies of the Harry Potter series.</strong> The amount of legitimate content going around is only about 4% &#8211; and the large difference is business as usual.</p>\n<p>As always, if your own missed spam or false positive numbers are on the rise, we&#8217;d love to help. You can reach out through our <a href="http://akismet.com/contact/">contact form</a>.</p>\n<p>August was a big month in the spam universe, three services were in the news. Google added new spam filtering support to Gmail &#8211; you can find more info on <a href="http://www.pcworld.com/article/2464440/google-tightens-gmail-spam-filtering.html">PC World</a>. Twitter <a href="https://blog.twitter.com/2014/fighting-spam-with-botmaker">announced</a> its new spam filtering system, BotMaker. And, Apple&#8217;s iMessage seems to have been hit with a bout of spam. Wired <a href="http://www.wired.com/2014/08/apples-imessage-is-being-taken-over-by-spammers/">explained why</a>, though MacWorld showed us why the numbers <a href="http://www.macworld.com/article/2597429/hold-the-phone-imessage-spam-not-all-its-cracked-up-to-be.html">may not in fact be so dire</a>.</p>\n<p>And now for a question for the readers: <strong>what other data tidbits would you like to see mentioned or discussed in these monthly spam reports?</strong> We&#8217;d love to hear from you, and accomodate where we can <span class="wp-smiley emoji emoji-smile" title=":)">:)</span></p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/1680/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/1680/" /></a> <img alt="" border="0" src="http://pixel.wp.com/b.gif?host=blog.akismet.com&blog=116920&post=1680&subd=akismet&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 01 Sep 2014 05:43:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:7:"Valerie";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:16;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:42:"Matt: You Can’t Tell This is 3D Rendered";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44052";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:29:"http://ma.tt/2014/08/ikea-3d/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:442:"<p><img class="aligncenter size-full wp-image-44057" src="http://i2.wp.com/s.ma.tt/files/2014/08/2014-08-27-ikea-3d-01.jpg?resize=604%2C411" alt="" /></p>\n<p>Khoi Vinh writes about <a href="http://www.subtraction.com/2014/08/27/ikea-is-selling-you-a-pack-3d-rendered-of-lies/">How 75% of the real-looking photographs you see in an Ikea catalog are actually 3d-rendered</a>. <cite>Hat tip: <a href="http://hfz.im/">Hafiz Rahman</a>.</cite></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 31 Aug 2014 15:29:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:17;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"Matt: Why LaTeX?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44050";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:30:"http://ma.tt/2014/08/whylatex/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:448:"<blockquote class="twitter-tweet" width="550"><p>Posts like this are why <a href="https://twitter.com/wordpressdotcom">@wordpressdotcom</a> and <a href="https://twitter.com/jetpack">@jetpack</a> offer LaTeX / Beautiful Math support. <a href="http://t.co/rYUbyq2IpR">http://t.co/rYUbyq2IpR</a></p>\n<p>&mdash; George Stephanis (@daljo628) <a href="https://twitter.com/daljo628/statuses/504230941514944512">August 26, 2014</a></p></blockquote>\n<p></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 30 Aug 2014 14:58:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:18;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:53:"WPTavern: Tickets On Sale For The First Ever PodsCamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29485";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://wptavern.com/tickets-on-sale-for-the-first-ever-podscamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4175:"<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png" rel="prettyphoto[29485]"><img class="size-full wp-image-29491" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/PodsCampFeaturedImage.png?resize=697%2C284" alt="The First Ever Podscamp" /></a>The First Ever PodsCamp\n<p>Tickets are <a title="http://podscamp.org/tickets/" href="http://podscamp.org/tickets/">now on sale</a> for the first ever <a title="http://podscamp.org/" href="http://podscamp.org/">PodsCamp</a>. It&#8217;s being held in Dallas, TX on October 3rd, 2014, a day before <a title="http://2014.dfw.wordcamp.org/" href="http://2014.dfw.wordcamp.org/">WordCamp DFW</a> (Dallas/Fort Worth) with a ticket price of $50 each. Each ticket grants you access to the event, BBQ for lunch, and direct access to the developers of Pods Framework.</p>\n<p>The event will focus on what you can do with Pods and will <a title="http://podscamp.org/schedule/" href="http://podscamp.org/schedule/">feature sessions on topics</a> such as an introduction to Pods, building applications, and a Q&amp;A session with the Pods development team. For those not familiar with the plugin, <a title="http://wordpress.org/plugins/pods/" href="http://wordpress.org/plugins/pods/">Pods</a> is a framework for creating, managing, and deploying customized content types and fields.</p>\n<h2>A First For The Pods Development Team</h2>\n<p>The event will mark the first time the entire Pods development team will be under one roof. Lead developer for Pods, Scott Kingsley Clark, said the team will be in Dallas, TX the Wednesday before WordCamp and will be working on putting the finishing touches on Pods 3.0.</p>\n<p>Clark explains why the team hasn&#8217;t had a PodsCamp in the past. &#8220;We&#8217;ve been talking about and planning an event like this for years, but it wasn&#8217;t until the Pods team grew large enough for me to feel like we could really do something worth people&#8217;s time.&#8221;</p>\n<h2>No Conflicts With WordCamp</h2>\n<p>Initially, I thought PodsCamp was taking place at the same time as WordCamp DFW but since it&#8217;s a day before, it won&#8217;t interfere with the event. &#8220;It&#8217;s completely separate, in terms of organization and funding,&#8221; Clark told the Tavern.</p>\n<p>A few years ago, <a title="http://podcamp.pbworks.com/w/page/17344268/FrontPage" href="http://podcamp.pbworks.com/w/page/17344268/FrontPage">PodCamps</a> would sometimes be merged with a WordCamp to offer attendees a chance to attend two events with one ticket. However, WordCamp central frowns against this practice and now states that WordCamps must be focused on WordPress. From the WordCamp Central FAQ:</p>\n<blockquote><p><strong>Q.</strong> Can I do a track at a BarCamp/PodCamp/other event and call it WordCamp?<br />\n<strong>A.</strong> No. The use of the WordCamp name indicates that it is a standalone event dedicated to WordPress, and to prevent confusion, WordPress “tracks” within larger events such as BarCamp or other conferences are no longer called WordCamps.</p></blockquote>\n<h2>Sponsoring and Needing to Be Sponsored</h2>\n<p>The <a title="http://podsfoundation.org/" href="http://podsfoundation.org/">Pods Foundation</a> is sponsoring the WordCamp DFW Contributor Day on October 5th, through a deal Clark made to secure the same space for both days. At the same time, PodsCamp is in need of more sponsors. If you&#8217;re interested in <a title="http://podscamp.org/2014/08/19/call-sponsors/" href="http://podscamp.org/2014/08/19/call-sponsors/">sponsorship opportunities</a>, please get in touch with the organizing team. SiteGround, Chris Lema, Aesop Interactive, and Beil Media are just a sample of the sponsors already on board with helping the event.</p>\n<p>I think it&#8217;s great to see events like PodsCamp where you can focus on a particular plugin or subject while not conflicting with a WordCamp that same weekend. I like the strategy on the part of Clark and his team for the event to be a day before WordCamp so people can attend both without worrying about missing sessions.</p>\n<p>Will you be attending the first ever PodsCamp?</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 22:36:06 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:19;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WPTavern: How to Create a Quick Style Guide for Client Websites";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29499";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:73:"http://wptavern.com/how-to-create-a-quick-style-guide-for-client-websites";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3870:"<p>The business of building WordPress websites is exploding, and most agencies and freelancers have more work than they can handle. Clients are attracted to WordPress because of how easy it is to manage content. In the old days, if you had a website built, you would still need to hire a developer to make updates to your content or design. WordPress makes it possible for anyone to create new posts, pages, products, etc., without any technical experience.</p>\n<p>The flip side of this is that your design may be in danger when everything is so easy to edit. If you want to keep branding consistent across a website, you may need to include a style guide to breakdown the design you&#8217;ve created.</p>\n<p>Having a style guide for reference is especially important if you are passing off a CMS to a client who will be using it to create content on a regular basis. Without a guide your client may go nuts with customization features that may be built into the theme. Before you know it, he will have used 10 different typefaces in various places and multiple header colors and sizes. The beautiful website you created can end up looking like digital goulash in the end, which is no good for your portfolio.</p>\n<p>I&#8217;d like to introduce you to <a href="http://stylifyme.com/" target="_blank">Stylify Me</a>, a handy new tool that can automatically create a quick style guide for any website. Simply enter the site URL and the app will return its background colors, text colors, typography, and image dimensions.</p>\n<p>Here are the colors you get when you input WordPress.org:</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-styles.jpg" rel="prettyphoto[29499]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-styles.jpg?resize=982%2C552" alt="wordpress-styles" class="aligncenter size-full wp-image-29504" /></a></p>\n<p>It also returns the typography and image dimensions found on the homeapage.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-typography.png" rel="prettyphoto[29499]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wordpress-typography.png?resize=973%2C491" alt="wordpress-typography" class="aligncenter size-full wp-image-29517" /></a></p>\n<p>The download for your style guide comes in the form of a PDF, a somewhat inconvenient file type that many clients seem to love for whatever reason. Obviously, this is just a quick start which you can further edit and fine tune. Some homepages may not lend themselves as well to demonstrating the site&#8217;s style. In that case you may want to select another content page from which the app can extract styles more representative of the site as a whole.</p>\n<p>The Stylify Me app was built on <a href="http://nodejs.org/" target="_blank">NodeJS</a> and <a href="http://phantomjs.org/" target="_blank">PhantomJS</a>. Its creators, <a href="https://twitter.com/annabelleyoon" target="_blank">Annabelle Yoon</a> and <a href="https://twitter.com/MicMro" target="_blank">Michael Mrowetz</a>, wanted to provide a tool that would allow designers to research sites more efficiently, without having to inspect each element. The app is hosted on <a href="http://heroku.com/" target="_blank">Heroku</a> using the <a href="https://github.com/ddollar/heroku-buildpack-multi" target="_blank">multi buildpack</a> and is MIT-licensed. Check out the code on <a href="https://github.com/micmro/Stylify-Me" target="_blank">GitHub</a> to see how it works.</p>\n<p><a href="http://stylifyme.com" target="_blank">Stylify Me</a> gives you the ability to quickly generate a style guide that will help your clients keep their websites within the realm of the original design. Providing a style guide adds an extra touch, which demonstrates that you care and are invested in your client&#8217;s success.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 22:23:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:20;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:30:"Matt: Journalism vs Mass-Media";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44047";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:45:"http://ma.tt/2014/08/journalism-vsmass-media/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:335:"<p>Matthew Ingram writes for Gigaom: <a href="http://gigaom.com/2014/08/26/journalism-is-doing-just-fine-thanks-its-mass-media-business-models-that-are-ailing/">Journalism is doing just fine, thanks — it’s mass-media business models that are ailing</a>. <cite>Hat tip: <a href="http://stratechery.com/">Ben Thompson</a>.</cite></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 20:52:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:21;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:75:"WPTavern: Nouveau Riche: A Free WordPress Blogging Theme for Creative Minds";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29473";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:84:"http://wptavern.com/nouveau-riche-a-free-wordpress-blogging-theme-for-creative-minds";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3987:"<p><a href="http://fortisthemes.com" target="_blank">Denis Bosire</a> has been working with WordPress for more than five years. As client work became more frustrating, he decided to focus his attention on WordPress themes. After an unsuccessful attempt to monetize themes at Creative Market, Bosire decided to try his hand at developing themes for WordPress.org. <a href="http://wordpress.org/themes/nouveau-riche" target="_blank">Nouveau Riche</a> was approved this week and is his first theme in the directory.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche.png" rel="prettyphoto[29473]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche.png?resize=880%2C660" alt="nouveau-riche" class="aligncenter size-full wp-image-29483" /></a></p>\n<p>Nouveau Riche is a simple, customizable blogging theme that was designed for creative minds. It offers beautiful support for post formats, with custom icons assigned to each. The theme utilizes the native WordPress customizer to include options for uploading a logo, adding a header and background image, and setting colors for the header, background, and theme.</p>\n<p>The sidebar is hidden by default and slides out when clicked. The theme also includes support for two other widget areas- main footer and sub footer.</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche-sidebar.jpg" rel="prettyphoto[29473]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/nouveau-riche-sidebar.jpg?resize=1025%2C701" alt="nouveau-riche-sidebar" class="aligncenter size-full wp-image-29489" /></a></p>\n<p>Check out a <a href="http://demo.fortisthemes.com/nouveau/" target="_blank">live demo</a> to see the theme in action.</p>\n<p>Nouveau Riche is based on the <a href="http://underscores.me/" target="_blank">Underscores</a> starter theme. &#8220;I didn&#8217;t use any framework, just _S starter theme, which I use for ALL of my other themes,&#8221; Bosire told the Tavern. &#8220;No CSS framework either; I find them very unsuitable for WordPress themes because of all the bloat. Took me about three days from start to finish and submitted it immediately,&#8221; he said.</p>\n<p>Bosire found that building the theme was easy and quick, because he was used to all the WordPress coding standards after finishing a theme for WordPress.com. His commercial theme is currently undergoing review and should be launching in a few days. He plans to release another free theme in September in addition to another commercial blogging theme that is still in process.</p>\n<p>His journey began when he started offering free themes on his website. &#8220;I started building simple blogging themes and offering them for free on my website,&#8221; Bosire said. &#8220;I then proceeded to build premium themes that I sell on Creative Market. Sadly, they didn&#8217;t sell as expected but I really enjoyed building themes, so I decided to continue doing it, this time for WordPress.org.&#8221;</p>\n<p>Bosire&#8217;s tenacity in continuing theme development after a discouraging experience is admirable. If you build a theme and submit it to one marketplace where it doesn&#8217;t take off, don&#8217;t get discouraged and stop building themes. If you love creating themes for WordPress users, try again via a different distribution route. If you choose to go the WordPress.org route, you&#8217;ll learn quite a bit during the process with the help of <a href="http://wptavern.com/a-day-in-the-life-of-a-wordpress-theme-reviewer" target="_blank">Theme Review Team</a>.</p>\n<p>Nouveau Riche is a beautiful and simple blogging theme that you can personalize in a matter of minutes. It&#8217;s responsive and translation-ready. If your blog needs a fresh design but you don&#8217;t have a lot of time, this might be good option. <a href="http://wordpress.org/themes/nouveau-riche" target="_blank">Download </a> Nouveau Riche for free from WordPress.org.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 20:43:35 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:22;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:75:"WPTavern: Why You Might Consider Adding Development Hours to Your Changelog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29275";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:85:"http://wptavern.com/why-you-might-consider-adding-development-hours-to-your-changelog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3936:"<p>Jean Galea, who is a member of the <a title="https://www.facebook.com/groups/advancedwp/" href="https://www.facebook.com/groups/advancedwp/">Advanced WordPress group</a> on Facebook, recently shared a plugin with an interesting changelog. It&#8217;s called <a title="https://wordpress.org/plugins/bulk-delete" href="https://wordpress.org/plugins/bulk-delete">Bulk Delete</a> and is developed by Sudar Muthu, a developer based in Bangalore, India. The changelog not only shows which bugs have been fixed or features that were added, it also displays the amount of time spent on each release.</p>\n<a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteChangelog.png" rel="prettyphoto[29275]"><img class="size-full wp-image-29472" src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteChangelog.png?resize=524%2C462" alt="Bulk Delete Changelog On WordPress.org" /></a>Bulk Delete Changelog On WordPress.org\n<p>Due to some personal things going in his life, Muthu began to track how much time he was investing in his side projects. &#8220;This happened because I got married and suddenly the amount of free time that I used to have in my life started to dry up. I wanted to find out which pet projects are taking up the majority of my free time,&#8221; Muthu Told the Tavern. In April of 2012, <a title="http://sudarmuthu.com/blog/started-tracking-time-spend-on-my-pet-projects/" href="http://sudarmuthu.com/blog/started-tracking-time-spend-on-my-pet-projects/">he wrote about the initiative</a> and started adding the metrics to the changelog of Bulk Delete.</p>\n<a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteInAction.png" rel="prettyphoto[29275]"><img class="size-full wp-image-29471" src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/BulkDeleteInAction.png?resize=955%2C655" alt="Bulk Delete Settings Page" /></a>Bulk Delete Settings Page\n<p>Some plugin authors have funded development of their plugin by having users pay for specific features. Muthu doesn&#8217;t get paid to work on Bulk Delete but he has started to sell <a title="http://bulkwp.com/" href="http://bulkwp.com/">commercial addons</a> for it.</p>\n<h2>A Different Approach to Getting Free Support</h2>\n<p>One of the things Muthu has noticed is how users approach him to receive free support. &#8220;After I started adding the amount of time I am spending on different plugins in the changelog, the way people interact in the support forum seems to have changed a bit. I felt that they were able to understand the amount of time I am investing in developing and supporting a free plugin,&#8221; Muthu said.</p>\n<p>I asked if he thinks this is something other plugin authors should consider implementing. &#8220;Each developer has their own preference but I guess if possible, I would like plugin authors to do this. It seems <a title="https://twitter.com/kelter/status/478983307884236801" href="https://twitter.com/kelter/status/478983307884236801">people like it</a> and it will also let people know how much time an author spends in developing and maintaining a free plugin,&#8221; Muthu said.</p>\n<h2>I Think It&#8217;s a Great Idea</h2>\n<p>As someone who investigates the changelog for every plugin update, I&#8217;ve seen my share of them. However, I&#8217;ve yet to see one that is as detailed and informative as <a title="https://wordpress.org/plugins/bulk-delete/changelog/" href="https://wordpress.org/plugins/bulk-delete/changelog/">Bulk Delete</a>. Showing the amount of time each version takes to develop gives users a perspective of the time and effort required to maintain a plugin. We generally hear how much time is involved, but rarely get to see how much.</p>\n<p>Would you like to see this type of information added to the changelog of more plugins? Will seeing the amount of time change the way you approach the author to receive support? Sound off in the comments.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 19:56:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:23;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:93:"WPTavern: Google Authorship is Officially Dead, WordPress Authorship Plugins are Now Obsolete";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29438";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:228:"http://wptavern.com/google-authorship-is-officially-dead-wordpress-authorship-plugins-are-now-obsolete?utm_source=rss&utm_medium=rss&utm_campaign=google-authorship-is-officially-dead-wordpress-authorship-plugins-are-now-obsolete";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4329:"<p>John Mueller, Webmaster Trends Analyst at Google, <a href="https://plus.google.com/u/0/+JohnMueller/posts/HZf3KDP1Dm8" target="_blank">announced</a> today that Google will be discontinuing its support for authorship in search results.</p>\n<blockquote><p>We&#8217;ve gotten lots of useful feedback from all kinds of webmasters and users, and we&#8217;ve tweaked, updated, and honed recognition and displaying of authorship information. Unfortunately, we&#8217;ve also observed that this information isn’t as useful to our users as we’d hoped, and can even distract from those results. With this in mind, we&#8217;ve made the difficult decision to stop showing authorship in search results.</p></blockquote>\n<p>In June 2014, author photos were <a href="http://searchengineland.com/google-plays-authorship-search-results-dropping-profile-image-google-circle-count-195163" target="_blank">dropped from search results</a> in order to reduce clutter in the design, according to Mueller. Today&#8217;s announcement means that the rel=author markup will no longer be tracked on websites.</p>\n<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2013/09/cutts.jpg" rel="prettyphoto[29438]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2013/09/cutts.jpg?resize=472%2C280" alt="Google authorship in action" class="size-full wp-image-9315" /></a>Google authorship in action\n<p>Authorship was an experiment that Google had been running for the past three years. Mueller reported that their tests showed that removing authorship generally does not seem to reduce traffic to sites, nor does it make it more likely that users will click on ads. The change was allegedly implemented to improve users&#8217; experience.</p>\n<p>Although the authorship schema is no longer used to identify a post&#8217;s author in search results, Mueller says there&#8217;s no need to be in a rush to remove it from your code. &#8220;We&#8217;re no longer using it for authorship, we treat it like any other markup on your pages. Leaving it is fine, it won&#8217;t cause problems (and perhaps your users appreciate being able to find out more about you through your profile too),&#8221; he said.</p>\n<p>Jetpack 2.5 introduced an easy way for WordPress users to <a href="http://wptavern.com/automatically-add-google-authorship-to-wordpress-posts-with-jetpack-2-5" target="_blank">add authorship to posts</a>. Representatives from the Jetpack team were not immediately available to comment on whether or not the plugin will shed the dead weight of authorship in the next release. There are many other WordPress <a href="http://wordpress.org/plugins/search.php?q=google+authorship" target="_blank">plugins that add Google authorship</a>, though not as elegantly as Jetpack did. Several major SEO plugins also incorporate ways to add authorship to posts. The authorship-related functionality in these plugins is now obsolete.</p>\n<p>Mueller emphasized that even though authorship is being discontinued, Google will continue its support for structured markup:</p>\n<blockquote><p>Going forward, we&#8217;re strongly committed to continuing and expanding our support of structured markup (such as <a href="http://schema.org/" target="_blank">schema.org</a>). This markup helps all search engines better understand the content and context of pages on the web, and we&#8217;ll continue to use it to show rich snippets in search results.</p></blockquote>\n<p>Many SEO specialists have speculated that linking authorship to Google+ profiles was a ploy to get more people to use Google+, a product that has failed to gain momentum. Fans of the authorship feature are baffled by its removal, given that Google&#8217;s research indicates that it doesn&#8217;t seem to affect search results. From a user&#8217;s standpoint, seeing an author you recognize can be tremendously beneficial when selecting among similar search results.</p>\n<p>Google is well known for experimenting with features and products and killing them off as soon as tests show that they are no longer valuable. It&#8217;s not clear whether or not authorship will be reincarnated in some other form down the road. If you&#8217;re using a WordPress plugin that adds authorship to your site for SEO purposes, you are safe to disable it, as Google is no longer interested in that data.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 29 Aug 2014 01:25:13 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:24;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"WPTavern: ProWordPress Subreddit Passes 1,000 Subscribers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29393";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:156:"http://wptavern.com/prowordpress-subreddit-passes-1000-subscribers?utm_source=rss&utm_medium=rss&utm_campaign=prowordpress-subreddit-passes-1000-subscribers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4264:"<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/reddit.jpg" rel="prettyphoto[29393]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/reddit.jpg?resize=877%2C399" alt="reddit" class="aligncenter size-full wp-image-29436" /></a></p>\n<p>Earlier this year we featured the <a href="http://www.reddit.com/r/ProWordPress/" target="_blank">/r/ProWordPress </a> subreddit on a post exploring various <a href="http://wptavern.com/add-these-subreddits-to-your-list-of-wordpress-watering-holes" target="_blank">WordPress watering holes</a>. If you&#8217;re not familiar with subreddits, they are essentially focused topics where where registered users can vote article submissions &#8220;up&#8221; or &#8220;down.&#8221; Subscribing to a subreddit allows you to hone in on specific topics where you have an interest.</p>\n<p>/r/ProWordPress was started by Brad Williams, CEO of <a href="http://webdevstudios.com/" target="_blank">WebDevStudios</a> and author of <a href="http://www.amazon.com/Professional-WordPress-Plugin-Development-Williams/dp/0470916222" target="_blank">Professional WordPress Plugin Development</a>. As a developer, Williams has a strong interest in exploring more technical topics surrounding WordPress. The group recently passed 1,000 subscribers (currently at 1,027 readers) and continues to grow.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/prowordpress-subreddit.png" rel="prettyphoto[29393]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/prowordpress-subreddit.png?resize=743%2C309" alt="prowordpress-subreddit" class="aligncenter size-full wp-image-29421" /></a></p>\n<p>&#8220;I started the r/ProWordPress subreddit to focus on more advanced WordPress topics,&#8221; Williams told the Tavern.  &#8220;<a href="http://www.reddit.com/r/Wordpress" target="_blank">r/WordPress</a> is great but will always have more beginner users, so it&#8217;s hard for the more advanced topics to surface. <strong>r/ProWordPress is a smaller, more focused subreddit with a focus on advanced WP topics.</strong>&#8221;</p>\n<p>As the subreddit has grown, r/ProWordPress has become one of William&#8217;s main sources of news on WordPress development. More subscribers translates into a wider reach of advanced topics as well as more voting users to curate the quality of articles that float to the top. Williams has the ability to moderate the topics submitted but reports that, unless you have a highly active subreddit, very little work is required.</p>\n<p>With WordPress now powering <a href="http://w3techs.com/technologies/overview/content_management/all" target="_blank">more than 23% of all websites online</a>, the community surrounding the software is growing at breakneck speed. People are working with WordPress every day, building businesses on top of it, and are seeking out places online to learn from each other. Matt Mullenweg recently jumped in on the <a href="http://wptavern.com/matt-mullenweg-hosts-impromptu-qa-session-on-facebook" target="_blank">Advanced WordPress group on Facebook</a>, which has accrued more than 9,000 members. This group explores a wide range of WordPress-related topics but may not appeal to everyone.</p>\n<p>While some WordPress users enjoy interacting on Facebook, others are taking to forums such as <a href="http://wptavern.com/wpchat-relaunches-as-a-forum-dedicated-to-wordpress" target="_blank">WP Chat</a>. Different kinds of groups are popping up, reflecting the various interaction styles that WordPress community members use to connect.</p>\n<p><strong>&#8220;WordPress has such a large user base that it&#8217;s hard to have a one size fits all area for all topics,&#8221;</strong> Williams said. In his corner of the internet, he hopes that /r/ProWordPress will continue to be a nice place to share and read about more advanced topics. In some ways Reddit combines the best aspects of both Twitter and forums, in that you can share articles, vote, and comment to enter into discussions with other members. If advanced WordPress development falls within your wheelhouse, make sure to drop by the <a href="http://www.reddit.com/r/ProWordPress/" target="_blank">/r/ProWordPress </a> subreddit and subscribe to new topics.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 23:15:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:25;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:102:"WPTavern: WP Settings Generator: Quickly Create a Custom Options Page Using the WordPress Settings API";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29385";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:246:"http://wptavern.com/wp-settings-generator-quickly-create-a-custom-options-page-using-the-wordpress-settings-api?utm_source=rss&utm_medium=rss&utm_campaign=wp-settings-generator-quickly-create-a-custom-options-page-using-the-wordpress-settings-api";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3454:"<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/switches.png" rel="prettyphoto[29385]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/switches.png?resize=949%2C461" alt="photo credit: Leo Reynolds - cc" class="size-full wp-image-29409" /></a>photo credit: <a href="https://www.flickr.com/photos/lwr/7293237710/">Leo Reynolds</a> &#8211; <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/">cc</a>\n<p>Yesterday we featured a plugin, created by application developer Jeroen Sormani, that <a href="http://wptavern.com/wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard" target="_blank">clones Google Keep functionality in the WordPress dashboard</a>. Sormani has produced a number of other interesting experiment with WordPress, including a little known tool for generating WordPress settings.</p>\n<p>The <a href="http://wpsettingsapi.jeroensormani.com/" target="_blank">WP Settings Generator</a> is a tool for plugin and theme developers. It generates a custom options page that is fully compatible with the <a href="http://codex.wordpress.org/Settings_API" target="_blank">WordPress Settings API</a> standards. The tool is similar to the kinds of generators found at <a href="http://generatewp.com/" target="_blank">GenerateWP</a>, which lacks a tool for creating settings.</p>\n<p>On the config tab you can enter your plugin/theme name, plugin prefix, and text domain. Select your menu position and then proceed to the next tab.</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-generator.png" rel="prettyphoto[29385]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-generator.png?resize=730%2C417" alt="settings-generator" class="aligncenter size-full wp-image-29387" /></a></p>\n<p>The next screen provides a drag-and-drop interface for adding settings fields:</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-fields.png" rel="prettyphoto[29385]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/settings-fields.png?resize=974%2C662" alt="settings-fields" class="aligncenter size-full wp-image-29388" /></a></p>\n<p>Once you have added all your fields, you will be presented with your customized settings code, which you can scroll through and copy to your plugin. Although it is designed to create settings pages for themes or plugins, the general consensus these days is that it&#8217;s preferable to utilize the native customizer for theme settings.</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/the-code.png" rel="prettyphoto[29385]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/the-code.png?resize=974%2C551" alt="the-code" class="aligncenter size-full wp-image-29390" /></a></p>\n<p>After reviewing your code, you have the opportunity to leave a personalized review of the generator. If you find that the code you receive has any errors or seems off, make sure to let Sormani know with a quick comment.</p>\n<p>Of course, using a settings generator isn&#8217;t going to help you learn how the WordPress Settings API works, but it does give you a quick start for creating options. It&#8217;s not so much of a teaching tool but rather designed to eliminate the rote task of writing your own settings. <a href="http://wpsettingsapi.jeroensormani.com/" target="_blank">Check it out</a> and let us know if it ends up saving you time.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 21:03:47 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:26;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"Matt: Everything Is Bloated";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44042";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:42:"http://ma.tt/2014/08/everything-isbloated/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:126:"<p>Tom McFarlin writes <a href="http://tommcfarlin.com/everything-is-bloated/">Everything Is Bloated, Nothing Is Good</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 17:30:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:27;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:68:"WPTavern: An Easy Way To Notify Users When Their Comment Is Approved";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29371";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:180:"http://wptavern.com/an-easy-way-to-notify-users-when-their-comment-is-approved?utm_source=rss&utm_medium=rss&utm_campaign=an-easy-way-to-notify-users-when-their-comment-is-approved";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2475:"<p>By default, WordPress doesn&#8217;t notify users when their comments are approved from the moderation queue. If you&#8217;d like to change that, consider using the <a title="http://wordpress.org/plugins/comment-approved/" href="http://wordpress.org/plugins/comment-approved/">Comment Approved</a> plugin by <a title="http://media-enzo.nl/" href="http://media-enzo.nl/">Niels van Renselaar</a>. The plugin is simple to use and configure. After it&#8217;s installed and activated, you&#8217;ll find the settings in <strong>Settings &gt; Comment Approved</strong>. It&#8217;s important to note that even when the plugin is activated, it won&#8217;t send out notifications unless you check mark the box to enable the comment approved message.</p>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedSettings.png" rel="prettyphoto[29371]"><img class="size-full wp-image-29372" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedSettings.png?resize=1014%2C561" alt="Click The Checkbox To Enable The Comment Approved Message" /></a>Click The Checkbox To Enable The Comment Approved Message\n<p>The text area is populated with a default message using the only two shortcodes available. You can customize this message using standard HTML. Here is what the default message looks like in an email.</p>\n<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedEmailContent.png" rel="prettyphoto[29371]"><img class="size-full wp-image-29373" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/CommentApprovedEmailContent.png?resize=726%2C210" alt="Default Approved Message Email Content" /></a>Default Approved Message Email Content\n<p>While I like the default behavior to notify users when their comment is approved, you can use this plugin to award first time commenters. For example, you can send them a link to a free eBook or a different promotional item. Once the user&#8217;s comment is approved, they won&#8217;t see the approval message again.</p>\n<p>It&#8217;s strange that comment approval notifications are not part of the default behaviour of WordPress. I think it makes sense, especially if the front-end notifies them that their comment may be held in moderation. While I doubt this plugin will prevent commenters from getting in touch with site administrators to figure out why their comment is not displaying on the site, at least they&#8217;ll know when it&#8217;s approved.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 07:49:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:28;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:81:"WPTavern: Jason Schuller Shares His Experience Running a WordPress Theme Business";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29349";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:206:"http://wptavern.com/jason-schuller-shares-his-experience-running-a-wordpress-theme-business?utm_source=rss&utm_medium=rss&utm_campaign=jason-schuller-shares-his-experience-running-a-wordpress-theme-business";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4642:"<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg" rel="prettyphoto[29349]"><img class="aligncenter size-full wp-image-15225" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg?resize=650%2C200" alt="Press75 Logo Featured Image" /></a></p>\n<p>Jason Schuller who was the previous owner of <a title="http://press75.com/" href="http://press75.com/">Press75.com</a>, has <a title="https://medium.com/@jschuller/a-brief-history-of-a-wordpress-theme-business-3847e16fcba4" href="https://medium.com/@jschuller/a-brief-history-of-a-wordpress-theme-business-3847e16fcba4">published a great post</a> detailing his experience of running a WordPress commercial theme business from 2008-2014. While Schuller describes a variety of ups and downs he encountered while running the business, I thought his reasoning for losing his way in 2010 was fascinating.</p>\n<blockquote><p>As WordPress became increasingly more complex and option rich, so did the demand for themes. The proverbial “gold rush” of the WordPress world hit and new shops were launching almost weekly with themes that were powered by complex frameworks including endless layout, customization, style options and “shortcodes”. In 2010 I began to focus more on the “bar” that had been set by the market and less on why I started Press75 to begin with.</p></blockquote>\n<p>Instead of continuing to focus on what he was so good at doing, he started developing themes to cater to the market which was outside of his passion. The increase in complexity in WordPress coupled with various development techniques he implemented in his catalog of 20 themes became a huge burden, especially when it came to support. One piece of advice Schuller shares that I think is important and hits home for many commercial theme authors is to <span class="pullquote alignleft">never forget who you are and what your own style is. Be inspired by what others are doing, but always stay true to yourself.</span></p>\n<p>Schuller is not the first person to learn this lesson the hard way. When <a title="https://upthemes.com/open-letter/" href="https://upthemes.com/open-letter/">UpThemes announced</a> a complete restructuring of their theme business in early 2014, they cited poor infrastructure as one of the main culprits of creating a large demand for support.</p>\n<blockquote><p>Building the themes was easy enough, but then selling, deploying, supporting, updating, and generally making a profit on them was something we struggled with, mightily. With every theme, we introduced a ton of new code that had to be supported and maintained. This was at a time when WordPress was still changing the way themes worked. It made development more difficult.</p></blockquote>\n<p>One of the things Schuller wished he had done is to hire the right people once the business became too much to handle. Not doing so put all of the pressure of running the business on his shoulders. In the post, he shares a few other lessons I think aspiring theme shop owners can learn from as well. If you&#8217;d like to hear Schuller tell his story, listen to this <a title="http://wptavern.com/interview-with-jason-schuller-founder-of-press75-com" href="http://wptavern.com/interview-with-jason-schuller-founder-of-press75-com">special interview</a> I did with him early in 2014.</p>\n<div class="audio-shortcode-wrap"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/01/Press75LogoFeaturedImage.jpg?resize=175%2C131" alt="Press75 Logo Featured Image" class="landscape thumbnail post-thumbnail audio-image" /><!--[if lt IE 9]><script>document.createElement(\'audio\');</script><![endif]-->\n<a href="http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3">http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3</a></div><div class="media-shortcode-extend"><div class="media-info audio-info"><ul class="media-meta"><li><span class="prep">Run Time</span> <span class="data">50:36</span></li><li><span class="prep">Artist</span> <span class="data">Jeff Chandler</span></li><li><span class="prep">File Name</span> <span class="data"><a href="http://wptavern.com/wp-content/uploads/2014/01/Interview-With-Jason-Schuller.mp3">Interview-With-Jason-Schuller.mp3</a></span></li><li><span class="prep">File Size</span> <span class="data">28.96 MB</span></li><li><span class="prep">File Type</span> <span class="data">MP3</span></li><li><span class="prep">Mime Type</span> <span class="data">audio/mpeg</span></li></ul></div><button class="media-info-toggle">Audio Info</button></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 07:34:54 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:29;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:77:"WPTavern: WPWeekly Episode 160 – The Founder Of BruteProtect, Sam Hotchkiss";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:44:"http://wptavern.com?p=29356&preview_id=29356";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:188:"http://wptavern.com/wpweekly-episode-160-the-founder-of-bruteprotect-sam-hotchkiss?utm_source=rss&utm_medium=rss&utm_campaign=wpweekly-episode-160-the-founder-of-bruteprotect-sam-hotchkiss";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4191:"<p>In this weeks show, <a title="http://marcuscouch.com/" href="http://marcuscouch.com/">Marcus Couch</a> and I are joined by the founder of <a title="https://bruteprotect.com/" href="https://bruteprotect.com/">BruteProtect</a>, Sam Hotchkiss. We learn the circumstances which lead to the birth of BruteProtect and how it operates. Hotchkiss explains the details of the <a title="http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect" href="http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect">acquisition with Automattic</a> and how it will be rolled into Jetpack. While some people are not happy that it&#8217;s being added to Jetpack, we discuss why it&#8217;s a huge win. Last but not least, Hotchkiss explains the process he went through to obtain funding and offers advice to plugin authors who may find themselves in the same position.</p>\n<h2>Stories Discussed:</h2>\n<p><a title="http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer" href="http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer">WordPress 4.0 Adds Custom Icons to the Plugin Installer</a><br />\n<a title="http://wptavern.com/wordpress-plugin-wp-inject-renames-to-imageinject-and-introduces-new-features" href="http://wptavern.com/wordpress-plugin-wp-inject-renames-to-imageinject-and-introduces-new-features">WordPress Plugin WP Inject Renames to ImageInject and Introduces New Features</a><br />\n<a title="http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing" href="http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing">BuddyPress 2.1 Beta 1 Now Available for Testing</a><br />\n<a title="http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes" href="http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes">Chris Wiegman on Why He Sold Better WP Security to iThemes</a><br />\n<a title="http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing" href="http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing">WordPress 4.0 Release Candidate Now Available for Testing</a></p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a title="http://wordpress.org/plugins/wp-admin-quicknav/" href="http://wordpress.org/plugins/wp-admin-quicknav/">WP Admin Quicknav</a> adds a simple dropdown box at the top admin edit screens allowing you to quickly jump from one page, post, or custom post type to the next without having to return to the respective listing page. This is easily customized and can be really handy for saving time navigating to specific admin pages.</p>\n<p><a title="http://wordpress.org/plugins/comment-approved/" href="http://wordpress.org/plugins/comment-approved/">Comment Approved</a> can be used to notify a user when their comment is approved. This is a great way to keep the communication channel open between you and your loyal readers. You can customize the approval notification enabling you to reward those who participate. This could include an ebook, a link to special content, etc.</p>\n<p><a title="http://wordpress.org/plugins/wp-is-mobile-text-widget/" href="http://wordpress.org/plugins/wp-is-mobile-text-widget/">WP Is Mobile Text Widget</a> adds a text widget that switches the display text using the <em>wp_is_mobile()</em> function depending on whether the device is mobile or not. This is a great enhancement for delivering a simple, custom piece of text content based on the detection of a mobile browser.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, September 3rd 9:30 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href="https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href="http://www.wptavern.com/feed/podcast" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href="http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr" target="_blank">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #160:</strong><br />\n</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 28 Aug 2014 07:30:40 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:30;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:81:"WPTavern: WP Dashboard Notes Plugin Clones Google Keep in the WordPress Dashboard";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29322";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:192:"http://wptavern.com/wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard?utm_source=rss&utm_medium=rss&utm_campaign=wp-dashboard-notes-clones-google-keep-in-the-wordpress-dashboard";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3991:"<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.jpg" rel="prettyphoto[29322]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.jpg?resize=772%2C250" alt="wp-dashboard-notes" class="aligncenter size-full wp-image-29326" /></a></p>\n<p>Dashboard notes can come in handy when working with multiple people on a WordPress site. Even when working alone, you can use notes to collect ideas for posts or to remind yourself of important publishing-related tasks and ways to promote your posts. While there are many varying plugins devoted to creating sticky notes in the dashboard, the new <a href="http://wordpress.org/plugins/wp-dashboard-notes/" target="_blank">WP Dashboard Notes</a> plugin stands out with an interesting implementation that mirrors Google&#8217;s popular note-taking service.</p>\n<p>Google junkies will notice that the color scheme of the notes is strangely similar to that of Google Keep, if not identical. The note creation and management process is also very similar in that there is no save button for editing and everything is saved automatically in the background.</p>\n<p>WP Dashboard Notes doesn&#8217;t add any admin menus. Once installed, you can create a new note by clicking &#8220;Add Note&#8221; under Screen Options in the upper right corner. After you create your first note, you can add new notes from the black bar within existing notes.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/add-note.png" rel="prettyphoto[29322]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/add-note.png?resize=976%2C291" alt="add-note" class="aligncenter size-full wp-image-29331" /></a></p>\n<p>A new note pops into your dashboard, which you can now edit and skin with one of the preset colors. Like Google Keep, notes can be set as a single note or a list. Users also have the option to set the visibility to &#8216;Everyone&#8217; or &#8216;Private.&#8217; Here&#8217;s a quick demo:</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.gif" rel="prettyphoto[29322]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/wp-dashboard-notes.gif?resize=578%2C473" alt="wp-dashboard-notes" class="aligncenter size-full wp-image-29333" /></a></p>\n<p>WP Dashboard Notes contains virtually all the same capabilities of Google Keep, minus the ability to upload images. The plugin&#8217;s features include:</p>\n<ul>\n<li>Colored notes</li>\n<li>List notes or regular notes</li>\n<li>Public or private notes</li>\n<li>Edit on dashboard</li>\n<li>Add as many notes as you like</li>\n<li>Drag and drop list items</li>\n<li>No save button needed</li>\n</ul>\n<p>Multiple notes arranged together create a colorful dashboard full of ideas and users will see public notes upon logging in.</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/notes.png" rel="prettyphoto[29322]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/notes.png?resize=1025%2C470" alt="notes" class="aligncenter size-full wp-image-29338" /></a></p>\n<p>After testing the plugin I found that it was simple and intuitive to use. The plugin, created by application developer <a href="http://www.jeroensormani.com/" target="_blank">Jeroen Sormani</a>, elegantly merges WordPress and Google Keep functionality to create a useful addition to the dashboard.</p>\n<p>You can customize the colors by overriding the plugin&#8217;s CSS from another stylesheet. Additional color palettes and per-user visibility settings might make the plugin even more fun, but for now Sormani has kept it delightfully simple.</p>\n<p>If you need note-taking capabilities for better collaboration in the dashboard, this plugin works as advertised and goes far beyond most other dashboard notes plugins. <a href="http://wordpress.org/plugins/wp-dashboard-notes/" target="_blank">WP Dashboard Notes</a> is available for free from WordPress.org.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 22:41:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:31;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:68:"WPTavern: Matt Mullenweg Hosts Impromptu Q&amp;A Session On Facebook";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29278";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:170:"http://wptavern.com/matt-mullenweg-hosts-impromptu-qa-session-on-facebook?utm_source=rss&utm_medium=rss&utm_campaign=matt-mullenweg-hosts-impromptu-qa-session-on-facebook";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7047:"<p>WordPress co-creator, Matt Mullenweg, stopped by the <a title="https://www.facebook.com/groups/advancedwp/" href="https://www.facebook.com/groups/advancedwp/">Advanced WordPress Facebook group</a> and participated in a WordPress edition of <a title="http://www.reddit.com/r/AMA/" href="http://www.reddit.com/r/AMA/">ask me anything</a>. After receiving a warm welcome from the group, Mullenweg outlined what types of questions he would answer.</p>\n<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/MattMullenwegAdvancedWPFacebookGroup.png" rel="prettyphoto[29278]"><img class="size-full wp-image-29312" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/MattMullenwegAdvancedWPFacebookGroup.png?resize=504%2C233" alt="Rules Of Engagement" /></a>Rules Of Engagement\n<p>Once the gates were opened, the questions started pouring in. Here are a few of my favorites along with Mullenweg&#8217;s answers.</p>\n<p><strong>What is the most important thing we can do to support and bring value to WordPress?</strong></p>\n<p><em>Everyone really sets their own path. Think about the thing that makes you happiest, what you consider your gift that you can share with the world, or something that you want to learn a lot more about.</em></p>\n<p><strong>What are your thoughts on the businesses and entire industries that are built around WordPress and what opportunities do you see in the future?</strong></p>\n<p><em>I think it&#8217;s awesome there are whole industries built on WordPress, that was part of the idea from very early on. It&#8217;s counter-intuitive, but I actually think one of bigger opportunities is in consulting and building sites right now. WordPress can get people 90% of the way there, but that last 10% represents a lot of opportunity for clients from the Fortune 500 to the smallest personal sites.</em></p>\n<p><strong>I&#8217;m curious about Automattic&#8217;s policy about unlimited vacation days. I have never heard of this policy anywhere else. How does that play out? Seems like such an awesome place to work.</strong></p>\n<p><em>I think open vacation policies are becoming more common, here&#8217;s an article that covers the pros and cons fairly well and says 1% of companies offer them now: <a href="http://www.businessinsider.com/pros-and-cons-of-unlimited-vacation-2013-12" target="_blank" rel="nofollow">The Pros And Cons Of Unlimited Vacation Policies</a></em></p>\n<p><em>I think it really comes down to hiring. With the right people you can have very liberal policies like this because people think about the organization as a whole and do the right thing. If anything we sometimes have to encourage people to take a bit more time off, something I don&#8217;t always set the best example of but I&#8217;m trying this week. I&#8217;ll be completely offline Thursday through Sunday.</em></p>\n<p><strong>Is the Codex really going to disappear eventually?</strong></p>\n<p><em>We&#8217;re not going to take down the Codex until we have something better to replace it. It&#8217;s more likely you&#8217;ll just see more links default to someplace new and Codex traffic will trail off until at some point, we&#8217;ll put it into archive mode.</em></p>\n<p><strong>Do you think now that JSON support in WordPress core is coming, should it be used over RSS for building things like Mobile Apps? What you would recommend?</strong></p>\n<p><em>Whether you use the prototype JSON API or RSS for a mobile app I would say depends a lot on what it does. Think of the JSON API more as replacing XML-RPC.</em></p>\n<p><em>What would be great for everyone is to start to try and build applications on top of the prototype API, and let the team know where you get stuck or find things hard to understand. I&#8217;m extremely anxious to have a cleaner API in core, but I feel strongly that it should remain a plugin until we&#8217;ve built a few independent third-party applications on top of it when it&#8217;s in plugin form, utilizing every aspect of the API, so we know where it works well and where it&#8217;s lacking.</em></p>\n<p><em>This is a lesson I&#8217;ve learned from my experience at Automattic. You can never design a perfect API and anticipate all needs, you really need to use it to solve real problems a few times before you can iterate it to have it be something that works well and that you&#8217;ll want to support for many years to come.</em></p>\n<p>This is just a sample of the questions and answers within the conversation that took place on Facebook. If you want to see the rest of them, you&#8217;ll need to join the<a title="https://www.facebook.com/groups/advancedwp/" href="https://www.facebook.com/groups/advancedwp/"> Advanced WordPress group</a> on Facebook. It&#8217;s free and the moderators are quick to approve new members.</p>\n<h2>I&#8217;d Like To See More Of These Types Of Events</h2>\n<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bucky-box-opensource-matt-mullenweg.jpg" rel="prettyphoto[29278]"><img class="size-full wp-image-29315" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bucky-box-opensource-matt-mullenweg.jpg?resize=1025%2C742" alt="Conversation With Matt" /></a>Image Courtesy of <a title="http://blog.buckybox.com/2014/06/opening-up-the-secret-sauce-open-sourcing-bucky-box/" href="http://blog.buckybox.com/2014/06/opening-up-the-secret-sauce-open-sourcing-bucky-box/">Bucky Box</a>\n<p>This was just a sample of the questions and answers within the conversation. If you want to see the rest of them, you&#8217;ll need to <a title="https://www.facebook.com/groups/advancedwp/" href="https://www.facebook.com/groups/advancedwp/">join the Facebook group</a>. It&#8217;s free and the moderators are quick to approve new members.</p>\n<p>Seeing Mullenweg join the Facebook Group and then participate by answering questions was a shock to me. I know from experience that he likes to hang out where discussions of WordPress are taking place but it&#8217;s rare that I see him participate in the discussions, let alone host an impromptu Q&amp;A session.</p>\n<p>I&#8217;d like to see more of these types of events from Mullenweg whether it be on his blog or through a medium of his choice. Perhaps once a month, he can hold a Q&amp;A session at a different WordPress hangout.</p>\n<p>The community can be a fickle bunch but I think it would be beneficial if he participated in more discussions outside of what&#8217;s going on in core. In <a title="http://www.mattcromwell.com/coder-troll-matt-mullenweg-walk-bar/" href="http://www.mattcromwell.com/coder-troll-matt-mullenweg-walk-bar/">his roundup post</a>, Matt Cromwell hits the nail on the head on what it means to some folks to have a direct conversation with Mullenweg.</p>\n<blockquote><p>I hope Mullenweg drops by again in the future. For him it may have been a quick dip into the WP Community. But for boat loads of WordPress developers, it was the highlight of the week.</p></blockquote>\n<p>Just out of curiosity, if you had one question to ask Mullenweg, what would it be?</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 18:52:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:32;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:79:"Lorelle on WP: Two WordPress College Classes Offered at Clark College This Fall";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:37:"http://lorelle.wordpress.com/?p=11855";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:105:"http://lorelle.wordpress.com/2014/08/27/two-wordpress-college-classes-offered-at-clark-college-this-fall/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:482:"The WordPress I CTEC 160 courses at Clark College are about to close and there are still seats open in the Monday/Wednesday classes. This fall there are two times to choose from. Days from 1-3:30PM and evenings from 6:30-9PM. The 5-credit course covers the basics of WordPress, from content to design. Much of the classwork [&#8230;]<img alt="" border="0" src="http://pixel.wp.com/b.gif?host=lorelle.wordpress.com&blog=72&post=11855&subd=lorelle&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 18:08:59 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"Lorelle VanFossen";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:33;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:52:"WPTavern: WP Tech Event Will No Longer Be a WordCamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29222";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:148:"http://wptavern.com/wp-tech-event-will-no-longer-be-a-wordcamp?utm_source=rss&utm_medium=rss&utm_campaign=wp-tech-event-will-no-longer-be-a-wordcamp";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7380:"<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/nantes-featured.jpg" rel="prettyphoto[29222]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/07/nantes-featured.jpg?resize=1025%2C493" alt="nantes-featured" class="aligncenter size-full wp-image-26172" /></a></p>\n<p>WP Tech is &#8220;breaking up with WordCamp,&#8221; according to co-organizer <a href="http://wabeo.fr/" target="_blank">Willy Bahuaud</a>. The developer-centric event, previously called <a href="http://wptavern.com/nantes-france-to-host-a-wordcamp-for-developers-in-november" target="_blank">WordCamp Nantes WP Tech</a>, is set to be held at the end of November and was welcomed as France&#8217;s second official WordCamp.</p>\n<p>During the course of working with <a href="http://central.wordcamp.org/" target="_blank">WordCamp Central</a>, the organizers decided to opt out of keeping WP Tech under the WordCamp umbrella due to a number of conflicts.</p>\n<p>&#8220;WordCamp Central gave us too many constraints, and we would not have been able to create a great technical event about WordPress,&#8221; co-organizer Daniel Roch told the Tavern. &#8220;It will be an independent WordPress tech event, like other great events such as Pressnomics, WPSessions, WordSesh or WordUps.&#8221;</p>\n<p>The organizing team found that some of the WC Central rules would have forced them to change the core concept of WP Tech. &#8220;In our case, we wanted to hold WP Tech as a national event, inviting speakers from France to a provincial town (Nantes),&#8221; said Bahuaud. However, this poses a problem, as WordCamps are meant to be <a href="http://plan.wordcamp.org/planning-details/speakers/" target="_blank">local events</a> and the majority of speakers have to be from the city where the event takes place.</p>\n<p>The second critical conflict they encountered was regarding speaker expenses. &#8220;We want to cover speakers&#8217;s travel cost. WordCamp central was very firm with this point: we can&#8217;t. The WP Tech team was told that the only people&#8217;s expenses that can be covered are those who appear on the sidebar of <a href="http://wordpress.org/about/" target="_blank">WordPress&#8217; about page</a>.</p>\n<p>&#8220;WC Central&#8217;s position is that traveling to speak at a conference is a legitimate business expense,&#8221; Bahuaud said. &#8220;But we think it&#8217;s not. We believe that if people spent time to prepare a conference, it&#8217;s normal to cover their $200 (on average) travel and accommodation costs.&#8221;</p>\n<p>Additionally, Bahuaud reports that the requirement to use the WordCamp platform for the event&#8217;s website was problematic, since it doesn&#8217;t allow for extensive customization. The event branding requirements were also an issue. Organizers changed the event name to &#8220;WordCamp Nantes WP Tech&#8221; but WC Central required further changes to make it compatible with guidelines.</p>\n<p>&#8220;Four months before the event, rules were still changing and we had to be accountable on each step. It was very frustrating, so we decided to break up with WordCamp, and make our event separate,&#8221; Bahuaud explained.</p>\n<h3>Cultural and Economic Differences Regarding Speaker Travel Guidelines</h3>\n<p><a href="https://twitter.com/jennybeaumont" target="_blank">Jenny Beaumont</a>, a WordPress developer and an active member of the French WordPress community, commented on the conflict with insight on the economic differences experienced by non-US event organizers:</p>\n<blockquote><p>In France, a majority of people in the WordPress community are freelancers, and as such, many of us have a legal status that&#8217;s called an &#8216;auto-entrepreneur&#8217;. It&#8217;s part of what is known as a micro-regime that gives us a tax break on social contributions, which are very imposing here (45% for regular business owners). </p>\n<p>The flip side to this is two-fold: 1) We have a ceiling on earnings, 2) We can&#8217;t deduct expenses. It&#8217;s this last fact that also influences the desire on the part of WordCamp organizers in France to want to reimburse speakers for their travels costs. WordCamp Paris has been doing it for years, though in light of recent events, may be prohibited from doing so in the future.</p></blockquote>\n<p>Whereas Americans are free to deduct work-related travel expenses as a business expense from their taxes, French speakers do not share that same privilege. At this point in time, WC Central guidelines don&#8217;t currently allow for flexibility on the issue of speaker travel, but the guidelines are not written in stone. WordCamp Central is open to further discussion on the matter.</p>\n<p>Andrea Middleton <a href="http://make.wordpress.org/community/2014/08/27/speaker-travel-for-wordcamps/" target="_blank">clarified the issue of speaker travel expenses</a> today on the make.wordpress.org Community blog. She highlighted the importance of WordCamps as local events and how paying for speaker travel costs doesn&#8217;t mesh well with that guideline:</p>\n<blockquote><p>WordCamps are locally-focused, so there’s an inherent disconnect between paying for people from out of town to speak at a WordCamp and that emphasis on local community. Local experts are assets to their communities all year round, whereas visiting speakers don’t typically serve as ongoing resources once they have returned to their home cities.</p></blockquote>\n<p>Middleton suggests the more cost-effective option of utilizing Skype or Google hangouts to pull in out-of-town speakers who are unable to cover their own travel expenses. The idea is that the WordCamp budget can be better used to serve the local community.</p>\n<p><strong>&#8220;A WordCamp’s primary focus is on connecting local community and lifting up local experts, rather than blowing our budgets on flying people around the world when technology can get them there so much faster,&#8221;</strong> she explained.</p>\n<p>Community members who want to advocate a different opinion on the guidelines have the opportunity to do so. Middleton invites discussion in the comments of her <a href="http://make.wordpress.org/community/2014/08/27/speaker-travel-for-wordcamps/" target="_blank">post</a>. She also plans to discuss the issue with contributors at the WordPress Community Summit in October, which will include WordCamp and meetup organizers from around the world. Data from WordCamp San Francisco&#8217;s new <a href="http://2014.sf.wordcamp.org/location/travel-assistance/" target="_blank">travel assistance program</a> may also factor into the discussion.</p>\n<p>Not every WordPress event has to be a WordCamp. It&#8217;s not a failure on the part of the organizers or WC Central if there are irreconcilable differences. If an event finds the WordCamp guidelines to be too problematic, organizers can host it as an independent event. WC Central exists to nurture local pockets of WordPress enthusiasm, but not every event will share that mission. There&#8217;s no mandate that all WordPress events have to be WordCamps and many successful events run outside of that umbrella.</p>\n<p>Do you think the economic differences in other countries are an influencing factor regarding the creation of new WordCamps? Should cultural and economic differences come into play when it comes to officially-sanctioned WordCamp events?</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 17:11:38 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:34;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Matt: How The Sun Sees You";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44036";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:41:"http://ma.tt/2014/08/how-the-sun-seesyou/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:243:"<p><span class="embed-youtube"></span></p>\n<p>This video really makes you want to wear sunblock, something I haven&#8217;t been as good about this week. (Sorry Mom!) <cite>Hat tip: <a href="http://www.sararosso.com/">Sara Rosso</a>.</cite></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 17:00:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:35;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:67:"WPTavern: WordPress 4.0 Release Candidate Now Available for Testing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29281";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:178:"http://wptavern.com/wordpress-4-0-release-candidate-now-available-for-testing?utm_source=rss&utm_medium=rss&utm_campaign=wordpress-4-0-release-candidate-now-available-for-testing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2011:"<p><a href="http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/" target="_blank">WordPress 4.0 RC 1</a> is now available for download. Helen Hou-Sandí announced the release candidate today with an update to the <a href="http://make.wordpress.org/core/version-4-0-project-schedule/" target="_blank">project schedule</a>. The official release was targeted for the week of August 25th but will likely be arriving the following week.</p>\n<p><strong>&#8220;We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present,&#8221;</strong> Hou-Sandí said in the release announcement.</p>\n<p>The easiest way to test RC1 is to put the <a href="http://wordpress.org/extend/plugins/wordpress-beta-tester/" target="_blank">WordPress Beta Tester</a> plugin on a test site and start running through all the <a href="http://wptavern.com/preview-wordpress-4-0-features-beta-1-now-available-for-testing" target="_blank">new features</a>, many of which are highlighted on the 4.0 about page in the admin (wp-admin/about.php). If you want a more in-depth look at the new features, Hou-Sandí <a href="http://wptavern.com/helen-hou-sandi-previews-wordpress-4-0-at-nyc-meetup" target="_blank">previewed WordPress 4.0</a> at a recent NYC Meetup and you can watch the video.</p>\n<p>The good news is that plugin and theme authors still have plenty of time to test their extensions against the release candidate for compatibility. Since <a href="http://wptavern.com/wordpress-4-0-adds-custom-icons-to-the-plugin-installer" target="_blank">WordPress 4.0 adds icons to the admin plugin installer</a>, plugin developers will want to put their custom icons in place to improve visibility among all the auto-generated ones.</p>\n<p>Over the past month of four beta releases, WordPress 4.0 has incorporated hundreds of fixes and refinements that make it truly a joy to use. Watch for the official release to drop sometime next week.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 16:06:34 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:36;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:41:"Dev Blog: WordPress 4.0 Release Candidate";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=3287";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"http://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2126:"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, we’ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href="http://wordpress.org/news/2014/07/wordpress-4-0-beta-1/">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there. If you haven’t tested 4.0 yet, there’s no time like the present. (Please, not on a production site, unless you’re adventurous.)</p>\n<p><strong>Think you’ve found a bug? </strong>Please post to the <a href="http://wordpress.org/support/forum/alphabeta/">Alpha/Beta area in the support forums</a>. If any known issues come up, you’ll be able to <a href="http://core.trac.wordpress.org/report/5">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try the <a href="http://wordpress.org/extend/plugins/wordpress-beta-tester/">WordPress Beta Tester</a> plugin (you’ll want “bleeding edge nightlies”). Or you can <a href="http://wordpress.org/wordpress-4.0-RC1.zip">download the release candidate here</a> (zip). If you’d like to learn more about what’s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src="http://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692" alt="" width="16" height="16" /> → About</strong> in the toolbar).</p>\n<p><strong>Developers,</strong> please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release. You also may want to <a href="http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 12:20:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Helen Hou-Sandi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:37;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WPTavern: Menu Humility: A Plugin to Put Plugins in Their Place";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29253";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:168:"http://wptavern.com/menu-humility-a-plugin-to-put-plugins-in-their-place?utm_source=rss&utm_medium=rss&utm_campaign=menu-humility-a-plugin-to-put-plugins-in-their-place";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2017:"<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/menu-humility.png" rel="prettyphoto[29253]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/menu-humility.png?resize=772%2C250" alt="menu-humility" class="aligncenter size-full wp-image-29256" /></a></p>\n<p>Giving a plugin a top level admin menu between Dashboard and Posts is somewhat frowned upon among WordPress plugin developers. Although the <a href="http://codex.wordpress.org/Administration_Menus" target="_blank">Administration Menus</a> section of the WordPress codex doesn&#8217;t outright forbid top level menus above Posts, plugin authors are strongly encouraged to consider placing their plugin&#8217;s menu underneath an existing WordPress top-level menu.</p>\n<p>Nevertheless, many plugins assume a higher level of importance by placing their admin menus above WordPress&#8217; core publishing features such as Posts, Comments, and Media. Jetpack is a prime example. As useful as the plugin is, its settings menu is not something that most users need to access more often than posts or comments.</p>\n<p>That&#8217;s why WordPress lead developer Mark Jaquith created <a href="http://wordpress.org/plugins/menu-humility/" target="_blank">Menu Humility</a>, a plugin that reassigns the menu location for errant menu items. For example, if you use it on a site with Jetpack installed, it will put its admin menu at the very bottom below Settings.</p>\n<p>Menu Humility is not a new plugin. In fact, it&#8217;s three years old &#8211; ancient in WordPress years. After testing the plugin today, I found that it&#8217;s still effective at stripping plugins of their assumed preeminence in the admin.</p>\n<p>The bottom line is that most plugins don&#8217;t require top billing. If you feel that a top level menu item constitutes a plugin getting too big for its britches, then install the <a href="http://wordpress.org/plugins/menu-humility/" target="_blank">Menu Humility</a> plugin to bring it back down to its place.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 04:10:30 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:38;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:68:"WPTavern: Chris Wiegman on Why He Sold Better WP Security to iThemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29247";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:180:"http://wptavern.com/chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes?utm_source=rss&utm_medium=rss&utm_campaign=chris-wiegman-on-why-he-sold-better-wp-security-to-ithemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4755:"<a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2013/12/chriswiegman.jpg" rel="prettyphoto[29247]"><img class="size-full wp-image-12530" src="http://i1.wp.com/wptavern.com/wp-content/uploads/2013/12/chriswiegman.jpg?resize=250%2C250" alt="WordPress Security Expert Chris Wiegman" /></a>WordPress Security Expert Chris Wiegman\n<p>If you&#8217;ve ever wondered why Chris Wiegman sold Better WP Security to iThemes, he <a title="http://www.chriswiegman.com/2014/08/sold-better-wp-security/" href="http://www.chriswiegman.com/2014/08/sold-better-wp-security/">answers the question</a> in a post on his personal site. The birth of Better WP Security started off as a mixture of features from several of his favorite security plugins. &#8220;I started mashing together features of some of the plugins I liked while adding in some of the functionality we wanted as a department (like &#8216;Away mode&#8217;) to produce something that I could manage myself and would make sure I kept off of anyone’s radar by not being hacked,&#8221; Wiegman said.</p>\n<p>Wiegman goes on to describe the success the plugin had and how much money he was making in donations. At the peak of its popularity, it was downloaded over 1M times with $20,000 earned in donations. This prompted Wiegman to create a premium support channel. &#8220;It was so big I was no longer able to keep up and had to implement premium support only for folks who needed it. This was a new revenue stream and the first official revenue stream for the plugin.&#8221; The surge of popularity came at a time when Wiegman was teaching and reviewing books for APress. This severely limited the amount of time he had available to develop new features.</p>\n<h2>iThemes Enters The Picture</h2>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2013/10/ithemeslogo2.jpg" rel="prettyphoto[29247]"><img class="alignright size-full wp-image-10776" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2013/10/ithemeslogo2.jpg?resize=255%2C53" alt="iThemes logo 2" /></a>One day, the founder of iThemes, Cory Miller, reached out to Wiegman for support after he was locked out of his site. &#8220;What started out as a rather simple conversation quickly lead to something more. I realized that the medicine the project needed to get off life support wasn’t necessarily something I needed to provide myself but could in fact come in the form of selling the plugin to a group who had the resources to make more of it,&#8221; Wiegman said.</p>\n<p>According to the post, he reached out to a few other groups but stuck with iThemes because they had products that complimented a security plugin such as BackupBuddy and Exchange. Better WP Security was <a title="http://wptavern.com/ithemes-acquires-better-wp-security-plugin-and-hires-wordpress-security-expert-chris-wiegman" href="http://wptavern.com/ithemes-acquires-better-wp-security-plugin-and-hires-wordpress-security-expert-chris-wiegman">sold to iThemes on December 1st, 2013</a> and renamed to <a title="https://wordpress.org/plugins/better-wp-security/" href="https://wordpress.org/plugins/better-wp-security/">iThemes Security</a>. As part of the deal, Wiegman joined iThemes as a full-time employee to continue developing iThemes Security.</p>\n<h2>Not Every Plugin Has a Happy Ending</h2>\n<p>What I like most about Wiegman&#8217;s story is how a simple idea turns into a solid product. I think a lot of WordPress plugins are created because they scratch an itch or solve a problem. The plugin&#8217;s creator usually submits the plugin to the directory with a mindset that it can help others as well. Since WordPress is used on <a title="http://w3techs.com/" href="http://w3techs.com/">23% of the web</a>, there&#8217;s a good chance that a plugin distributed through the directory will help more than one person.</p>\n<p>While Wiegman&#8217;s tale has a happy ending, so many plugins never reach the type of adoption of Better WP Security. In fact, quite a few end up in a <a title="http://wptavern.com/could-wordpress-plugin-adoption-lower-the-rate-of-abandonment" href="http://wptavern.com/could-wordpress-plugin-adoption-lower-the-rate-of-abandonment">graveyard of abandonment</a> for any number of reasons. If you find yourself in this situation, read our guide on <a title="http://wptavern.com/how-to-adopt-a-plugin-or-put-it-up-for-adoption" href="http://wptavern.com/how-to-adopt-a-plugin-or-put-it-up-for-adoption">how to adopt a plugin and put one up for adoption.</a> It could end up being the next Better WP Security or <a title="http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect" href="http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect">BruteProtect</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 27 Aug 2014 03:55:22 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:39;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:50:"WPTavern: 3 Quick Ways to Create bbPress Test Data";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29172";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:144:"http://wptavern.com/3-quick-ways-to-create-bbpress-test-data?utm_source=rss&utm_medium=rss&utm_campaign=3-quick-ways-to-create-bbpress-test-data";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5651:"<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpress-test-data-feature.jpg" rel="prettyphoto[29172]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpress-test-data-feature.jpg?resize=766%2C380" alt="bbpress-test-data-feature" class="aligncenter size-full wp-image-29219" /></a></p>\n<p><a href="http://bbpress.org/blog/2013/11/bbpress-2-5-released/" target="_blank">bbPress 2.5</a> introduced a host of new importers for AEF, Drupal, FluxBB, Kunena Forums (Joomla), MyBB, Phorum, PHPFox, PHPWind, PunBB, SMF, Xenforo and XMB, making it easier than ever to bring forums into WordPress. bbPress 2.5 also improved existing importers to include better support for importing stickies, topic tags, and forum categories.</p>\n<p>If you&#8217;re thinking about importing forums into bbPress or starting with a fresh installation, you may want to set up a test site first to see how different themes and plugins will work with your content. There&#8217;s nothing more tedious than trying to create a bunch of forums, topics, and replies manually, so you&#8217;ll need an automatic way to generate a bunch of demo data.</p>\n<p>In searching for bbPress demo data, I found that there&#8217;s no standard way to generate it. Several developers have created and shared their own tools. Depending on your development workflow, one method may prove easier than another, so we&#8217;ll check out all three.</p>\n<h3>XML: bbPress Unit Testing Data</h3>\n<p>The first option is a set of <a href="https://bbpress.trac.wordpress.org/ticket/2516" target="_blank">bbPress unit testing data</a> stored in an XML file, which allows you to import it via the standard WordPress import tool. The file was created by bbPress core commiter <a href="https://twitter.com/netweb" target="_blank">Stephen Edgar</a>. It gives you 17 forums, including 15 public, 1 private, and 1 hidden.</p>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/xml-demo-data.png" rel="prettyphoto[29172]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/xml-demo-data.png?resize=923%2C490" alt="xml-demo-data" class="aligncenter size-full wp-image-29187" /></a></p>\n<p>The demo data includes multiple topics and replies and also a group of forums and categories based on the <a href="https://en.wikipedia.org/wiki/Nested_set_model" target="_blank">Nested set model</a>.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/forums.png" rel="prettyphoto[29172]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/forums.png?resize=982%2C586" alt="forums" class="aligncenter size-full wp-image-29189" /></a></p>\n<p>Technically, this unit testing data is still in process, as it&#8217;s currently hosted in <a href="https://bbpress.trac.wordpress.org/ticket/2516" target="_blank">a ticket on bbPress trac</a> and is open to further improvement.</p>\n<h3>Plugin: bbpFauxData</h3>\n<p><a href="https://github.com/MZAWeb/bbpFauxData" target="_blank">bbpFauxData</a> is another option created by WordPress developer <a href="http://mzaweb.com/" target="_blank">Daniel Dvorkin</a>. It&#8217;s a quick and dirty plugin to help you populate a bbPress instance with faux data which seems real, generated by the <a href="https://github.com/fzaninotto/Faker" target="_blank">Faker</a> PHP library, in order to test performance.</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpfauxdata.png" rel="prettyphoto[29172]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpfauxdata.png?resize=900%2C613" alt="bbpfauxdata" class="aligncenter size-full wp-image-29197" /></a></p>\n<p>Once installed, you can set how many users, forums, topics and replies that you want to generate:</p>\n<pre class="brush: php; light: true; title: ; notranslate">\n$bfd = new bbpFauxData();\n\nconst USERS   = 50;\nconst FORUMS  = 5;\nconst TOPICS  = 100;\nconst REPLIES = 1000;\n\nfor ( $i = 0; $i &lt; USERS; $i++ ) {\n    $bfd-&gt;generate_user();\n}\n\nfor ( $i = 0; $i &lt; FORUMS; $i++ ) {\n    $bfd-&gt;generate_forum();\n}\n\nfor ( $i = 0; $i &lt; TOPICS; $i++ ) {\n    $bfd-&gt;generate_topic();\n}\n\nfor ( $i = 0; $i &lt; REPLIES; $i++ ) {\n    $bfd-&gt;generate_reply();\n}</pre>\n<p>This plugin gives you a little more control over how much demo data you want to generate, as it is geared more towards testing performance. Dvorkin suggests that you bump up the &#8216;max_execution_time&#8217; and &#8216;memory_limit&#8217;, if implementing this data at higher numbers.</p>\n<h3>Plugin: Test Data for bbPress</h3>\n<p><a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpress-test-data.jpg" rel="prettyphoto[29172]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/bbpress-test-data.jpg?resize=772%2C459" alt="bbpress-test-data" class="aligncenter size-full wp-image-29214" /></a></p>\n<p><a href="http://www.epicwebs.co.uk/bbpress-tutorials/test-data-for-bbpress-plugin/" target="_blank">Test Data for bbPress</a> is a plugin created by <a href="http://www.epicwebs.co.uk/" target="_blank">Rob Mehew</a>, who needed demo data while developing a theme. The plugin creates the following:</p>\n<ul>\n<li>Adds a forum with nested forums</li>\n<li>Adds a forum with loads of topics</li>\n<li>Adds a topic with loads of replies</li>\n</ul>\n<p>Test Data for bbPress was created for the purpose of testing themes and includes lorem ipsum for sample text. As with all of the above options, this plugin should only be used on a development site; it is not designed for use on a live site.</p>\n<p>Anyone have other bbPress demo data creation tools? Let us know in the comments.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 26 Aug 2014 19:35:17 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:40;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"Matt: BruteProtect Acquired";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44040";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:43:"http://ma.tt/2014/08/bruteprotect-acquired/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:438:"<p>You can <a href="http://jetpack.me/2014/08/26/automattic-bruteprotect/">read on the Jetpack blog</a> and <a href="https://bruteprotect.com/bruteprotect-joins-automattic/">the BruteProtect blog</a> about the company, <a href="http://wordpress.org/plugins/bruteprotect/">plugin</a>, and service joining <a href="http://automattic.com/">Automattic</a>. BTW, BruteProtect has protected this site from 1,663 attacks in the past 28 days.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 26 Aug 2014 17:27:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:41;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:69:"WPTavern: Automattic Acquires Parka LLC, The Creators Of BruteProtect";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=28911";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:180:"http://wptavern.com/automattic-acquires-parka-llc-the-creators-of-bruteprotect?utm_source=rss&utm_medium=rss&utm_campaign=automattic-acquires-parka-llc-the-creators-of-bruteprotect";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5332:"<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/05/automattic-offices.jpg" rel="prettyphoto[28911]"><img class="size-full wp-image-22370" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/05/automattic-offices.jpg?resize=1025%2C478" alt="photo credit: Peter Slutsky" /></a>photo credit: <a href="http://peterslutsky.com/2013/05/14/pics-touring-automattics-new-office/">Peter Slutsky</a>\n<p>The parent company of <a title="https://bruteprotect.com/" href="https://bruteprotect.com/">BruteProtect</a>, Parka, LLC has been <a title="http://jetpack.me/2014/08/26/automattic-bruteprotect/" href="http://jetpack.me/2014/08/26/automattic-bruteprotect/">acquired by Automattic</a> for an undisclosed amount. BruteProtect is a service providing <a title="http://wptavern.com/bruteprotect-protecting-against-brute-force-attacks" href="http://wptavern.com/bruteprotect-protecting-against-brute-force-attacks">brute force login protection</a> for thousands of WordPress sites. The <a title="http://wordpress.org/plugins/bruteprotect/" href="http://wordpress.org/plugins/bruteprotect/">BruteProtect plugin</a> will be phased out and rolled into <a title="http://jetpack.me/" href="http://jetpack.me/">Jetpack</a> and will  remain free to use. The services offered by <a title="https://my.bruteprotect.com/" href="https://my.bruteprotect.com/">BruteProtect pro</a> are now free for anyone to use. As part of the acquisition, all seven Parka employees will be employed by Automattic and will be part of the Jetpack development team.</p>\n<p>Once it&#8217;s merged into Jetpack, an announcement will be made to confirm the end-of-life date for the BruteProtect plugin. You won&#8217;t have to worry about managing two different API keys since it will function with the same key used by Jetpack. Unless you opt-out, BruteProtect will run at the same time as Jetpack. However, it&#8217;s unclear if it will be an auto-activated module when the merger is complete.</p>\n<h2>The Origin Of BruteProtect</h2>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/BruteProtectPluginHeader.png" rel="prettyphoto[28911]"><img class="size-full wp-image-28946" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/BruteProtectPluginHeader.png?resize=808%2C257" alt="BruteProtect Plugin Header" /></a>BruteProtect Plugin Header\n<p>In 2013, Matt Mullenweg published an article with his thoughts on <a title="http://ma.tt/2013/04/passwords-and-brute-force/" href="http://ma.tt/2013/04/passwords-and-brute-force/">passwords and brute force</a>. The article was published around the same time <a title="http://blog.sucuri.net/2013/04/protecting-against-wordpress-brute-force-attacks.html" href="http://blog.sucuri.net/2013/04/protecting-against-wordpress-brute-force-attacks.html">a large botnet was using brute force techniques</a> to login to WordPress sites using Admin as the username. The article generated a healthy discussion on the <a title="http://lists.automattic.com/pipermail/wp-hackers/2013-April/045728.html" href="http://lists.automattic.com/pipermail/wp-hackers/2013-April/045728.html">WP-Hackers mailing list</a>, especially around the <a title="http://wordpress.org/plugins/limit-login-attempts/" href="http://wordpress.org/plugins/limit-login-attempts/">Limit Login Attempts plugin</a> which is commonly recommended to protect against unwanted login attempts.</p>\n<p>The discussion <a title="http://lists.automattic.com/pipermail/wp-hackers/2013-April/045735.html" href="http://lists.automattic.com/pipermail/wp-hackers/2013-April/045735.html">prompted Hotchkiss </a>to come up with a better solution. Instead of websites battling the problem alone, BruteProtect brought websites together to fight a common cause, similar to how Akismet works. Little did he know that he was writing his destiny.</p>\n<blockquote><p>Another option to consider would be adding a &#8220;Security&#8221; plugin to Jetpack.</p>\n<p>This could be used to manage a centralized blacklist, as well as to patch security vulnerabilities as they pop up. If all failed login attempts get reported back to Jetpack central, it could blacklist an IP for X minutes/hours after Y number of failed logins on any Jetpack-enabled site within Z minutes/hours.</p></blockquote>\n<p>Since its launch, it&#8217;s been installed on <a title="https://bruteprotect.com/stats/" href="https://bruteprotect.com/stats/">106,836 sites</a> and defended against <a title="https://bruteprotect.com/stats/" href="https://bruteprotect.com/stats/">135,986,764</a> brute force attacks worldwide.</p>\n<h2>BruteForce Protection For The Masses</h2>\n<p>Having the product remain free was an important part of the acquisition. &#8220;I feel strongly that we need to be free and used by as many people as possible in order to provide the best protection and to do the most good,&#8221; Hotchkiss told the Tavern.</p>\n<p>With BruteProtect now part of Jetpack, millions of websites will be protected from BruteForce login attempts and contribute to the centralized blacklist of IP addresses making the service much more effective. I think this is a huge win, especially for those who use Jetpack. Users don&#8217;t have to figure out technical jargon or difficult configuration settings.</p>\n<p>What do you think about the acquisition? Let us know in the comments.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 26 Aug 2014 17:25:23 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:42;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:92:"Post Status: iThemes to partner with Crowd Favorite to take their products to the enterprise";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:30:"http://www.poststat.us/?p=7103";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:188:"http://www.poststat.us/ithemes-partner-crowd-favorite-enterprise-wordpress-products/?utm_source=rss&utm_medium=rss&utm_campaign=ithemes-partner-crowd-favorite-enterprise-wordpress-products";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3851:"<p><img class="aligncenter size-large wp-image-7106" src="http://www.poststat.us/wp-content/uploads/2014/08/crowd-favorite-ithemes-partnership-752x282.jpg" alt="crowd-favorite-ithemes-partnership" width="627" height="235" />Today, iThemes and Crowd Favorite are <a href="http://crowdfavorite.com/blog/2014/08/ithemes-crowd-favorite-partner-in-new-product-development/">announcing a partnership</a> where they will collaborate to take <a href="http://ithemes.com">iThemes</a> products to a more enterprise-level market.</p>\n<p>Practically, this means that Crowd Favorite will contribute developers and other resources to help iThemes better structure and market their products beyond a consumer audience. iThemes will in turn list the enterprise versions of these products within their product pages, as well as work with Crowd Favorite to create enterprise-focused features for their core product base.</p>\n<p>The products that are a focus of this collaboration are iThemes Sync, Exchange, Security, and BackupBuddy.</p>\n<p>The announcement post calls it more than a distribution partnership, but a joint venture:</p>\n<blockquote><p>The joint venture will be establishing an advisory board that will hold key executives from both companies consisting of myself, Cory Miller, Chris Lema, Matt Danner and Alex King. The goal will be to develop product roadmaps for our target market.</p>\n<p>The result of this partnership is even greater alignment fueled by the African proverb widely quoted by both Miller and Lema – “If you want to go fast, go alone. If you want to go far, go together.”</p></blockquote>\n<p>The &#8220;enterprise&#8221; market is an interesting thing in WordPress. There are companies and people working to make more enterprise-level WordPress products, but it&#8217;s still a product market that is in limbo. It&#8217;s so much more common to cater to a consumer audience with different needs and desires; different products that cater to the enterprise and corporate audience leaves room for a lot of experimentation.</p>\n<p>Also noted in the blog post, Crowd Favorite CEO Karim Marucchi highlights three ways to enter a product space: product acquisition, talent acquisition, and &#8212; the route they are taking with this move &#8212; partnership.</p>\n<p>I don&#8217;t know yet what pricing will look like for this deal, nor do I know exactly what the profit sharing breakdown is. I do know that both iThemes and Crowd Favorite leadership saw it as a no-brainer; and this is also one of the first strategic product moves lead by <a title="Interview with Chris Lema: a journey to working full time with WordPress" href="http://www.poststat.us/chris-lema-interview/">incoming Crowd Favorite CTO</a> Chris Lema.</p>\n<p>Crowd Favorite hopes to market the enterprise-portion of iThemes&#8217; product suite to corporations, as well as other high-end WordPress and web development agencies. They&#8217;re already a bit of a trend-setter in that world &#8212; I believe &#8212; with their comparatively high-priced <a href="http://crowdfavorite.com/ramp/">RAMP</a> content deployment product. I&#8217;ve always been a fan of that product, which has a very specific task that&#8217;s pretty high value, and they charge for it appropriately.</p>\n<p>You can learn more on <a href="http://ithemes.com/2014/08/26/going-far-together-crowd-favorite-ithemes/">iThemes&#8217; announcement post</a>, as well as <a href="http://crowdfavorite.com/blog/2014/08/ithemes-crowd-favorite-partner-in-new-product-development/">Crowd Favorite&#8217;s</a>.</p>\n<p>I see this venture with iThemes as different route for getting access to more products with that goal in mind, and it seems like a win-win from my point of view. I certainly don&#8217;t think this is the last such partnership we&#8217;ll see, but rather a sign of things to come.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 26 Aug 2014 14:16:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Brian Krogsgard";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:43;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:93:"WPTavern: Editorial Access Manager Adds Granular Editing Control for all WordPress Post Types";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=28603";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:230:"http://wptavern.com/editorial-access-manager-adds-granular-editing-control-for-all-wordpress-post-types?utm_source=rss&utm_medium=rss&utm_campaign=editorial-access-manager-adds-granular-editing-control-for-all-wordpress-post-types";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2698:"<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/red-pen.jpg" rel="prettyphoto[28603]"><img src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/red-pen.jpg?resize=1024%2C493" alt="photo credit: pollas - cc" class="size-full wp-image-29169" /></a>photo credit: <a href="https://www.flickr.com/photos/pollas/526544001/">pollas</a> &#8211; <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/">cc</a>\n<p>Editorial access is a capability granted only to Administrator and Editor <a href="http://codex.wordpress.org/Roles_and_Capabilities" target="_blank">user roles</a> in WordPress. This access is not easily shared to other roles without changing a user&#8217;s role or adding extra capabilities. There are several complex plugins out there that will allow you to create custom roles and manage capabilities. But what if you only need to change editorial access for a few posts or pages?</p>\n<p><a href="http://wordpress.org/plugins/editorial-access-manager/" target="_blank">Editorial Access Manager</a> is a simple plugin that lets you control who has access to which posts. It was created by 10up engineer <a href="http://taylorlovett.com/" target="_blank">Taylor Lovett</a>, who found that the default roles were inadequate for certain one-off situations. The plugin lets you assign which users or roles have access to specific posts. It adds a meta box to the post editor where you can set editorial access:</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/editorial-access-manager.png" rel="prettyphoto[28603]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/editorial-access-manager.png?resize=747%2C454" alt="editorial-access-manager" class="aligncenter size-full wp-image-29155" /></a></p>\n<p>Editorial Access Manager has no other settings besides the meta box for each post. For safety reasons, the site administrator will always be able to edit any post. Editorial access is limited to roles that have the &#8220;edit_posts&#8221; capability, so the Subscriber role is not available by default.</p>\n<p>Sometimes creating a new user role is overkill for just a handful of posts or pages. That&#8217;s where the Editorial Access Manager plugin comes in handy, particularly for large publications or multi-author blogs. Perhaps you have a contributor or author who you want to pull in to edit a particular post. This plugin is ideal for that kind of scenario. You can <a href="http://wordpress.org/plugins/editorial-access-manager/" target="_blank">download</a> it for free from WordPress.org or the plugin&#8217;s home on <a href="http://github.com/tlovett1/editorial-access-manager" target="_blank">GitHub</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 26 Aug 2014 02:23:14 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:44;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:65:"WPTavern: Gitter: A New Communication Service For GitHub Projects";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29067";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:172:"http://wptavern.com/gitter-a-new-communication-service-for-github-projects?utm_source=rss&utm_medium=rss&utm_campaign=gitter-a-new-communication-service-for-github-projects";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5317:"<p><a title="https://gitter.im/" href="https://gitter.im/">Gitter.im</a> is a new service that provides free and private chat rooms for open source projects on <a title="https://github.com/" href="https://github.com/">GitHub</a>. It integrates with issue tracking, supports markdown, notifications, and has an activity feed featuring multiple third-party integrations.</p>\n<p>In order to use Gitter, you&#8217;ll need to sign in using your GitHub account.</p>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/ActiveChannelOnGitter.png" rel="prettyphoto[29067]"><img class="size-full wp-image-29093" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/ActiveChannelOnGitter.png?resize=1025%2C536" alt="Active Channel On Gitter" /></a>Active Channel On Gitter\n<p>As you can see from the screenshot above, channels are on the left with the main text window in the center. Users and their online status are shown on the top-right side of the window along with a tab to switch between people and repository information. Activity related to the GitHub repository is displayed below the user information.</p>\n<h2>WordPress Projects Already Using Gitter</h2>\n<p>The <a title="http://make.wordpress.org/core/tag/options-meta/" href="http://make.wordpress.org/core/tag/options-meta/">Metadata UI API</a> and <a title="http://make.wordpress.org/ui/tag/image-flow/" href="http://make.wordpress.org/ui/tag/image-flow/">Image Flow</a> WordPress projects are already utilizing Gitter in place of IRC to handle real-time communications during meetings. Unlike IRC where log files are stored on individual machines, Gitter logs the conversation for as long as the channel is active. This makes it convenient to keep tabs on previous meetings and to maintain an archive. There&#8217;s also a <a title="https://developer.gitter.im/docs/messages-resource" href="https://developer.gitter.im/docs/messages-resource">JSON feed of the messages</a> allowing the archived content to be stored off-site.</p>\n<p>When I asked Scott Kingsley Clark, lead developer of the Metadata UI API project, why they chose to use Gitter instead of IRC, he replied with the following reasons.</p>\n<ol>\n<li>Public rooms are public, you don’t have to be a user or contributor in the room to read.</li>\n<li>Easy sign up (using GitHub.com account)</li>\n<li>Continuous chat (easy to catch up, sync up between timezones especially)</li>\n<li>The latest activity in GitHub is displayed next to chat window. You can see what’s going on and who’s doing what throughout the day.</li>\n</ol>\n<p>IRC doesn&#8217;t support media or markdown which are two distinct traits that come in handy when working with GitHub projects.</p>\n<a href="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/NotificationSettings.png" rel="prettyphoto[29067]"><img class="size-full wp-image-29096" src="http://i0.wp.com/wptavern.com/wp-content/uploads/2014/08/NotificationSettings.png?resize=548%2C271" alt="Gitter Notification Settings" /></a>Gitter Notification Settings\n<p>Gitter provides a few different notification settings. You can be notified of all messages, just those addressed to you, or turn on Lurk Mode. If you want to be notified even when the browser is closed, Gitter <a title="https://gitter.im/apps" href="https://gitter.im/apps">has an app available</a> for iOS and Mac OSX. An app for Android will be released at a later date.</p>\n<h2>As The Beta Concludes, Gitter Announces Pricing Plans</h2>\n<p>According to an email released to testers last week, the service is moving out of beta. During the beta program, nearly 25,000 developers registered with Gitter, 1.8M chat messages were delivered, and is hosting over 7,000 chat rooms. As part of the move, the service is introducing paid plans.</p>\n<p>If you created a private conversation during the beta, it will remain free to use. Additionally, every organization on GitHub will receive one free private room as part of the free plan. If you&#8217;re a student or educational organization, you can get in touch with <a href="mailto:support@gitter.im" target="_blank" rel="nofollow">support@gitter.im</a> to receive a discount code. Here&#8217;s what the pricing structure will look like when the beta concludes.</p>\n<a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/GitterPricing.png" rel="prettyphoto[29067]"><img class="size-full wp-image-29116" src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/GitterPricing.png?resize=553%2C1073" alt="Gitter Pricing Plans" /></a>Gitter Pricing Plans\n<p>Near the end of the email, Gitter states one of the goals for the company is to keep the service 100% ad-free.</p>\n<blockquote><p>Our goal is to keep Gitter 100% ad-free so that we can entirely focus our attention on building a great product without having to worry about weird money making schemes that aren&#8217;t directly aligned the vision of the company.</p></blockquote>\n<p>The service is expected to conclude its beta program this week or next.</p>\n<p>If you&#8217;re looking for a real-time communication platform that integrates seamlessly with your GitHub project, consider using Gitter. After testing the service, I found it to be straightforward and easy to use.</p>\n<p>If you&#8217;re using Gitter, tell us about your experience in the comments.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 25 Aug 2014 21:11:04 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:45;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:99:"WPTavern: Post Language Project Proposes to Bring Better Support for Multilingual WordPress Content";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=29062";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:242:"http://wptavern.com/post-language-project-proposes-to-bring-better-support-for-multilingual-wordpress-content?utm_source=rss&utm_medium=rss&utm_campaign=post-language-project-proposes-to-bring-better-support-for-multilingual-wordpress-content";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:10629:"<a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/globe.jpg" rel="prettyphoto[29062]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/globe.jpg?resize=1024%2C499" alt="photo credit: . Entrer dans le rêve - cc" class="size-full wp-image-29134" /></a>photo credit: <a href="https://www.flickr.com/photos/tranbina/4765484383/">. Entrer dans le rêve</a> &#8211; <a href="http://creativecommons.org/licenses/by-nc-sa/2.0/">cc</a>\n<p>WordPress <a href="http://w3techs.com/technologies/overview/content_management/all" target="_blank">global usage</a> on the web is now at 23%, and this year marked the first time that non-English downloads surpassed the number of English downloads. Major internationalization <a href="http://wptavern.com/major-internationalization-improvements-planned-for-wordpress-4-0" target="_blank">improvements</a> coming in 4.0 will open up the platform even more for those publishing in different languages.</p>\n<p>While discussing the upcoming language-related improvements at WordCamp Seattle this year, Andrew Nacin <a href="https://twitter.com/dimensionmedia/status/483035345551106048" target="_blank">highlighted</a> the fact that only 5-10% of the world speaks English. It may not be long before the majority of WordPress installations are in Mandarin, Spanish, Hindi, or Arabic.</p>\n<p>The need for better ways to support multilingual content is already a concern for many international users and agencies. One thing that WordPress core is currently missing is the ability to easily retrieve the language in which a post or page has been written. German WordPress developer <a href="http://glueckpress.com/" target="_blank">Caspar Hübinger</a> is in the early stages of creating a <a href="https://github.com/glueckpress/wordpress-post-language" target="_blank">proposal to add a Post Language feature to core</a>.</p>\n<h2>Why Does WordPress Need Post Language Support?</h2>\n<p>In outlining the need for post language support, Hübinger cites WordPress download stats from the end of April, demonstrating that 3.9 had been downloaded roughly 1.36 times more often in other languages than the default US English:</p>\n<p><strong>Total Core downloads:</strong> 6,589,287 (100%)<br />\n<strong>Default English:</strong> 2,807,978 (42.6%)<br />\n<strong>Others:</strong> 3,781,309 (57.4%)</p>\n<p>(<a href="https://github.com/glueckpress/wordpress-post-language/blob/master/assets/img/2014-04-29_17-11-48.png?raw=true" target="_blank">Data</a> from April 29, 2014)</p>\n<p>Hübinger wants to add post_language as a property of <a href="http://codex.wordpress.org/Class_Reference/WP_Post" target="_blank">WP_Post</a> just like post_author, post_excerpt, and the other variables.</p>\n<p>&#8220;Offering a basic opportunity to users for them to store the language of their content along with other post meta information would provide a new level of empowerment for both, users and developers,&#8221; Hübinger contends.</p>\n<p>His proposal is based on the premise that the language of post content serves as:</p>\n<ul>\n<li>a highly relevant piece of post meta information in general</li>\n<li>one of the most important parameters for plugin and theme developers to tackle the already complex field of language and translation</li>\n</ul>\n<p>Many plugins, in the course of providing translation features, require the ability to determine the language a post was written in, but they all go about it in different ways. Portability is abysmal across plugins such as WPML, Polylang, Babble, Multilingual Press, and others that provide a similar functionality.</p>\n<p>&#8220;<em>All</em> of those plugins, however, do much more than just determining the language of a post,&#8221; Hübinger told the Tavern. &#8220;They offer UIs for translating content and establishing language relationships between single posts — a field so complex that being built without any core method for language determination, each one of those plugins can become a major headache when a user tries to switch from one plugin to another.</p>\n<p>&#8220;As a user you’re pretty much locked in to the solution you choose, since not only are connections between original posts and translations gone when you switch plugins, but also the very marker of which language a post is written in simply vanishes or becomes ineffective,&#8221; Hübinger explained. If WordPress had a standard way to determine the language in which a post was written, all of these plugins could potentially provide more portable functionality.</p>\n<h3>The Proposed Post Language Feature</h3>\n<p>So what would Post Language look like as a feature implemented in WordPress? In addition to providing developers with more tools to add custom language and translation features, post language would also allow users to assign a language selection in the Publish Post meta box:</p>\n<p><a href="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/post-lanugage-publish-box.jpg" rel="prettyphoto[29062]"><img src="http://i1.wp.com/wptavern.com/wp-content/uploads/2014/08/post-lanugage-publish-box.jpg?resize=673%2C287" alt="post-lanugage-publish-box" class="aligncenter size-full wp-image-29097" /></a></p>\n<p>Hübinger proposes that the select box be populated with the languages previously defined through either the language packs available within the given WordPress install, or a filter. The language selection would return the ISO code for that language and store it in a database field as post meta or an extra field that would have to be added to the database table.</p>\n<p>The value for Post Language could then be used in the following ways:</p>\n<ul>\n<li>should be made accessible through template tags:<br />\n<code>the_post_language()</code><br />\n<code>get_the_post_language()</code></li>\n<li>should possibly affect<br />\n<code>get_bloginfo( \'language\' )</code><br />\n<code>get_bloginfo( \'text-direction\' )</code><br />\nand thus <code>language_attributes()</code></li>\n<li>OR should be implemented via a new attribute on a per-post basis, similar to <code>post_class():</code>\n<ul>\n<li><code>post_language()</code></p>\n<pre class="brush: xml; light: true; title: ; notranslate">&lt;article &lt;?php post_class(); ?&gt; &lt;?php post_language(); ?&gt;&gt;\n// ouput:\n&lt;code&gt;&lt;article class="foo bar" lang="en-US"&gt;&lt;/code&gt;</pre>\n</li>\n</ul>\n</li>\n</ul>\n<p>Since not all WordPress sites would need this feature, he suggests that it be disabled by default and enabled via a constant, a filter or perhaps an admin setting under Settings > General.</p>\n<p>Hübinger <a href="http://make.wordpress.org/core/2014/05/21/internationalization-goals-for-4-0/#comment-14913" target="_blank">mentioned</a> his idea in a comment on Andrew Nacin&#8217;s roadmap for 4.0 internationalization improvements, but he decided to wait until 4.0 is in place before officially proposing the feature. Adding a new property to WP_Post is a major consideration and will likely encounter a healthy debate.</p>\n<h3>Post Language Support Falls In Line with WordPress&#8217; Mission to Democratize Publishing</h3>\n<p>Unlike various other CMSs, such as Drupal and Typo3, WordPress does not provide a core feature to publish translations of original content. &#8220;You can’t even just publish single posts in more than one language per site without messing up your markup with false language attributes,&#8221; Hübinger notes. &#8220;Not a problem? Try to get a machine reading a post to you in any other language than English when its markup says it is written in English. You’ll most certainly hear the problem.&#8221;</p>\n<p>Hübinger believes that raising awareness is key for the Post Language feature to gain momentum. &#8220;Language on a per post basis is generally associated with translation in people’s minds, and rightfully so,&#8221; he said. &#8220;Translation, though, has always been an edge case scenario for our mainly anglophone WordPress core dev team, and rightfully so as well.&#8221; Convincing the WordPress community of the case for adding Post Language to core is the first step to making it a viable possibility.</p>\n<p>The lack of a post language field juxtaposed with the existence of post formats in core is a continual source of bewilderment for Hübinger, who comes from a multilingual culture.</p>\n<p><strong>&#8220;I like to say if we have a visual carnival like post formats in core, it is high time to spend some thought on a language API which potentially will affect and benefit a couple of millions more users than fancy post formats,&#8221;</strong> he said. &#8220;Nothing against post formats; I like them. They just make such good contrast when comparing the importance of core features.&#8221;</p>\n<p>His proposal makes a compelling case for the international community and appeals to the heart of WordPress&#8217; core mission to democratize publishing.</p>\n<blockquote><p>After all, WordPress is all about publishing content, and content inevitably has to do with language. We can’t honestly claim to &#8216;democratize publishing&#8217; while we continue to ignore the relevance of linguistic aspects regarding content for WordPress users around the world.</p></blockquote>\n<p>Hübinger believes that a Post Language feature can help the project enter a higher level of maturity with one small API feature addition. &#8220;While the whole field of translating and multilingual content rightfully has been and will be outsourced into plugin territory, WordPress core needs to provide at least a basic language-per-post API for plugin authors to work with, thus preventing users from locking themselves in with one solution forever,&#8221; he said.</p>\n<p>Hübinger readily admits that the feature is beyond his coding capabilities and hopes that other developers will join the effort to establish a path for architecture and implementation.</p>\n<p>&#8220;I am <em>totally</em> open to any self-respecting developers who would like to contribute, fork the repo, set up their own one for the same idea,&#8221; he said. &#8220;This is about making WordPress better for millions of non-anglophone users, so let’s just get that language API in there in the most decent manner possible!&#8221;</p>\n<p>Once WordPress 4.0 is released with improved multilingual support, Hübinger hopes to drum up more support and contributors to work on the project before officially proposing it to core. If you&#8217;d like to assist on further developing the Post Language proposal, you can find the project on <a href="https://github.com/glueckpress/wordpress-post-language" target="_blank">GitHub</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 25 Aug 2014 20:38:53 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:46;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:90:"Post Status: ThemeForest and CodeCanyon introduce mandatory support and renewable packages";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:30:"http://www.poststat.us/?p=7096";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:128:"http://www.poststat.us/themeforest-codecanyon-support/?utm_source=rss&utm_medium=rss&utm_campaign=themeforest-codecanyon-support";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4308:"<p><img class="aligncenter size-full wp-image-7097" src="http://www.poststat.us/wp-content/uploads/2014/08/theme-forest-support.jpg" alt="theme-forest-support" width="660" height="329" /></p>\n<p>Envato has announced a change in support terms for ThemeForest and CodeCanyon, which creates a requirement for authors to provide six months of support, and offers buyers &#8220;support packs&#8221; for renewing support.</p>\n<p>Support has not historically been required, but nearly every author notes that support is essentially required for sales purposes. From the <a href="http://marketblog.envato.com/news/item-support-sustainability-authors-clarity-buyers/">Envato market blog</a>:</p>\n<blockquote><p>Our most successful Authors talk about the support they provide being a key part of their success, and most of our authors advertise that they provide support and have done so for some time. However support has not been an intrinsic part of the system and site mechanics.</p></blockquote>\n<p>The new terms are a bit nuanced and will be a bit more complicated for authors that don&#8217;t currently offer support. There are also a number of questions left to answer, which Collis Ta&#8217;eed &#8212; Envato&#8217;s CEO &#8212; notes in the post.</p>\n<ul>\n<li>Support will be limited to 6 months</li>\n<li>Additional support can be purchased in &#8220;support packs&#8221;, though I&#8217;m not sure how that will be structured</li>\n<li>Support packs will be 70% author revenue, and 30% fee to Envato (something authors seem slightly unhappy about so far, based on what I&#8217;ve seen)</li>\n<li>New rules will be put into effect December 1st</li>\n<li>Updates will remain part of the initial purchase</li>\n</ul>\n<p>Envato hasn&#8217;t decided yet how long support packs will last, nor how much they will cost. They are also working out details for support promises, such as how long customers should expect for response times. The announcement post also addresses the very legitimate concern for the definition of support. They clearly state it will be a strict definition to prevent authors from having to provide unreasonable support.</p>\n<p>Collis also did not note whether initial item prices will increase to account for the added support requirement. Considering so many authors provide it under the current model, they may not raise prices at all; though it&#8217;d be a great time to do it.</p>\n<p>Collis also notes that unlimited plans are potentially unsustainable, which is quite a statement for a marketplace that has limited authors to that model for years:</p>\n<blockquote><p>We’re capping support at 6 months because the ‘lifetime’ support that authors sometime promise is often not economically sustainable and ultimately leads to more bad buyer experiences than good. For most buyers, the first few months represents the time when most help is needed. After six months,that ongoing support really is a premium request to the author and should be treated as such. There’s already plenty of signs that this is where the industry is headed.</p></blockquote>\n<p>One of my final questions about this move is in regard to how ThemeForest will create support channels. Many ThemeForest and CodeCanyon authors have already created alternative support channels through their own websites, often citing ThemeForest&#8217;s system as difficult to manage. I assume authors will still be able to maintain existing systems, but may have to make adjustments for being able to manage support packs and whatnot within their platforms.</p>\n<p>I definitely think this is a good change for Envato to make; it&#8217;s honestly way past time. However, I understand why it&#8217;s taken a while; as the announcement post indicates, there&#8217;s a lot to consider and it&#8217;s not an easy change. That&#8217;s why they are announcing it now and waiting until December to implement the changes.</p>\n<p>I&#8217;ll be very interested to hear from authors about how they feel about this change. I have a feeling that a minority of buyers would actually buy support packs, though if they do that will be a nice benefit for authors to make more money on support-heavy customers.</p>\n<p><a href="http://marketblog.envato.com/news/item-support-sustainability-authors-clarity-buyers/">*Image via Envato</a></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 25 Aug 2014 19:47:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Brian Krogsgard";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:47;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"Matt: Plugin Icons";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44034";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:34:"http://ma.tt/2014/08/plugin-icons/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:456:"<p><a href="http://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/">Introducing plugin icons in the plugin installer</a>, the defaults are cool (and that library would be nice to <a href="http://blog.gravatar.com/2008/04/22/identicons-monsterids-and-wavatars-oh-my/">support for Gravatar</a>) but go ahead and start making icons for your WordPress plugins. It adds a nice punch and panache to the plugin experience.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 25 Aug 2014 15:45:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:48;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Matt: Simplenote for Linux";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=44031";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:42:"http://ma.tt/2014/08/simplenote-for-linux/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:361:"<p>We have a great <a href="http://simplenote.com/">Simplenote for Mac</a> client, and a <a href="https://app.simplenote.com/signin">super clean web version</a>, but nothing first-party for Linux. If anyone is experienced with Linux desktop development and would be interested in creating something extremely minimalist like our Mac app please get in touch!</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 23 Aug 2014 20:03:23 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:49;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"WPTavern: BuddyPress 2.1 Beta 1 Now Available for Testing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wptavern.com/?p=28832";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:158:"http://wptavern.com/buddypress-2-1-beta-1-now-available-for-testing?utm_source=rss&utm_medium=rss&utm_campaign=buddypress-2-1-beta-1-now-available-for-testing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2891:"<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/02/buddypress-wallpapers1.png" rel="prettyphoto[28832]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/02/buddypress-wallpapers1.png?resize=800%2C450" alt="buddypress-wallpapers" class="aligncenter size-full wp-image-16156" /></a></p>\n<p>BuddyPress 2.1 is right around the corner with <a href="http://buddypress.org/2014/08/buddypress-2-1-beta-1/" target="_blank">Beta 1</a> landing in the hands of eager testers today. The upcoming release includes several improvements that make BuddyPress easier to use, more secure, and faster than ever.</p>\n<p>BP 2.1 is set to introduce a totally revamped @mentions interface with built-in auto-suggestion and beta testers will want to put it through the paces. Here&#8217;s a quick demo:</p>\n<p><a href="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/mentions.gif" rel="prettyphoto[28832]"><img src="http://i2.wp.com/wptavern.com/wp-content/uploads/2014/08/mentions.gif?resize=655%2C443" alt="mentions" class="aligncenter size-full wp-image-29048" /></a></p>\n<p>The brand new URL profile field type is also making its way into this release. It automatically creates a link from the URL entered in the profile field.</p>\n<p>Highlights for the upcoming release demonstrate continual improvement on the project:</p>\n<ul>\n<li>New @mentions interface: type a @ when leaving a status update or commenting on an activity item or blog post, and the new suggestions panel will open.</li>\n<li>Set better passwords with the password strength meter on the registration and user settings pages</li>\n<li>When a user attempts to change their email address, the new address requires email verification before the change is applied</li>\n<li>New “URL” XProfile field type</li>\n<li>Continued performance enhancements, particularly on the Members and Groups directories.</li>\n<li>Higher quality translations (automatically fetched by WordPress), courtesy of BP translation volunteers</li>\n</ul>\n<p>BuddyPress 2.1 also includes a lot of under-the-hood tweaks. This release offers <a href="https://buddypress.trac.wordpress.org/ticket/5418" target="_blank">better compatibility</a> with themes that load template content in advanced ways, such as Stargazer. It will also formally <a href="https://buddypress.trac.wordpress.org/ticket/5390/" target="_blank">deprecate the BuddyBar</a>. The term &#8220;Avatar&#8221; has been <a href="https://buddypress.trac.wordpress.org/ticket/5758" target="_blank">renamed</a> to &#8220;Profile Photo,&#8221; which is more universally understood and translatable.</p>\n<p>All of the features and improvements above could use testing. Grab a cold beverage and take the beta for a spin this weekend. You can download a zip from the <a href="http://buddypress.org/2014/08/buddypress-2-1-beta-1/" target="_blank">Beta 1 announcement post</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 23 Aug 2014 18:54:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:10:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Thu, 04 Sep 2014 17:32:22 GMT";s:12:"content-type";s:8:"text/xml";s:14:"content-length";s:6:"250907";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:13:"last-modified";s:29:"Thu, 04 Sep 2014 17:15:21 GMT";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:4:"x-nc";s:11:"HIT lax 249";s:13:"accept-ranges";s:5:"bytes";}s:5:"build";s:14:"20140613025753";}', 'no') ;
INSERT INTO `wp_options` ( `option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1839, '_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1409895144', 'no'),
(1840, '_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1409851944', 'no'),
(1841, '_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109', '1409895145', 'no'),
(1842, '_transient_feed_b9388c83948825c1edaef0d856b7b109', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n	\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:72:"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"WordPress Plugins » View: Most Popular";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:44:"http://wordpress.org/plugins/browse/popular/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:39:"WordPress Plugins » View: Most Popular";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:5:"en-US";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 04 Sep 2014 17:08:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:25:"http://bbpress.org/?v=1.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:15:{i:0;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:7:"Akismet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:45:"http://wordpress.org/plugins/akismet/#post-15";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 09 Mar 2007 22:11:30 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:32:"15@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:98:"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"Contact Form 7";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://wordpress.org/plugins/contact-form-7/#post-2141";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 Aug 2007 12:45:03 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"2141@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:54:"Just another contact form plugin. Simple but flexible.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Takayuki Miyoshi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"WordPress SEO by Yoast";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:53:"http://wordpress.org/plugins/wordpress-seo/#post-8321";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 01 Jan 2009 20:34:44 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"8321@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:131:"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using Yoast&#039;s WordPress SEO plugin.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Joost de Valk";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"All in One SEO Pack";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:58:"http://wordpress.org/plugins/all-in-one-seo-pack/#post-753";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 30 Mar 2007 20:08:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"753@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:126:"All in One SEO Pack is a WordPress SEO plugin to automatically optimize your WordPress blog for Search Engines such as Google.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"uberdose";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"Google XML Sitemaps";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://wordpress.org/plugins/google-sitemap-generator/#post-132";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 09 Mar 2007 22:31:32 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"132@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:105:"This plugin will generate a special XML sitemap which will help search engines to better index your blog.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Arne Brachhold";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"Wordfence Security";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:50:"http://wordpress.org/plugins/wordfence/#post-29832";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 04 Sep 2011 03:13:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"29832@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:137:"Wordfence Security is a free enterprise class security and performance plugin that makes your site up to 50 times faster and more secure.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"Wordfence";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"Jetpack by WordPress.com";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"http://wordpress.org/plugins/jetpack/#post-23862";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 Jan 2011 02:21:38 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"23862@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:104:"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"Tim Moore";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"MailPoet Newsletters";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/wysija-newsletters/#post-32629";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 02 Dec 2011 17:09:16 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"32629@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:94:"Send newsletters, post notifications or autoresponders from WordPress easily, and beautifully.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"MailPoet Staff";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"WordPress Importer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/wordpress-importer/#post-18101";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 May 2010 17:42:45 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"18101@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:101:"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Brian Colinger";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:21:"WPtouch Mobile Plugin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:47:"http://wordpress.org/plugins/wptouch/#post-5468";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 01 May 2008 04:58:09 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"5468@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:63:"Create a slick mobile WordPress website with just a few clicks.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"BraveNewCode Inc.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:15:"NextGEN Gallery";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/plugins/nextgen-gallery/#post-1169";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 23 Apr 2007 20:08:06 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"1169@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:121:"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 10 million downloads.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"Alex Rabe";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:33:"WooCommerce - excelling eCommerce";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:52:"http://wordpress.org/plugins/woocommerce/#post-29860";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 05 Sep 2011 08:13:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"29860@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:97:"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"WooThemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"Broken Link Checker";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/broken-link-checker/#post-2441";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 08 Oct 2007 21:35:04 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"2441@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:131:"This plugin will check your posts, comments and other content for broken links and missing images, and notify you if any are found.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"Janis Elsts";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"WP Super Cache";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://wordpress.org/plugins/wp-super-cache/#post-2572";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 05 Nov 2007 11:40:04 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"2572@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:73:"A very fast caching engine for WordPress that produces static html files.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Donncha O Caoimh";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:46:"iThemes Security (formerly Better WP Security)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/better-wp-security/#post-21738";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 22 Oct 2010 22:06:05 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"21738@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:63:"The easiest, most effective way to secure WordPress in seconds.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Chris Wiegman";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:45:"http://wordpress.org/plugins/rss/view/popular";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:11:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Thu, 04 Sep 2014 17:32:25 GMT";s:12:"content-type";s:23:"text/xml; charset=UTF-8";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:7:"expires";s:29:"Thu, 04 Sep 2014 17:43:39 GMT";s:13:"cache-control";s:0:"";s:6:"pragma";s:0:"";s:13:"last-modified";s:31:"Thu, 04 Sep 2014 17:08:39 +0000";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:4:"x-nc";s:11:"HIT lax 249";}s:5:"build";s:14:"20140613025753";}', 'no'),
(1843, '_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109', '1409895145', 'no'),
(1844, '_transient_feed_mod_b9388c83948825c1edaef0d856b7b109', '1409851945', 'no'),
(1845, '_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51', '1409895145', 'no'),
(1846, '_transient_dash_4077549d03da2e451c8b5f002294ff51', '<div class="rss-widget"><ul><li><a class=\'rsswidget\' href=\'http://wordpress.org/news/2014/09/benny/\'>WordPress 4.0 “Benny”</a> <span class="rss-date">September 4, 2014</span><div class="rssSummary">Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we’ve put a little extra polish into it. This release brings you a smoother writing and management experience […]</div></li></ul></div><div class="rss-widget"><ul><li><a class=\'rsswidget\' href=\'http://wptavern.com/wordpress-4-0-benny-now-available-for-download\' title=\'WordPress 4.0 “Benny” was released today, named for American jazz and swing musician Benny Goodman, also known as the “King of Swing.” Development for 4.0 kicked off at the end of April, led by Helen Hou-Sandí. This release includes hundreds of refinements and a few brand new features, culminating in a more polished media and editing experience. You’ll also\'>WPTavern: WordPress 4.0 Benny Now Available for Download</a></li><li><a class=\'rsswidget\' href=\'http://wordpress.org/news/2014/09/benny/\' title=\'Version 4.0 of WordPress, named “Benny” in honor of jazz clarinetist and bandleader Benny Goodman, is available for download or update in your WordPress dashboard. While 4.0 is just another number for us after 3.9 and before 4.1, we feel we’ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you\'>Dev Blog: WordPress 4.0 “Benny”</a></li><li><a class=\'rsswidget\' href=\'http://apps.wordpress.org/2014/09/04/4-3-release/\' title=\'WordPress for iOS 4.3 is here! The download is available from the App Store. Here’s a glimpse at the latest updates: Various stats improvements We know you love checking your stats on the go, wherever you may be. On your Stats page, you can now see more details in the stats chart in your Visitors and Views. Just tap on any view — Days, Weeks, Months — and th\'>WP iPhone: WordPress for iOS 4.3 Released</a></li></ul></div><div class="rss-widget"><ul><li class=\'dashboard-news-plugin\'><span>Popular Plugin:</span> <a href=\'http://wordpress.org/plugins/jetpack/\' class=\'dashboard-news-plugin-link\'>Jetpack by WordPress.com</a>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=jetpack&amp;_wpnonce=506855ade9&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Jetpack by WordPress.com\'>Install</a>)</span></li></ul></div>', 'no'),
(1849, '_site_transient_update_plugins', 'O:8:"stdClass":3:{s:12:"last_checked";i:1409858173;s:8:"response";a:0:{}s:12:"translations";a:0:{}}', 'yes'),
(1850, '_site_transient_timeout_wpmdb_licence_response', '1409895291', 'yes'),
(1851, '_site_transient_wpmdb_licence_response', '{"message":"\\t\\t\\t<p>\\n\\t\\t\\t\\tYou have an active <strong>Developer<\\/strong> license.<br \\/>You may send an email to the following address to get front-of-the-line support service.\\t\\t\\t<\\/p>\\n\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<strong>Please copy the Diagnostic Info &amp; Error Log info below into a text file and attach it to your email. Do the same for any other site involved in your email.<\\/strong>\\n\\t\\t\\t<\\/p>\\n\\n\\t\\t\\t<p class=\\"email\\">\\n\\t\\t\\t\\t<a class=\\"button\\" href=\\"mailto:priority-wpmdb@deliciousbrains.com\\">priority-wpmdb@deliciousbrains.com<\\/a>\\n\\t\\t\\t<\\/p>\\n\\t\\t","addons_available":"1","addon_list":{"wp-migrate-db-pro-media-files":{"name":"Media Files","desc":"Determines the Media Library files that have been added or updated on the remote site and downloads them. Includes an option to remove local files that are no longer found on the remote site. <a style=\\"color:#fff;text-decoration:underline;\\" href=\\"https:\\/\\/deliciousbrains.com\\/wp-migrate-db-pro\\/documentation\\/#media-files-addon\\" style=\\"\\">More Details &rarr;<\\/a>","version":"1.1.5","beta_version":"","tested":"3.9.2"},"wp-migrate-db-pro-cli":{"name":"CLI","desc":"Use WP-CLI to run migrations from the command line: <code>wp wpmdb migrate <span class=\\"bracket\\">&lt;<\\/span><span class=\\"var\\">profile<\\/span><span class=\\"bracket\\">&gt;<\\/span><\\/code> or run them from your own code with the <code>wpmdb_migrate<span class=\\"bracket\\">(<\\/span> <span class=\\"var\\">$profile<\\/span> <span class=\\"bracket\\">)<\\/span><\\/code> function. <a href=\\"https:\\/\\/deliciousbrains.com\\/wp-migrate-db-pro\\/documentation\\/#cli-addon\\" style=\\"\\">More Details &rarr;<\\/a>","version":"1.0.1","beta_version":"","required":"1.4b1","tested":"3.9.2"}}}', 'yes'),
(1852, '301_redirects', 'a:2:{s:11:"/railscurve";s:11:"/30dayrails";s:18:"/railscurve/thanks";s:18:"/30dayrails/thanks";}', 'yes'),
(1853, '301_redirects_wildcard', 'true', 'yes'),
(1855, '_transient_timeout_GFCache_e7e2e676ca36c6bcd3034599931980dc', '1409854552', 'no'),
(1856, '_transient_GFCache_e7e2e676ca36c6bcd3034599931980dc', '1', 'no'),
(1857, '_transient_timeout_GFCache_71cef576382c4974becacd68f954abfe', '1409854557', 'no'),
(1858, '_transient_GFCache_71cef576382c4974becacd68f954abfe', '1', 'no'),
(1859, '_transient_timeout_GFCache_106b2043023524b1f9f1e0cf8e1067ef', '1409854618', 'no'),
(1860, '_transient_GFCache_106b2043023524b1f9f1e0cf8e1067ef', '1', 'no'),
(1861, '_transient_timeout_GFCache_ec78d5a0768f52695a2eb33c4944f422', '1409854629', 'no'),
(1862, '_transient_GFCache_ec78d5a0768f52695a2eb33c4944f422', '1', 'no'),
(1863, '_transient_timeout_GFCache_6c41e7aad92492c5fdebd4e81a83d379', '1409854635', 'no'),
(1864, '_transient_GFCache_6c41e7aad92492c5fdebd4e81a83d379', '1', 'no'),
(1865, '_transient_timeout_GFCache_7d638cd2b5ca02c8ac14c8447acf6403', '1409854821', 'no'),
(1866, '_transient_GFCache_7d638cd2b5ca02c8ac14c8447acf6403', '1', 'no'),
(1870, '_site_transient_timeout_theme_roots', '1409859972', 'yes'),
(1871, '_site_transient_theme_roots', 'a:1:{s:7:"Paradox";s:7:"/themes";}', 'yes') ;

#
# End of data contents of table `wp_options`
# --------------------------------------------------------



#
# Delete any existing table `wp_postmeta`
#

DROP TABLE IF EXISTS `wp_postmeta`;


#
# Table structure of table `wp_postmeta`
#

CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=408 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_postmeta`
#
INSERT INTO `wp_postmeta` ( `meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(1, 2, '_wp_page_template', 'default'),
(2, 2, '_edit_last', '1'),
(3, 2, '_edit_lock', '1408726147:1'),
(4, 5, '_edit_last', '1'),
(5, 5, '_edit_lock', '1409792740:1'),
(6, 5, '_wp_page_template', 'default'),
(7, 9, '_edit_last', '1'),
(8, 9, '_edit_lock', '1403034343:1'),
(9, 9, '_wp_page_template', 'default'),
(47, 15, '_edit_last', '1'),
(48, 15, '_edit_lock', '1409792680:1'),
(49, 15, '_wp_page_template', 'default'),
(69, 19, '_menu_item_type', 'post_type'),
(70, 19, '_menu_item_menu_item_parent', '0'),
(71, 19, '_menu_item_object_id', '15'),
(72, 19, '_menu_item_object', 'page'),
(73, 19, '_menu_item_target', ''),
(74, 19, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(75, 19, '_menu_item_xfn', ''),
(76, 19, '_menu_item_url', ''),
(78, 20, '_menu_item_type', 'post_type'),
(79, 20, '_menu_item_menu_item_parent', '0'),
(80, 20, '_menu_item_object_id', '9'),
(81, 20, '_menu_item_object', 'page'),
(82, 20, '_menu_item_target', ''),
(83, 20, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(84, 20, '_menu_item_xfn', ''),
(85, 20, '_menu_item_url', ''),
(87, 21, '_menu_item_type', 'post_type'),
(88, 21, '_menu_item_menu_item_parent', '0'),
(89, 21, '_menu_item_object_id', '5'),
(90, 21, '_menu_item_object', 'page'),
(91, 21, '_menu_item_target', ''),
(92, 21, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(93, 21, '_menu_item_xfn', ''),
(94, 21, '_menu_item_url', ''),
(162, 15, 'dsq_thread_id', ''),
(168, 42, '_edit_last', '1'),
(169, 42, '_edit_lock', '1409066654:1'),
(172, 42, 'dsq_thread_id', '2893811191'),
(187, 52, '_edit_last', '1'),
(188, 52, '_edit_lock', '1409066507:1'),
(191, 52, '_wp_old_slug', 'speed-up-styling-in-rails-with-bootstrap-sass'),
(193, 73, '_edit_last', '1'),
(194, 73, '_edit_lock', '1409066446:1'),
(195, 80, '_wp_attached_file', '2014/08/Git-Clone.jpg'),
(196, 80, '_wp_attachment_metadata', 'a:5:{s:5:"width";i:1208;s:6:"height";i:739;s:4:"file";s:21:"2014/08/Git-Clone.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"Git-Clone-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"Git-Clone-300x183.jpg";s:5:"width";i:300;s:6:"height";i:183;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"Git-Clone-1024x626.jpg";s:5:"width";i:1024;s:6:"height";i:626;s:9:"mime-type";s:10:"image/jpeg";}s:13:"sidebar-thumb";a:4:{s:4:"file";s:21:"Git-Clone-500x305.jpg";s:5:"width";i:500;s:6:"height";i:305;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}'),
(197, 80, '_wp_attachment_image_alt', 'Git Clone'),
(200, 73, '_wp_old_slug', 'get-out-of-the-cave-and-onto-github'),
(204, 73, '_yyarpp', '42'),
(205, 88, '_edit_last', '1'),
(206, 88, '_edit_lock', '1409066381:1'),
(207, 88, '_yyarpp', ''),
(210, 98, '_edit_last', '1'),
(211, 98, '_edit_lock', '1409068126:1'),
(213, 98, '_yyarpp', '105,73,42'),
(214, 105, '_edit_last', '1'),
(215, 105, '_edit_lock', '1409854721:1'),
(216, 105, '_wp_page_template', 'page-30dayrails.php'),
(217, 109, '_edit_last', '1'),
(218, 109, '_edit_lock', '1408762748:1'),
(219, 109, '_wp_page_template', 'page-home.php'),
(220, 111, '_edit_last', '1'),
(221, 111, '_edit_lock', '1408720684:1'),
(222, 111, '_wp_page_template', 'index.php'),
(223, 114, '_menu_item_type', 'post_type'),
(224, 114, '_menu_item_menu_item_parent', '0'),
(225, 114, '_menu_item_object_id', '111'),
(226, 114, '_menu_item_object', 'page'),
(227, 114, '_menu_item_target', ''),
(228, 114, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(229, 114, '_menu_item_xfn', ''),
(230, 114, '_menu_item_url', ''),
(232, 115, '_menu_item_type', 'post_type'),
(233, 115, '_menu_item_menu_item_parent', '0'),
(234, 115, '_menu_item_object_id', '105'),
(235, 115, '_menu_item_object', 'page'),
(236, 115, '_menu_item_target', ''),
(237, 115, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(238, 115, '_menu_item_xfn', ''),
(239, 115, '_menu_item_url', ''),
(241, 116, '_menu_item_type', 'custom'),
(242, 116, '_menu_item_menu_item_parent', '0'),
(243, 116, '_menu_item_object_id', '116'),
(244, 116, '_menu_item_object', 'custom'),
(245, 116, '_menu_item_target', ''),
(246, 116, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(247, 116, '_menu_item_xfn', ''),
(248, 116, '_menu_item_url', 'http://plsa'),
(249, 116, '_menu_item_orphaned', '1408719244'),
(250, 2, '_wp_trash_meta_status', 'publish'),
(251, 2, '_wp_trash_meta_time', '1408726298'),
(252, 137, '_edit_last', '1'),
(253, 137, '_edit_lock', '1409855129:1'),
(256, 147, '_edit_last', '1'),
(257, 147, '_edit_lock', '1409075401:1'),
(258, 147, '_wp_page_template', 'default'),
(259, 165, '_edit_last', '1'),
(260, 165, '_edit_lock', '1409075415:1'),
(261, 165, '_wp_page_template', 'default') ;
INSERT INTO `wp_postmeta` ( `meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(264, 137, '_yyarpp', '73,42,98,105'),
(267, 52, '_yyarpp', '105'),
(269, 42, '_yyarpp', '98,105,73'),
(275, 178, '_edit_last', '1'),
(276, 178, '_edit_lock', '1409075072:1'),
(277, 178, '_wp_page_template', 'default'),
(278, 178, '_yyarpp', ''),
(279, 181, '_edit_last', '1'),
(280, 181, '_edit_lock', '1409075583:1'),
(281, 181, '_yyarpp', '98,105'),
(282, 178, '_wp_trash_meta_status', 'future'),
(283, 178, '_wp_trash_meta_time', '1409075384'),
(284, 188, '_edit_last', '1'),
(285, 188, '_edit_lock', '1409088099:1'),
(286, 188, '_yyarpp', '98,105,73,42'),
(287, 196, '_wp_attached_file', '2014/08/git-remotes.jpg'),
(288, 196, '_wp_attachment_metadata', 'a:5:{s:5:"width";i:600;s:6:"height";i:663;s:4:"file";s:23:"2014/08/git-remotes.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"git-remotes-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"git-remotes-271x300.jpg";s:5:"width";i:271;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:13:"sidebar-thumb";a:4:{s:4:"file";s:23:"git-remotes-500x552.jpg";s:5:"width";i:500;s:6:"height";i:552;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}'),
(289, 196, '_wp_attachment_image_alt', 'A beginners guide to the what, why & how of Git remotes'),
(292, 209, '_menu_item_type', 'post_type'),
(293, 209, '_menu_item_menu_item_parent', '0'),
(294, 209, '_menu_item_object_id', '9'),
(295, 209, '_menu_item_object', 'page'),
(296, 209, '_menu_item_target', ''),
(297, 209, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(298, 209, '_menu_item_xfn', ''),
(299, 209, '_menu_item_url', ''),
(301, 210, '_menu_item_type', 'custom'),
(302, 210, '_menu_item_menu_item_parent', '0'),
(303, 210, '_menu_item_object_id', '210'),
(304, 210, '_menu_item_object', 'custom'),
(305, 210, '_menu_item_target', ''),
(306, 210, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(307, 210, '_menu_item_xfn', ''),
(308, 210, '_menu_item_url', 'http://ww'),
(309, 210, '_menu_item_orphaned', '1409624427'),
(310, 211, '_edit_last', '1'),
(311, 211, '_edit_lock', '1409682540:1'),
(312, 211, '_wp_page_template', 'page-right-sidebar.php'),
(313, 211, '_yyarpp', ''),
(314, 213, '_menu_item_type', 'post_type'),
(315, 213, '_menu_item_menu_item_parent', '0'),
(316, 213, '_menu_item_object_id', '211'),
(317, 213, '_menu_item_object', 'page'),
(318, 213, '_menu_item_target', ''),
(319, 213, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(320, 213, '_menu_item_xfn', ''),
(321, 213, '_menu_item_url', ''),
(322, 222, '_wp_attached_file', '2014/09/TyRichards.jpg'),
(323, 222, '_wp_attachment_metadata', 'a:5:{s:5:"width";i:960;s:6:"height";i:960;s:4:"file";s:22:"2014/09/TyRichards.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"TyRichards-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"TyRichards-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:13:"sidebar-thumb";a:4:{s:4:"file";s:22:"TyRichards-500x500.jpg";s:5:"width";i:500;s:6:"height";i:500;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}'),
(324, 222, '_wp_attachment_image_alt', 'Ty Richards - do_rails'),
(325, 211, '_thumbnail_id', '222'),
(326, 225, '_edit_last', '1'),
(327, 225, '_sidebar_to_replace', 'sidebar-default'),
(328, 225, '_edit_lock', '1409677113:1'),
(338, 225, '_condition', 'post-211'),
(339, 225, '_wp_old_slug', 'pages-sidebar'),
(340, 227, '_edit_last', '1'),
(341, 227, '_edit_lock', '1409772747:1'),
(342, 227, '_yyarpp', ''),
(347, 233, '_edit_last', '1'),
(348, 233, '_edit_lock', '1409772706:1'),
(349, 233, '_yyarpp', '238,227'),
(354, 238, '_edit_last', '1'),
(355, 238, '_edit_lock', '1409772939:1'),
(357, 238, '_yyarpp', '227,233,188,98,73,42'),
(370, 233, '_wp_old_slug', 'how-to-setup-sublime-with-the-command-line'),
(380, 260, '_edit_last', '1'),
(381, 260, '_edit_lock', '1409777030:1'),
(382, 260, '_wp_page_template', 'default'),
(383, 260, '_yyarpp', ''),
(384, 264, '_edit_last', '1'),
(385, 264, '_edit_lock', '1409775850:1'),
(386, 264, '_wp_page_template', 'default'),
(387, 264, '_yyarpp', ''),
(388, 270, '_edit_last', '1'),
(389, 270, '_edit_lock', '1409792426:1'),
(390, 270, '_wp_page_template', 'default'),
(391, 270, '_yyarpp', ''),
(392, 274, '_menu_item_type', 'post_type'),
(393, 274, '_menu_item_menu_item_parent', '0'),
(394, 274, '_menu_item_object_id', '270'),
(395, 274, '_menu_item_object', 'page'),
(396, 274, '_menu_item_target', ''),
(397, 274, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(398, 274, '_menu_item_xfn', ''),
(399, 274, '_menu_item_url', ''),
(401, 5, '_yyarpp', ''),
(402, 15, '_yyarpp', ''),
(404, 105, '_yyarpp', '') ;

#
# End of data contents of table `wp_postmeta`
# --------------------------------------------------------



#
# Delete any existing table `wp_posts`
#

DROP TABLE IF EXISTS `wp_posts`;


#
# Table structure of table `wp_posts`
#

CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=293 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_posts`
#
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(2, 1, '2014-06-16 16:07:20', '2014-06-16 16:07:20', 'This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href="http://dev.dorails.com/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!', 'Journal', '', 'trash', 'closed', 'closed', '', 'journal', '', '', '2014-08-22 11:51:38', '2014-08-22 16:51:38', '', 0, 'http://dev.dorails.com/?page_id=2', 0, 'page', '', 0),
(4, 1, '2014-06-16 17:57:57', '2014-06-16 17:57:57', 'This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href="http://dev.dorails.com/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!', 'Journal', '', 'inherit', 'open', 'open', '', '2-revision-v1', '', '', '2014-06-16 17:57:57', '2014-06-16 17:57:57', '', 2, 'http://dev.dorails.com/?p=4', 0, 'revision', '', 0),
(5, 1, '2014-06-16 17:58:46', '2014-06-16 17:58:46', '<h1 style="text-align: center;">Privacy Policy</h1>\r\n\r\n<hr />\r\n\r\n<h3> What information do we collect?</h3>\r\nWe collect information from you when you register on our site, place an order, subscribe to our newsletter, respond to a survey, fill out a form or send band information.\r\n\r\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your: name, e-mail address, mailing address or phone number. You may, however, visit our site anonymously.\r\n<h3>What do we use your information for?</h3>\r\nAny of the information we collect from you may be used in one of the following ways:\r\n\r\n; To personalize your experience\r\n(your information helps us to better respond to your individual needs)\r\n\r\n; To improve our website\r\n(we continually strive to improve our website offerings based on the information and feedback we receive from you)\r\n\r\n; To improve customer service\r\n(your information helps us to more effectively respond to your customer service requests and support needs)\r\n\r\n; To administer a contest, promotion, survey or other site feature\r\n\r\n; To send periodic emails\r\n<blockquote>The email address you provide for order processing, may be used to send you information and updates pertaining to your order, in addition to receiving occasional company news, updates, related product or service information, etc.</blockquote>\r\nNote: If at any time you would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at the bottom of each email.\r\n<h3>How do we protect your information?</h3>\r\nWe implement a variety of security measures to maintain the safety of your personal information when you place an order or enter, submit, or access your personal information.\r\n\r\nWe offer the use of a secure server. All supplied sensitive/credit information is transmitted via Secure Socket Layer (SSL) technology and then encrypted into our Payment gateway providers database only to be accessible by those authorized with special access rights to such systems, and are required to?keep the information confidential.\r\n\r\nAfter a transaction, your private information (credit cards, social security numbers, financials, etc.) will not be stored on our servers.\r\n<h3>Do we use cookies?</h3>\r\nYes (Cookies are small files that a site or its service provider transfers to your computers hard drive through your Web browser (if you allow) that enables the sites or service providers systems to recognize your browser and capture and remember certain information\r\n\r\nWe use cookies to understand and save your preferences for future visits, keep track of advertisements and compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future. We may contract with third-party service providers to assist us in better understanding our site visitors. These service providers are not permitted to use the information collected on our behalf except to help us conduct and improve our business.\r\n\r\nIf you prefer, you can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies via your browser settings. Like most websites, if you turn your cookies off, some of our services may not function properly. However, you can still place orders over the telephone or by contacting customer service.\r\n<h3>Do we disclose any information to outside parties?</h3>\r\nWe do not sell, trade, or otherwise transfer to outside parties your personally identifiable information. This does not include trusted third parties who assist us in operating our website, conducting our business, or servicing you, so long as those parties agree to keep this information confidential. We may also release your information when we believe release is appropriate to comply with the law, enforce our site policies, or protect ours or others rights, property, or safety. However, non-personally identifiable visitor information may be provided to other parties for marketing, advertising, or other uses.\r\n<h3>Third party links</h3>\r\nOccasionally, at our discretion, we may include or offer third party products or services on our website. These third party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\r\n<h3>California Online Privacy Protection Act Compliance</h3>\r\nBecause we value your privacy we have taken the necessary precautions to be in compliance with the California Online Privacy Protection Act. We therefore will not distribute your personal information to outside parties without your consent.\r\n<h3>Childrens Online Privacy Protection Act Compliance</h3>\r\nWe are in compliance with the requirements of COPPA (Childrens Online Privacy Protection Act), we do not collect any information from anyone under 13 years of age. Our website, products and services are all directed to people who are at least 13 years old or older.\r\n<h3>Online Privacy Policy Only</h3>\r\nThis online privacy policy applies only to information collected through our website and not to information collected offline.\r\n<h3>Your Consent</h3>\r\nBy using our site, you consent to our web site privacy policy.\r\n<h3>Changes to our Privacy Policy</h3>\r\nIf we decide to change our privacy policy, we will post those changes on this page, and/or update the Privacy Policy modification date below.\r\n\r\nThis policy was last modified on 6/30/2014\r\n<h3>Contacting Us</h3>\r\nIf there are any questions regarding this privacy policy you may contact us using the information below.\r\n\r\nhttp://dev.dorails.com\r\n\r\nParadox\r\ninfo@paradoxsites.com', 'Privacy Policy', '', 'publish', 'closed', 'open', '', 'privacy', '', '', '2014-09-03 20:07:20', '2014-09-04 01:07:20', '', 0, 'http://dev.dorails.com/?page_id=5', 0, 'page', '', 0),
(6, 1, '2014-06-16 17:58:46', '2014-06-16 17:58:46', '', 'Privacy', '', 'inherit', 'open', 'open', '', '5-revision-v1', '', '', '2014-06-16 17:58:46', '2014-06-16 17:58:46', '', 5, 'http://dev.dorails.com/5-revision-v1/', 0, 'revision', '', 0),
(7, 1, '2014-06-16 17:59:47', '2014-06-16 17:59:47', '', 'Privacy Policy', '', 'inherit', 'open', 'open', '', '5-autosave-v1', '', '', '2014-06-16 17:59:47', '2014-06-16 17:59:47', '', 5, 'http://dev.dorails.com/5-autosave-v1/', 0, 'revision', '', 0),
(8, 1, '2014-06-16 18:00:48', '2014-06-16 18:00:48', '<h3>What information do we collect?</h3>\r\n\r\nWe collect information from you when you register on our site, place an order, subscribe to our newsletter, respond to a survey, fill out a form or send band information.\r\n\r\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your: name, e-mail address, mailing address or phone number. You may, however, visit our site anonymously.\r\n<h3>What do we use your information for?</h3>\r\nAny of the information we collect from you may be used in one of the following ways:\r\n\r\n; To personalize your experience\r\n(your information helps us to better respond to your individual needs)\r\n\r\n; To improve our website\r\n(we continually strive to improve our website offerings based on the information and feedback we receive from you)\r\n\r\n; To improve customer service\r\n(your information helps us to more effectively respond to your customer service requests and support needs)\r\n\r\n; To administer a contest, promotion, survey or other site feature\r\n\r\n; To send periodic emails\r\n<blockquote>The email address you provide for order processing, may be used to send you information and updates pertaining to your order, in addition to receiving occasional company news, updates, related product or service information, etc.</blockquote>\r\nNote: If at any time you would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at the bottom of each email.\r\n<h3>How do we protect your information?</h3>\r\nWe implement a variety of security measures to maintain the safety of your personal information when you place an order or enter, submit, or access your personal information.\r\n\r\nWe offer the use of a secure server. All supplied sensitive/credit information is transmitted via Secure Socket Layer (SSL) technology and then encrypted into our Payment gateway providers database only to be accessible by those authorized with special access rights to such systems, and are required to?keep the information confidential.\r\n\r\nAfter a transaction, your private information (credit cards, social security numbers, financials, etc.) will not be stored on our servers.\r\n<h3>Do we use cookies?</h3>\r\nYes (Cookies are small files that a site or its service provider transfers to your computers hard drive through your Web browser (if you allow) that enables the sites or service providers systems to recognize your browser and capture and remember certain information\r\n\r\nWe use cookies to understand and save your preferences for future visits, keep track of advertisements and compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future. We may contract with third-party service providers to assist us in better understanding our site visitors. These service providers are not permitted to use the information collected on our behalf except to help us conduct and improve our business.\r\n\r\nIf you prefer, you can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies via your browser settings. Like most websites, if you turn your cookies off, some of our services may not function properly. However, you can still place orders over the telephone or by contacting customer service.\r\n<h3>Do we disclose any information to outside parties?</h3>\r\nWe do not sell, trade, or otherwise transfer to outside parties your personally identifiable information. This does not include trusted third parties who assist us in operating our website, conducting our business, or servicing you, so long as those parties agree to keep this information confidential. We may also release your information when we believe release is appropriate to comply with the law, enforce our site policies, or protect ours or others rights, property, or safety. However, non-personally identifiable visitor information may be provided to other parties for marketing, advertising, or other uses.\r\n<h3>Third party links</h3>\r\nOccasionally, at our discretion, we may include or offer third party products or services on our website. These third party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\r\n<h3>California Online Privacy Protection Act Compliance</h3>\r\nBecause we value your privacy we have taken the necessary precautions to be in compliance with the California Online Privacy Protection Act. We therefore will not distribute your personal information to outside parties without your consent.\r\n<h3>Childrens Online Privacy Protection Act Compliance</h3>\r\nWe are in compliance with the requirements of COPPA (Childrens Online Privacy Protection Act), we do not collect any information from anyone under 13 years of age. Our website, products and services are all directed to people who are at least 13 years old or older.\r\n<h3>Online Privacy Policy Only</h3>\r\nThis online privacy policy applies only to information collected through our website and not to information collected offline.\r\n<h3>Your Consent</h3>\r\nBy using our site, you consent to our web site privacy policy.\r\n<h3>Changes to our Privacy Policy</h3>\r\nIf we decide to change our privacy policy, we will post those changes on this page, and/or update the Privacy Policy modification date below.\r\n\r\nThis policy was last modified on 6/30/2014\r\n<h3>Contacting Us</h3>\r\nIf there are any questions regarding this privacy policy you may contact us using the information below.\r\n\r\nhttp://dev.dorails.com\r\n\r\nParadox\r\ninfo@paradoxsites.com', 'Privacy Policy', '', 'inherit', 'open', 'open', '', '5-revision-v1', '', '', '2014-06-16 18:00:48', '2014-06-16 18:00:48', '', 5, 'http://dev.dorails.com/5-revision-v1/', 0, 'revision', '', 0),
(9, 1, '2014-06-16 18:01:52', '2014-06-16 18:01:52', '[gravityform id="1" name="Want more?" ajax="true"]', 'Subscribe', '', 'publish', 'closed', 'open', '', 'subscribe', '', '', '2014-06-17 14:30:39', '2014-06-17 19:30:39', '', 0, 'http://dev.dorails.com/?page_id=9', 0, 'page', '', 0),
(10, 1, '2014-06-16 18:01:52', '2014-06-16 18:01:52', '', 'Subscribe', '', 'inherit', 'open', 'open', '', '9-revision-v1', '', '', '2014-06-16 18:01:52', '2014-06-16 18:01:52', '', 9, 'http://dev.dorails.com/9-revision-v1/', 0, 'revision', '', 0),
(15, 1, '2014-06-16 18:23:28', '2014-06-16 23:23:28', '<h1 style="text-align: center;">Contact Us</h1>\r\n\r\n<hr />\r\n\r\n[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'publish', 'closed', 'closed', '', 'contact', '', '', '2014-09-03 20:07:03', '2014-09-04 01:07:03', '', 0, 'http://dev.dorails.com/?page_id=15', 0, 'page', '', 0),
(16, 1, '2014-06-16 18:23:28', '2014-06-16 18:23:28', '', 'Start a Project', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-06-16 18:23:28', '2014-06-16 18:23:28', '', 15, 'http://dev.dorails.com/15-revision-v1/', 0, 'revision', '', 0),
(19, 1, '2014-06-16 19:57:04', '2014-06-16 19:57:04', ' ', '', '', 'publish', 'open', 'open', '', '19', '', '', '2014-09-03 19:59:52', '2014-09-04 00:59:52', '', 0, 'http://dev.dorails.com/?p=19', 4, 'nav_menu_item', '', 0),
(20, 1, '2014-06-16 19:57:04', '2014-06-16 19:57:04', ' ', '', '', 'publish', 'open', 'open', '', '20', '', '', '2014-09-03 19:59:52', '2014-09-04 00:59:52', '', 0, 'http://dev.dorails.com/?p=20', 1, 'nav_menu_item', '', 0),
(21, 1, '2014-06-16 19:57:04', '2014-06-16 19:57:04', ' ', '', '', 'publish', 'open', 'open', '', '21', '', '', '2014-09-03 19:59:52', '2014-09-04 00:59:52', '', 0, 'http://dev.dorails.com/?p=21', 3, 'nav_menu_item', '', 0),
(35, 1, '2014-06-17 14:30:39', '2014-06-17 19:30:39', '[gravityform id="1" name="Want more?" ajax="true"]', 'Subscribe', '', 'inherit', 'open', 'open', '', '9-revision-v1', '', '', '2014-06-17 14:30:39', '2014-06-17 19:30:39', '', 9, 'http://dev.dev.dorails.com/9-revision-v1/', 0, 'revision', '', 0),
(38, 1, '2014-06-17 15:51:06', '2014-06-17 20:51:06', '', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-06-17 15:51:06', '2014-06-17 20:51:06', '', 15, 'http://dev.dev.dorails.com/15-revision-v1/', 0, 'revision', '', 0),
(39, 1, '2014-06-17 15:51:21', '2014-06-17 20:51:21', '[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-06-17 15:51:21', '2014-06-17 20:51:21', '', 15, 'http://dev.dev.dorails.com/15-revision-v1/', 0, 'revision', '', 0),
(42, 1, '2014-08-01 12:57:23', '2014-08-01 17:57:23', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git for today but I do have a <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">post about Github</a> when you are ready.\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h3>1. Open Terminal</h3>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<h3>2. Setup Git</h3>\r\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config --global user.name “Ty Richards”</pre>\r\n<pre>$ git config --global user.name   # to confirm name saved</pre>\r\n<pre>$ git config --global user.email “me@tyrichards.com”</pre>\r\n<pre>$ git config --global user.email   # to confirm email saved</pre>\r\n<h3>3. Create New Repo</h3>\r\nTo setup a Git repo for a new project or give an existing project a repo:\r\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\r\n<pre>$ pwd   # verify that you are in that directory</pre>\r\n<pre>$ git init  # creates a new repo</pre>\r\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\r\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\r\n<h3>4. Do Stuff</h3>\r\nAfter every task you do you can:\r\n<pre>$ git status # to see what is being tracked and modified</pre>\r\n<pre>$ git add .</pre>\r\n<pre>$ git commit -am “Build initial scaffolding”</pre>\r\nand repeat\r\n\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'publish', 'open', 'open', '', 'get-going-with-git', '', '', '2014-08-26 10:26:07', '2014-08-26 15:26:07', '', 0, 'http://dev.dorails.com/?p=42', 0, 'post', '', 3),
(43, 1, '2014-08-01 12:57:23', '2014-08-01 17:57:23', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<ol>\r\n	<li>Find the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened</li>\r\n	<li>To setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n$ git config —global user.name “Ty Richards”\r\n$ git config —global user.name   # to confirm name saved\r\n$ git config —global user.email “me@tyrichards.com”\r\n$ git config —global user.email   # to confirm email saved</li>\r\n	<li>To setup a Git repo for a new project or give an existing project a repo:\r\n$ cd ~/Sites/new_project  # travel to your new project folder in terminal\r\n$ pwd   # verify that you are in that directory\r\n$ git init  # creates a new repo\r\n$ git status # to see what files are being tracked\r\n$ git add .  # adds all files in current folder)\r\n$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</li>\r\n	<li>After every task you do you can:\r\n$ git status\r\n$ git add .\r\n$ git commit -am “Build initial scaffolding”\r\nrepeat</li>\r\n</ol>\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-01 12:57:23', '2014-08-01 17:57:23', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(44, 1, '2014-08-02 01:06:14', '2014-08-02 06:06:14', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<ol>\r\n	<li>Find the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened</li>\r\n	<li>To setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config —global user.name “Ty Richards”\r\n$ git config —global user.name   # to confirm name saved\r\n$ git config —global user.email “me@tyrichards.com”\r\n$ git config —global user.email   # to confirm email saved</li></pre>\r\n	<li>To setup a Git repo for a new project or give an existing project a repo:\r\n$ cd ~/Sites/new_project  # travel to your new project folder in terminal\r\n$ pwd   # verify that you are in that directory\r\n$ git init  # creates a new repo\r\n$ git status # to see what files are being tracked\r\n$ git add .  # adds all files in current folder)\r\n$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</li>\r\n	<li>After every task you do you can:\r\n$ git status\r\n$ git add .\r\n$ git commit -am “Build initial scaffolding”\r\nrepeat</li>\r\n</ol>\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-02 01:06:14', '2014-08-02 06:06:14', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(45, 1, '2014-08-26 10:25:15', '2014-08-26 15:25:15', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\n\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\n\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git for today but I do have a post about Github when you are ready.\n\nHere’s a fast track to getting setup with Git:\n<h3>1. Open Terminal</h3>\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\n<h3>2. Setup Git</h3>\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\n<pre>$ git config --global user.name “Ty Richards”</pre>\n<pre>$ git config --global user.name   # to confirm name saved</pre>\n<pre>$ git config --global user.email “me@tyrichards.com”</pre>\n<pre>$ git config --global user.email   # to confirm email saved</pre>\n<h3>3. Create New Repo</h3>\nTo setup a Git repo for a new project or give an existing project a repo:\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\n<pre>$ pwd   # verify that you are in that directory</pre>\n<pre>$ git init  # creates a new repo</pre>\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\n<h3>4. Do Stuff</h3>\nAfter every task you do you can:\n<pre>$ git status # to see what is being tracked and modified</pre>\n<pre>$ git add .</pre>\n<pre>$ git commit -am “Build initial scaffolding”</pre>\nand repeat\n\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-autosave-v1', '', '', '2014-08-26 10:25:15', '2014-08-26 15:25:15', '', 42, 'http://dev.dorails.com/42-autosave-v1/', 0, 'revision', '', 0),
(46, 1, '2014-08-02 01:07:24', '2014-08-02 06:07:24', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<ol>\r\n	<li>Find the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened</li>\r\n	<li>To setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre><code class="html">$ git config —global user.name “Ty Richards”\r\n$ git config —global user.name   # to confirm name saved\r\n$ git config —global user.email “me@tyrichards.com”\r\n$ git config —global user.email   # to confirm email saved</li></code></pre>\r\n	<li>To setup a Git repo for a new project or give an existing project a repo:\r\n$ cd ~/Sites/new_project  # travel to your new project folder in terminal\r\n$ pwd   # verify that you are in that directory\r\n$ git init  # creates a new repo\r\n$ git status # to see what files are being tracked\r\n$ git add .  # adds all files in current folder)\r\n$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</li>\r\n	<li>After every task you do you can:\r\n$ git status\r\n$ git add .\r\n$ git commit -am “Build initial scaffolding”\r\nrepeat</li>\r\n</ol>\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-02 01:07:24', '2014-08-02 06:07:24', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(47, 1, '2014-08-02 01:08:46', '2014-08-02 06:08:46', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h2>1. Open Terminal</h2>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<ol>\r\n	<li>To setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config —global user.name “Ty Richards”\r\n$ git config —global user.name   # to confirm name saved\r\n$ git config —global user.email “me@tyrichards.com”\r\n$ git config —global user.email   # to confirm email saved</pre>\r\n</li>\r\n	<li>To setup a Git repo for a new project or give an existing project a repo:\r\n$ cd ~/Sites/new_project  # travel to your new project folder in terminal\r\n$ pwd   # verify that you are in that directory\r\n$ git init  # creates a new repo\r\n$ git status # to see what files are being tracked\r\n$ git add .  # adds all files in current folder)\r\n$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</li>\r\n	<li>After every task you do you can:\r\n$ git status\r\n$ git add .\r\n$ git commit -am “Build initial scaffolding”\r\nrepeat</li>\r\n</ol>\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-02 01:08:46', '2014-08-02 06:08:46', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(48, 1, '2014-08-02 01:13:53', '2014-08-02 06:13:53', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h2>1. Open Terminal</h2>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<h2>2. Setup Git</h2>\r\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n\r\n<pre>\r\n$ git config —global user.name “Ty Richards”\r\n\r\n$ git config —global user.name   # to confirm name saved\r\n\r\n$ git config —global user.email “me@tyrichards.com”\r\n\r\n$ git config —global user.email   # to confirm email saved\r\n</pre>\r\n\r\n<h2>3. Create New Repo</h2>\r\nTo setup a Git repo for a new project or give an existing project a repo:\r\n\r\n<pre>\r\n$ cd ~/Sites/new_project  # travel to your new project folder in terminal\r\n$ pwd   # verify that you are in that directory\r\n$ git init  # creates a new repo\r\n$ git status # to see what files are being tracked\r\n$ git add .  # adds all files in current folder)\r\n$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)\r\n</pre>\r\n\r\n<h2>4. Do Stuff</h2>\r\nAfter every task you do you can:\r\n<pre>\r\n$ git status # to see what is being tracked and modified\r\n$ git add .\r\n$ git commit -am “Build initial scaffolding”\r\nrepeat\r\n</pre>\r\n\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-02 01:13:53', '2014-08-02 06:13:53', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(49, 1, '2014-08-02 01:29:23', '2014-08-02 06:29:23', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h2>1. Open Terminal</h2>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<h2>2. Setup Git</h2>\r\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config —global user.name “Ty Richards”</pre>\r\n<pre>$ git config —global user.name   # to confirm name saved</pre>\r\n<pre>$ git config —global user.email “me@tyrichards.com”</pre>\r\n<pre>$ git config —global user.email   # to confirm email saved</pre>\r\n<h2>3. Create New Repo</h2>\r\nTo setup a Git repo for a new project or give an existing project a repo:\r\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\r\n<pre>$ pwd   # verify that you are in that directory</pre>\r\n<pre>$ git init  # creates a new repo</pre>\r\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\r\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\r\n<h2>4. Do Stuff</h2>\r\nAfter every task you do you can:\r\n<pre>$ git status # to see what is being tracked and modified</pre>\r\n<pre>$ git add .</pre>\r\n<pre>$ git commit -am “Build initial scaffolding”</pre>\r\nand repeat\r\n\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-02 01:29:23', '2014-08-02 06:29:23', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(50, 1, '2014-08-04 09:21:56', '2014-08-04 14:21:56', '<hr />\r\n\r\n&nbsp;\r\n\r\n[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-08-04 09:21:56', '2014-08-04 14:21:56', '', 15, 'http://dev.dorails.com/15-revision-v1/', 0, 'revision', '', 0),
(51, 1, '2014-08-04 23:15:15', '2014-08-05 04:15:15', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\n\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\n\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\n\nHere’s a fast track to getting setup with Git:\n<h2>1. Open Terminal</h2>\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\n<h2>2. Setup Git</h2>\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\n<pre>$ git config --global user.name “Ty Richards”</pre>\n<pre>$ git config --global user.name   # to confirm name saved</pre>\n<pre>$ git config --global user.email “me@tyrichards.com”</pre>\n<pre>$ git config --global user.email   # to confirm email saved</pre>\n<h2>3. Create New Repo</h2>\nTo setup a Git repo for a new project or give an existing project a repo:\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\n<pre>$ pwd   # verify that you are in that directory</pre>\n<pre>$ git init  # creates a new repo</pre>\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\n<h2>4. Do Stuff</h2>\nAfter every task you do you can:\n<pre>$ git status # to see what is being tracked and modified</pre>\n<pre>$ git add .</pre>\n<pre>$ git commit -am “Build initial scaffolding”</pre>\nand repeat\n\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-04 23:15:15', '2014-08-05 04:15:15', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(52, 1, '2014-08-05 10:21:07', '2014-08-05 15:21:07', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes\r\n<pre>&lt;a href=“#” class=“btn btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\nNow you can go into your rails views and add styled <a href="http://getbootstrap.com/components/#navbar" target="_blank">navbars</a>, <a href="http://getbootstrap.com/css/#buttons" target="_blank">buttons</a>, <a href="http://getbootstrap.com/css/#forms" target="_blank">forms</a>, and <a href="http://getbootstrap.com/components/#jumbotron" target="_blank">jumbotrons</a> with little effort. Bootstrap is also extremely helpful with a <a href="http://getbootstrap.com/css/#grid" target="_blank">responsive grid</a> that works right out of the box. If you are new to Bootstrap, checkout their <a href="http://getbootstrap.com/getting-started/#examples" target="_blank">examples</a>. They can be helpful for getting started.\r\n\r\nIf I am throwing something quick together or working on a high-end custom-designed site, I use Bootstrap &amp; Sass as a starting point because it is so rapid and moldable.\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nHere\'s where the magic happens. In your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\n\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. There are also many more tips for Bootstrap. I could do a whole set of posts on the responsive grid and how to use columns the right way.\r\n\r\nMore on this later. But this is all you need to get going. Go kick some front-end ass!', 'Kick front-end ass with Bootstrap & Sass', '', 'publish', 'open', 'open', '', 'kick-front-end-ass-with-bootstrap-sass', '', '', '2014-08-26 10:24:07', '2014-08-26 15:24:07', '', 0, 'http://dev.dorails.com/?p=52', 0, 'post', '', 0),
(53, 1, '2014-08-05 09:06:26', '2014-08-05 14:06:26', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish just this and kick front-end ass.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<ol>\r\n	<li>\r\n<h3>Add Gem to your Gemfile</h3>\r\nGo to your rails app directory and open your Gemfile and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # whatever the latest version is</pre>\r\n</li>\r\n	<li>\r\n<h3>Always run bundle install in terminal after you add a new gem:</h3>\r\n<pre>$ bundle install</pre>\r\n</li>\r\n	<li>\r\n<h3>Create a new SCSS (SASS) file in /app/assets/stylesheets/</h3>\r\napp/assets/stylesheets/style.css.scss\r\n<pre>".css.scss" extension tells rails to compile the scss to css</pre>\r\n</li>\r\n	<li>\r\n<h3>Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n</li>\r\n	<li>\r\n<h3>Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query</pre>\r\n<pre>//= require jquery_ujs</pre>\r\n<pre>//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query</pre>\r\n<pre>…</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...</pre>\r\n<pre>&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;</pre>\r\n<pre>...</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n</li>\r\n	<li>\r\n<h3>In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<code>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n</span>$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</code>\r\n\r\nFind all the variables here: <span style="color: #042eee;"><span style="text-decoration: underline;">http://getbootstrap.com/customize/#variables-basics</span></span>\r\nI use these colors as a starting point: flatuicolor.com\r\nKeep in mind this will get you jump started but there are definitely more sophisticated SASS setups that will keep your variables and style code separate. More on this later. But this will get you started with Bootstrap &amp; Sass. Go get ‘em!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:06:26', '2014-08-05 14:06:26', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(54, 1, '2014-08-05 09:10:33', '2014-08-05 14:10:33', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<ol>\r\n	<li>\r\n<h3>Add bootstrap-sass to your Gemfile</h3>\r\nGo to your rails app directory and open your Gemfile and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # whatever the latest version is</pre>\r\n</li>\r\n	<li>\r\n<h3>Always run bundle install in terminal after you add a new gem:</h3>\r\n<pre>$ bundle install</pre>\r\n</li>\r\n	<li>\r\n<h3>Create a new SCSS (SASS) file in /app/assets/stylesheets/</h3>\r\napp/assets/stylesheets/style.css.scss\r\n<pre>".css.scss" extension tells rails to compile the scss to css</pre>\r\n</li>\r\n	<li>\r\n<h3>Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n</li>\r\n	<li>\r\n<h3>Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query</pre>\r\n<pre>//= require jquery_ujs</pre>\r\n<pre>//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query</pre>\r\n<pre>…</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...</pre>\r\n<pre>&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;</pre>\r\n<pre>...</pre>\r\n</li>\r\n	<li>\r\n<h3>Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n</li>\r\n	<li>\r\n<h3>In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: <span style="color: #042eee;"><span style="text-decoration: underline;">http://getbootstrap.com/customize/#variables-basics</span></span>\r\nI use these colors as a starting point: http://flatuicolor.com\r\nKeep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!</li>\r\n</ol>', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:10:33', '2014-08-05 14:10:33', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(55, 1, '2014-08-05 09:11:47', '2014-08-05 14:11:47', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h3>1. Open Terminal</h3>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<h3>2. Setup Git</h3>\r\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config --global user.name “Ty Richards”</pre>\r\n<pre>$ git config --global user.name   # to confirm name saved</pre>\r\n<pre>$ git config --global user.email “me@tyrichards.com”</pre>\r\n<pre>$ git config --global user.email   # to confirm email saved</pre>\r\n<h3>3. Create New Repo</h3>\r\nTo setup a Git repo for a new project or give an existing project a repo:\r\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\r\n<pre>$ pwd   # verify that you are in that directory</pre>\r\n<pre>$ git init  # creates a new repo</pre>\r\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\r\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\r\n<h3>4. Do Stuff</h3>\r\nAfter every task you do you can:\r\n<pre>$ git status # to see what is being tracked and modified</pre>\r\n<pre>$ git add .</pre>\r\n<pre>$ git commit -am “Build initial scaffolding”</pre>\r\nand repeat\r\n\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-05 09:11:47', '2014-08-05 14:11:47', '', 42, 'http://dev.dorails.com/42-revision-v1/', 0, 'revision', '', 0),
(56, 1, '2014-08-05 09:15:36', '2014-08-05 14:15:36', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add bootstrap-sass to your Gemfile</h3>\r\nGo to your rails app directory and open your Gemfile and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # whatever the latest version is</pre>\r\n<h3>Always run bundle install in terminal after you add a new gem:</h3>\r\n<pre>$ bundle install</pre>\r\n<h3>2. Create a new SCSS (SASS) file in /app/assets/stylesheets/</h3>\r\napp/assets/stylesheets/style.css.scss\r\n<pre>".css.scss" extension tells rails to compile the scss to css</pre>\r\n<h3>3. Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>4. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n<h3>5. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n<h3>In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: http://getbootstrap.com/customize/#variables-basics\r\nI use these colors as a starting point: http://flatuicolor.com\r\n\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:15:36', '2014-08-05 14:15:36', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(57, 1, '2014-08-05 09:31:36', '2014-08-05 14:31:36', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/</pre>\r\n<pre>$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file style.css.scss here:  /app/assets/stylesheets/style.css.scss\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n<h3>9. In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: http://getbootstrap.com/customize/#variables-basics\r\nI use these colors as a starting point: http://flatuicolor.com\r\n\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:31:36', '2014-08-05 14:31:36', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(58, 1, '2014-08-05 09:32:07', '2014-08-05 14:32:07', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/</pre>\r\n<pre>$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file style.css.scss here:  /app/assets/stylesheets/style.css.scss\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n<h3>9. In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: http://getbootstrap.com/customize/#variables-basics\r\nI use these colors as a starting point: http://flatuicolor.com\r\n\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:32:07', '2014-08-05 14:32:07', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(59, 1, '2014-08-05 09:33:23', '2014-08-05 14:33:23', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/</pre>\r\n<pre>$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file style.css.scss here:  /app/assets/stylesheets/style.css.scss\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Add line to top of the new style.css file</h3>\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window</pre>\r\n<pre>$ ctrl-C # if you have rails server running currently</pre>\r\n<pre>$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to &lt;head&gt; tags</h3>\r\nOpen /app/views/layouts/application.html.erb\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n<h3>9. In your style.css.scss file you can also add SASS variables for even quicker changes</h3>\r\nVariables\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: http://getbootstrap.com/customize/#variables-basics\r\nI use these colors as a starting point: http://flatuicolor.com\r\n\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:33:23', '2014-08-05 14:33:23', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(60, 1, '2014-08-05 09:37:54', '2014-08-05 14:37:54', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\n<pre>becomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\n<h3>9. In your <code>style.css.scss</code> file you can also add Sass variables for even quicker development</h3>\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\nFind all the variables here: http://getbootstrap.com/customize/#variables-basics\r\nI use these colors as a starting point: http://flatuicolor.com\r\n\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:37:54', '2014-08-05 14:37:54', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(61, 1, '2014-08-05 09:48:22', '2014-08-05 14:48:22', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb and replace viewport meta tags with this:</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\nNote: if you use the bootstrap list of variables, be sure to replace the @ with $. @ is for Less and $ is for Sass.</li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling with Bootstrap + Sass in Rails', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:48:22', '2014-08-05 14:48:22', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(62, 1, '2014-08-05 09:50:32', '2014-08-05 14:50:32', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS. With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb and replace viewport meta tags with this:</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:50:32', '2014-08-05 14:50:32', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(63, 1, '2014-08-05 09:55:26', '2014-08-05 14:55:26', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With Bootstrap &amp; Sass you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; SASS in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your Gemfile and add:\r\n/Gemfile\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb and replace viewport meta tags with this:</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:55:26', '2014-08-05 14:55:26', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(64, 1, '2014-08-05 09:57:18', '2014-08-05 14:57:18', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\nNote (again): <code>.css.scss</code> double extension tells rails to compile the scss to css\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb and replace viewport meta tags with this:</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:57:18', '2014-08-05 14:57:18', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(65, 1, '2014-08-05 09:58:10', '2014-08-05 14:58:10', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb and replace viewport meta tags with this:</code>\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:58:10', '2014-08-05 14:58:10', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(66, 1, '2014-08-05 09:59:23', '2014-08-05 14:59:23', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 09:59:23', '2014-08-05 14:59:23', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(67, 1, '2014-08-05 10:01:09', '2014-08-05 15:01:09', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...</pre>\r\n<pre>&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:01:09', '2014-08-05 15:01:09', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(68, 1, '2014-08-05 10:01:51', '2014-08-05 15:01:51', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btw btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Speed up styling in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:01:51', '2014-08-05 15:01:51', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(69, 1, '2014-08-05 10:12:32', '2014-08-05 15:12:32', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btn btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nNow you can go into your rails views and add styled <a href="http://getbootstrap.com/components/#navbar" target="_blank">navbars</a>, <a href="http://getbootstrap.com/css/#buttons" target="_blank">buttons</a>, <a href="http://getbootstrap.com/css/#forms" target="_blank">forms</a>, and <a href="http://getbootstrap.com/components/#jumbotron" target="_blank">jumbotrons</a> with little effort. Bootstrap is also extremely helpful with a <a href="http://getbootstrap.com/css/#grid" target="_blank">responsive grid</a> that works right out of the box. If you are new to Bootstrap, checkout their <a href="http://getbootstrap.com/getting-started/#examples" target="_blank">examples</a>. They can be helpful for getting started.\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. There are also many more tips for Bootstrap. I could do a whole set of posts on the responsive grid and how to use columns the right way. More on this later. This is all you need to get going. Go kick some front-end ass!', 'Kick Front-end Ass in Rails with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:12:32', '2014-08-05 15:12:32', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(70, 1, '2014-08-05 10:15:07', '2014-08-05 15:15:07', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes &lt;a href=“#” class=“btn btn-primary"&gt;Learn More&lt;/a&gt;\r\n\r\nNow you can go into your rails views and add styled <a href="http://getbootstrap.com/components/#navbar" target="_blank">navbars</a>, <a href="http://getbootstrap.com/css/#buttons" target="_blank">buttons</a>, <a href="http://getbootstrap.com/css/#forms" target="_blank">forms</a>, and <a href="http://getbootstrap.com/components/#jumbotron" target="_blank">jumbotrons</a> with little effort. Bootstrap is also extremely helpful with a <a href="http://getbootstrap.com/css/#grid" target="_blank">responsive grid</a> that works right out of the box. If you are new to Bootstrap, checkout their <a href="http://getbootstrap.com/getting-started/#examples" target="_blank">examples</a>. They can be helpful for getting started.\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. There are also many more tips for Bootstrap. I could do a whole set of posts on the responsive grid and how to use columns the right way.\r\n\r\nMore on this later. But this is all you need to get going. Go kick some front-end ass!', 'Kick front-end ass with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:15:07', '2014-08-05 15:15:07', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(71, 1, '2014-08-05 10:15:46', '2014-08-05 15:15:46', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes\r\n<pre>&lt;a href=“#” class=“btn btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\nNow you can go into your rails views and add styled <a href="http://getbootstrap.com/components/#navbar" target="_blank">navbars</a>, <a href="http://getbootstrap.com/css/#buttons" target="_blank">buttons</a>, <a href="http://getbootstrap.com/css/#forms" target="_blank">forms</a>, and <a href="http://getbootstrap.com/components/#jumbotron" target="_blank">jumbotrons</a> with little effort. Bootstrap is also extremely helpful with a <a href="http://getbootstrap.com/css/#grid" target="_blank">responsive grid</a> that works right out of the box. If you are new to Bootstrap, checkout their <a href="http://getbootstrap.com/getting-started/#examples" target="_blank">examples</a>. They can be helpful for getting started.\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nIn your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. There are also many more tips for Bootstrap. I could do a whole set of posts on the responsive grid and how to use columns the right way.\r\n\r\nMore on this later. But this is all you need to get going. Go kick some front-end ass!', 'Kick front-end ass with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:15:46', '2014-08-05 15:15:46', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0),
(72, 1, '2014-08-05 10:19:32', '2014-08-05 15:19:32', 'Are you new to web development/design and need a quick and easy starting point for your front-end styling so you can hit the ground running? Or are you familiar with Twitter Bootstrap but having trouble get it up and running in Rails? What if you could speed up front-end styling by 5-10x? Imagine you could have a nice looking starting point for the style of your web app with little to no work. What if you could customize colors, fonts, button sizes, padding sizes, background colors, link colors, add icons, responsive behavior etc, etc. within seconds and write little to no CSS? With <a href="http://getbootstrap.com" target="_blank">Bootstrap</a> &amp; <a href="http://sass-lang.com/" target="_blank">Sass</a> you can accomplish this and a lot more.\r\n\r\nFollow these quick steps and you’ll be up and running with Bootstrap &amp; Sass in no time:\r\n<h3>1. Add Gem</h3>\r\nGo to your rails app directory, open your <code>/Gemfile</code> and add:\r\n<pre>gem ‘bootstrap-sass’, ‘~&gt; 3.2.0’ # or whatever the latest version is</pre>\r\n<h3>2. Bundle Install</h3>\r\nAlways run bundle install in terminal after you add a new gem to install it\r\n\r\nIn command-line\r\n<pre>$ cd /your/rails/project/path/\r\n$ bundle install</pre>\r\n<h3>3. Create Style File</h3>\r\nCreate the file <code>style.css.scss</code> here:\r\n<code>/app/assets/stylesheets/style.css.scss</code>\r\n\r\n<small>Note: <code>.sass</code> and <code>.scss</code> are both considered Sass files but <code>.scss</code> files work with the newer syntax that you will likely want to stick with.</small>\r\n\r\n<small>Note (again): <code>.css.scss</code> double extension tells rails to compile the scss to css</small>\r\n<h3>4. Import Bootstrap CSS</h3>\r\nAdd line to top of the new <code>style.css.scss</code> file\r\n<pre>@import ‘bootstrap’; #adds bootstrap styles to the file</pre>\r\n<h3>5. Restart Rails Server</h3>\r\n<pre>cd /your/project/directory/ # or go to your current rails server window\r\n$ ctrl-C # if you have rails server running currently\r\n$ rails server</pre>\r\n<h3>6. Add Bootstrap Javascript</h3>\r\nOpen /app/assets/javascripts/application.js and add:\r\n<pre>//= require query\r\n//= require jquery_ujs\r\n//= require bootstrap  # note that it’s important for bootstrap to be required AFTER query\r\n…</pre>\r\n<h3>7. Add Viewport to <code>&lt;head&gt;</code> tags</h3>\r\nOpen <code>/app/views/layouts/application.html.erb</code> and replace viewport meta tags with this:\r\n<pre>&lt;head&gt;\r\n...\r\n&lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0”&gt;\r\n...\r\n&lt;/head&gt;</pre>\r\n<h3>8. Add Bootstrap Classes</h3>\r\nYou can now add bootstrap elements to pages by adding css classes to your elements to change the style\r\n<pre>&lt;%= link_to “Learn More”, “#yourlink”, class: “btn btn-primary” %&gt; # makes the link a btn with the main brand color</pre>\r\nbecomes\r\n<pre>&lt;a href=“#” class=“btn btn-primary"&gt;Learn More&lt;/a&gt;</pre>\r\nNow you can go into your rails views and add styled <a href="http://getbootstrap.com/components/#navbar" target="_blank">navbars</a>, <a href="http://getbootstrap.com/css/#buttons" target="_blank">buttons</a>, <a href="http://getbootstrap.com/css/#forms" target="_blank">forms</a>, and <a href="http://getbootstrap.com/components/#jumbotron" target="_blank">jumbotrons</a> with little effort. Bootstrap is also extremely helpful with a <a href="http://getbootstrap.com/css/#grid" target="_blank">responsive grid</a> that works right out of the box. If you are new to Bootstrap, checkout their <a href="http://getbootstrap.com/getting-started/#examples" target="_blank">examples</a>. They can be helpful for getting started.\r\n\r\nIf I am throwing something quick together or working on a high-end custom-designed site, I use Bootstrap &amp; Sass as a starting point because it is so rapid and moldable.\r\n\r\nThe <a href="http://getbootstrap.com" target="_blank">Twitter Bootstrap site</a> has a complete list of classes &amp; documentation\r\n<h3>9. Add Bootstrap Variables</h3>\r\nHere\'s where the magic happens. In your <code>style.css.scss</code> file you can also add Sass variables for even quicker development\r\n\r\nVariables:\r\n<pre>$brand-primary: #2ecc71\r\n$brand-success: #5cb85c;\r\n$body-bg: #222222;\r\n$text-color: #95a5a6;\r\n$link-color:  $brand-primary;\r\n@import ‘bootstrap’; # variables must be above main bootstrap import</pre>\r\n<ul>\r\n	<li><strong>Variables:</strong> You can use this list of all <a href="http://getbootstrap.com/customize/#variables-basics" target="_blank">Bootstrap variables</a>\r\n<small>Note: if you use the bootstrap list of variables, be sure to replace the <code>@</code> with <code>$</code>. <code>@</code> is for Less and <code>$</code> is for Sass.</small></li>\r\n	<li><strong>Colors:</strong> I use <a href="http://flatuicolor.com" target="_blank">Flat UI Colors</a> as a starting point for color scheme and go from there.</li>\r\n</ul>\r\nThat\'s it!  Keep in mind this will get you jump started but there are definitely more sophisticated Sass setups that will keep your variables and style code separate and more organized. There are also many more tips for Bootstrap. I could do a whole set of posts on the responsive grid and how to use columns the right way.\r\n\r\nMore on this later. But this is all you need to get going. Go kick some front-end ass!', 'Kick front-end ass with Bootstrap & Sass', '', 'inherit', 'open', 'open', '', '52-revision-v1', '', '', '2014-08-05 10:19:32', '2014-08-05 15:19:32', '', 52, 'http://dev.dorails.com/52-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(73, 1, '2014-08-06 12:19:46', '2014-08-06 17:19:46', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create SSH Keys</h3>\r\nFollow Github instructions <a href="https://help.github.com/articles/generating-ssh-keys" target="_blank">here</a>.\r\n<h3>5. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>6. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\r\n<h3>7. Do the Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>8. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\r\n\r\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Hop on the Github bandwagon', '', 'publish', 'open', 'open', '', 'hop-on-the-github-bandwagon', '', '', '2014-08-26 10:23:00', '2014-08-26 15:23:00', '', 0, 'http://dev.dorails.com/?p=73', 0, 'post', '', 0),
(74, 1, '2014-08-06 09:38:26', '2014-08-06 14:38:26', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first.\r\n<h3>2. Make initial commit</h3>\r\nFind an existing project that you want to put on Github or create a new folder for an upcoming project.\r\n\r\n$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message\r\n\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click "New repository" from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose Public or Private.\r\nStick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</li>\r\n	<li>I usually leave the "Initialize this repo with a README" unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Click "Create Repository"</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the "Push an existing repository from the command line" section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ul>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\nNote: Best practice for commits is to write in present tense and keep it short\r\n</li>\r\n	<li>\r\n<pre>$ git push</pre>\r\nPushes to Github repo\r\n</li>\r\n	<li>Repeat</li>\r\n</ul>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:38:26', '2014-08-06 14:38:26', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(75, 1, '2014-08-06 09:38:29', '2014-08-06 14:38:29', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first.\r\n<h3>2. Make initial commit</h3>\r\nFind an existing project that you want to put on Github or create a new folder for an upcoming project.\r\n\r\n$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message\r\n\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click "New repository" from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose Public or Private.\r\nStick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</li>\r\n	<li>I usually leave the "Initialize this repo with a README" unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Click "Create Repository"</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the "Push an existing repository from the command line" section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ul>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\nNote: Best practice for commits is to write in present tense and keep it short</li>\r\n	<li>\r\n<pre>$ git push</pre>\r\nPushes to Github repo</li>\r\n	<li>Repeat</li>\r\n</ul>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:38:29', '2014-08-06 14:38:29', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(76, 1, '2014-08-06 09:40:14', '2014-08-06 14:40:14', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n\r\n$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message\r\n\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click "New repository" from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose Public or Private.\r\nStick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</li>\r\n	<li>I usually leave the "Initialize this repo with a README" unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Click "Create Repository"</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the "Push an existing repository from the command line" section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ul>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\nNote: Best practice for commits is to write in present tense and keep it short</li>\r\n	<li>\r\n<pre>$ git push</pre>\r\nPushes to Github repo</li>\r\n	<li>Repeat</li>\r\n</ul>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:40:14', '2014-08-06 14:40:14', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(77, 1, '2014-08-06 09:40:39', '2014-08-06 14:40:39', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click "New repository" from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose Public or Private.\r\nStick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</li>\r\n	<li>I usually leave the "Initialize this repo with a README" unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Click "Create Repository"</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the "Push an existing repository from the command line" section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ul>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\nNote: Best practice for commits is to write in present tense and keep it short</li>\r\n	<li>\r\n<pre>$ git push</pre>\r\nPushes to Github repo</li>\r\n	<li>Repeat</li>\r\n</ul>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:40:39', '2014-08-06 14:40:39', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(78, 1, '2014-08-06 09:44:28', '2014-08-06 14:44:28', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ul>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ul>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:44:28', '2014-08-06 14:44:28', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(79, 1, '2014-08-06 09:45:18', '2014-08-06 14:45:18', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:TyRichards/test_repo.git\r\ngit push -u origin master</pre>\r\n<h3>6. Done!</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 09:45:18', '2014-08-06 14:45:18', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(80, 1, '2014-08-06 10:00:48', '2014-08-06 15:00:48', '', 'Git-Clone', '', 'inherit', 'open', 'open', '', 'git-clone', '', '', '2014-08-06 10:00:48', '2014-08-06 15:00:48', '', 73, 'http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg', 0, 'attachment', 'image/jpeg', 0),
(81, 1, '2014-08-06 10:01:39', '2014-08-06 15:01:39', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\n<h3>6. The Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy/paste the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="alignnone size-medium wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="300" height="183" /></a>\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nCongrats you\'re now a <em>modern</em> developer living in the 21st century! You can now keep your code in a repo, share what you are working on with others, easily collaborate,', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 10:01:39', '2014-08-06 15:01:39', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(82, 1, '2014-08-06 10:04:48', '2014-08-06 15:04:48', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\n<h3>6. The Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nCongrats you\'re now a <em>modern</em> developer living in the 21st century! You can now keep your code in a repo, share what you are working on with others, easily collaborate,', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 10:04:48', '2014-08-06 15:04:48', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(83, 1, '2014-08-06 10:06:20', '2014-08-06 15:06:20', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\n<h3>6. The Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nCongrats you\'re now a <em>modern</em> developer living in the 21st century! You can now keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans.', 'Get going with Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 10:06:20', '2014-08-06 15:06:20', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(84, 1, '2014-08-06 10:07:26', '2014-08-06 15:07:26', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\n<h3>6. The Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nCongrats you\'re now a <em>modern</em> developer living in the 21st century! You can now keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans.', 'Get out of the cave and onto Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 10:07:26', '2014-08-06 15:07:26', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(85, 1, '2014-08-06 10:20:42', '2014-08-06 15:20:42', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\r\n<h3>6. Do the Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\r\n\r\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Get out of the cave and onto Github', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 10:20:42', '2014-08-06 15:20:42', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(86, 1, '2014-08-08 16:35:21', '2014-08-08 21:35:21', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\n\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\n\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\n\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\n<h3>1. Setup Git</h3>\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\n<h3>2. Make initial commit</h3>\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\n$ git init # create local repository\n$ git add . # add all files in the directory\n$ git commit -am "Initial Commit" # commit with a message</pre>\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\n<h3>3. Start Github account</h3>\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\n<h3>4. Create SSH Keys</h3>\nFollow Github instructions here: https://help.github.com/articles/generating-ssh-keys\n<h3>4. Create a new repo</h3>\nOnce you are setup and logged in:\n<ul>\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\n	<li>Click <code>New repository</code> from the dropdown</li>\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\n	<li>Give your project a description</li>\n	<li>Choose <code>Public</code> or <code>Private</code>.\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\n	<li>Then click the <code>Create Repository</code> Button</li>\n</ul>\n<h3>5. Push Local Git Repo to Github Repo</h3>\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\ngit push -u origin master</pre>\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\n<h3>6. Do the Git Jive</h3>\nNow you can work on your project, make changes, and do the Git dance.\n<ol>\n	<li>Work on stuff</li>\n	<li>\n<pre>$ git add .</pre>\n</li>\n	<li>\n<pre>$ git commit -am "Create Navbar"</pre>\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\n	<li>\n<pre>$ git push</pre>\n<small>Pushes to Github repo</small></li>\n	<li>Repeat</li>\n</ol>\n<h3>7. Bonus</h3>\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\n\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\n\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\n<pre>$ cd /path/to/new/project/destination/\n$ git clone git@github.com:MyAccount/my_project.git</pre>\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\n\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Hop on the Github bandwagon', '', 'inherit', 'open', 'open', '', '73-autosave-v1', '', '', '2014-08-08 16:35:21', '2014-08-08 21:35:21', '', 73, 'http://dev.dorails.com/73-autosave-v1/', 0, 'revision', '', 0),
(87, 1, '2014-08-06 12:23:21', '2014-08-06 17:23:21', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>5. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\r\n<h3>6. Do the Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>7. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\r\n\r\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Hop on the Github bandwagon', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-06 12:23:21', '2014-08-06 17:23:21', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(88, 1, '2014-08-07 10:33:57', '2014-08-07 15:33:57', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well you have no excuse now, time\'s a-wastin\'. Here are 6 amazing resources for learning Rails that you\'ve gotta checkout. You could learn them in this order or start with the most interesting one.\r\n<h3>1. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>2. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\r\n<h3>JFDI</h3>\r\nThere they are. Go get \'em tiger! You\'ve got no excuses now. You may even want to consider doing these in that order depending on your personality/preferences. I like this order because you can get it installed, get familiar with Rails, build a quick win, build a not-so-quick win, learn good programming concepts/syntax and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a> develop a daily discipline for yourself. Don\'t waste any time, just look yourself in the mirror and say <a href="https://www.google.com/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=jfdi" target="_blank">jfdi</a>.', '6 ways to learn Ruby on Rails (JFDI)', '', 'publish', 'open', 'open', '', 'jfdi-6-ways-to-learn-ruby-on-rails', '', '', '2014-08-07 10:43:42', '2014-08-07 15:43:42', '', 0, 'http://dev.dorails.com/?p=88', 0, 'post', '', 2),
(89, 1, '2014-08-06 22:39:00', '2014-08-07 03:39:00', 'P\r\n\r\nD\r\n\r\nF\r\n<h3>1. <a href="https://onemonth.com/" target="_blank">OneMonth</a></h3>\r\nOne month is a\r\n<h3><a href="http://www.railstutorial.org/book" target="_blank">Michael Hart Tutorial</a></h3>\r\n<h3><a href="https://www.codeschool.com/" target="_blank">CodeSchool</a></h3>\r\n<h3><a href="http://pragprog.com/book/rails4/agile-web-development-with-rails-4" target="_blank">Agile Development Book</a></h3>\r\n<h3><a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\n<h3><a href="http://railscasts.com/" target="_blank">Rails Casts</a></h3>\r\n<h3><a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>', '5 resources for Rails beginners', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-06 22:39:00', '2014-08-07 03:39:00', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(90, 1, '2014-08-07 10:22:36', '2014-08-07 15:22:36', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.', '6 resources for Rails beginners', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:22:36', '2014-08-07 15:22:36', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(91, 1, '2014-08-07 10:23:59', '2014-08-07 15:23:59', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.', '6 ways to learn Rails', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:23:59', '2014-08-07 15:23:59', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(92, 1, '2014-08-07 10:25:53', '2014-08-07 15:25:53', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.', '6 ways to learn Rails', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:25:53', '2014-08-07 15:25:53', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(93, 1, '2014-08-07 10:29:22', '2014-08-07 15:29:22', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\nThere they are. Go get \'em tiger! You may even want to consider doing them in that order depending on your personality/preferences. I like this order because you can get familiar with rails, get it installed, build a quick win, a not-so-quick win, learn good programming concepts and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a>, develop a daily discipline for yourself.', '6 ways to learn Rails', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:29:22', '2014-08-07 15:29:22', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(94, 1, '2014-08-07 10:32:08', '2014-08-07 15:32:08', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well you have no excuse now, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\r\n\r\n&nbsp;\r\n<h3>JFDI</h3>\r\nThere they are. Go get \'em tiger! You\'ve got no excuses now. You may even want to consider doing these in that order depending on your personality/preferences. I like this order because you can get familiar with rails, get it installed, build a quick win, build a not-so-quick win, learn good programming concepts and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a>, develop a daily discipline for yourself.', '6 ways to learn Rails', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:32:08', '2014-08-07 15:32:08', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(95, 1, '2014-08-07 10:33:52', '2014-08-07 15:33:52', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well the Ruby language is more expressive and easier to write and read than any other language, in my opinion. And Rails makes a lot of things way easier. But learning Rails is hard because there are <a href="https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard" target="_blank">so many disciplines</a> you have to cover. Well you have no excuse now, here are 6 amazing resources for learning Rails that you\'ve gotta checkout.\r\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\r\n\r\n&nbsp;\r\n<h3>JFDI</h3>\r\nThere they are. Go get \'em tiger! You\'ve got no excuses now. You may even want to consider doing these in that order depending on your personality/preferences. I like this order because you can get familiar with rails, get it installed, build a quick win, build a not-so-quick win, learn good programming concepts and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a>, develop a daily discipline for yourself.', 'JFDI – 6 ways to learn Ruby on Rails', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:33:52', '2014-08-07 15:33:52', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(96, 1, '2014-08-07 10:43:00', '2014-08-07 15:43:00', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well you have no excuse now, time\'s a-wastin\' here are 6 amazing resources for learning Rails that you\'ve gotta checkout. You could learn them in this order or start with the most interesting one.\n<h3>1. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\n<h3>2. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\n<h3>JFDI</h3>\nThere they are. Go get \'em tiger! You\'ve got no excuses now. You may even want to consider doing these in that order depending on your personality/preferences. I like this order because you can get it installed, get familiar with Rails, build a quick win, build a not-so-quick win, learn good programming concepts/syntax and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a> develop a daily discipline for yourself. Don\'t waste any time, just look yourself in the mirror and say <a href="https://www.google.com/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=jfdi" target="_blank">jfdi</a>.', '6 ways to learn Ruby on Rails (JFDI)', '', 'inherit', 'open', 'open', '', '88-autosave-v1', '', '', '2014-08-07 10:43:00', '2014-08-07 15:43:00', '', 88, 'http://dev.dorails.com/88-autosave-v1/', 0, 'revision', '', 0),
(97, 1, '2014-08-07 10:43:42', '2014-08-07 15:43:42', 'Want to learn Rails, but don\'t know where to start? Are you stuck before you even started? Everyone says that Rails is easy to learn, but where do you go and how easy is it? Well you have no excuse now, time\'s a-wastin\'. Here are 6 amazing resources for learning Rails that you\'ve gotta checkout. You could learn them in this order or start with the most interesting one.\r\n<h3>1. <a href="http://installrails.com/" target="_blank">Install Rails</a></h3>\r\nWhen you get stuck in Rails you get <em>really</em> stuck. Have you gotten stuck before you even started? What if you could get a walkthrough on installing Rails? Well <a href="installrails.com" target="_blank">Install Rails</a> is an easy step-by-step guide to installing Rails on your computer. This covers installing on Windows, Mac &amp; Linux and has some great troubleshooting forums for each step if you get stuck along the way. This will carry you from install to creating your first shell rails app.\r\n<h3>2. <a href="http://guides.rubyonrails.org/" target="_blank">Rails Guides</a></h3>\r\nTired of hearing about Rails from other? Want to get info straight from the source? You can\'t fail with the good ol\' Rails Guides put together by the Rails core team themselves. These online walk-throughs will take you through all the conventions of Rails. It covers installing, creating a new rails project, scaffolding, routes, MVC, database migrations, forms, Active Record, validations, callbacks, associations and a lot more! This path is for the DIY kind of person who wants to explore what Rails is capable of on their own, and this is a great way to become familiar with the language and concepts of Rails.\r\n<h3>3. <a href="https://onemonth.com/courses/one-month-rails" target="_blank">One Month Rails</a></h3>\r\nTired of learning concepts and want to build something real? Are you short on spare time and want a quick win? This is an online course created by <a href="https://twitter.com/mattangriffel" target="_blank">Mattan Griffel</a> out of <a href="http://www.ycombinator.com/" target="_blank">YCombinator</a> that helps beginners learn the basics of Rails by spending 30 minutes a day for one month. This course is instant gratification for people that have been spinning their wheels with no traction. In this course you will build a rails app start to finish and covers features and concepts like MVC, user authorization, photo pins, Twitter Bootstrap, CSS/Sass, Git/Github, deploying to Heroku and more. You will basically rebuild a basic version of Pinterest from scratch. This is a great online course if you are just starting out and want a crash course with a quick win. There are also troubleshooting forums for each lesson for when you get stuck. Cost is $100 flat, but here\'s a <a href="http://onemonth.com/signup?discount_code=W9vPoG" target="_blank">25% off</a> link though if you are interested. It does not cover advanced topics like testing, caching, etc but it will get you jump started and excited. It\'s called <em>One Month Rails </em>but if you work fast, this class is more like one week rails.\r\n<h3>4. <a href="http://www.railstutorial.org/book" target="_blank">Michael Hartl RoR Tutorial</a></h3>\r\nDo you want to know what\'s behind the magic of Rails? Want to look under the hood and understand the how &amp; why behind each aspect of Rails? This is a great tutorial for beginners by <a href="http://www.michaelhartl.com/" target="_blank">Michael Hartl</a> for those who want all the dirty details and in-depth knowledge of Rails. This course has a multi-faceted, professional-level approach. It is designed for beginners, but be ready dive deep into Git, routes, MVC, deploying to Heroku, rolling your own user auth system, TDD, Model Testing, Integration Testing, sample data, and a lot more. The course demystifies a lot of the <em>magic</em> that happens in Rails. You will essentially rebuild Twitter from scratch. Depending on your free-time/dedication, this course should take roughly one month to go through, but it\'s worth it. Oh yeah, did I mention it\'s <a href="http://www.railstutorial.org/book" target="_blank">free</a>. But you may want to consider the screencasts for $149 if you want to move faster.\r\n<h3>5. <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a></h3>\r\nDon\'t care to go through the install process and deal with error messages, just to get your feet wet? What if you could code right in the browser? This is a fun &amp; compelling online course by <a href="https://www.codeschool.com/" target="_blank">Code School</a> that will help you wrap your brain around the programming concepts, conventions, structure and syntax of Ruby and Ruby on Rails and eventually get you into the nitty gritty trenches where you want to be. In this course you can expect to do most of your coding right in the browser so you don\'t have to deal with installing Rails at the start and can focus on understanding Ruby/Rails programming concepts. The first course is free but as of writing this post, Code School enrollment is $30 a month. There are many useful rails courses you can take that follow this one.\r\n<h3>6. <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a></h3>\r\nAs great as books and courses are, learning Rails is not always a linear process. As you may know by now, it is so easy to get stuck in Rails and it is important to see the framework from multiple angles to really gain a full understanding and get unstuck. This resource has a multi-discipline approach that focuses on daily practice of essential topics. <a href="http://patmaddox.com/" target="_blank">Pat Maddox</a> will send you 5 lessons per week covering Ruby, Rails, <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development (TDD)</a>, <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object-Oriented Programming (OOP)</a>, and Refactoring. This is for the beginner or advanced Rails developer who wants to build up their professional programming chops to build amazing software. The mailing list is <a href="http://patmaddox.com/rubysteps/" target="_blank">free</a> to join.\r\n<h3>JFDI</h3>\r\nThere they are. Go get \'em tiger! You\'ve got no excuses now. You may even want to consider doing these in that order depending on your personality/preferences. I like this order because you can get it installed, get familiar with Rails, build a quick win, build a not-so-quick win, learn good programming concepts/syntax and then with <a href="http://patmaddox.com/rubysteps/" target="_blank">Ruby Steps</a> develop a daily discipline for yourself. Don\'t waste any time, just look yourself in the mirror and say <a href="https://www.google.com/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=jfdi" target="_blank">jfdi</a>.', '6 ways to learn Ruby on Rails (JFDI)', '', 'inherit', 'open', 'open', '', '88-revision-v1', '', '', '2014-08-07 10:43:42', '2014-08-07 15:43:42', '', 88, 'http://dev.dorails.com/88-revision-v1/', 0, 'revision', '', 0),
(98, 1, '2014-08-26 10:14:30', '2014-08-26 15:14:30', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\r\n<pre>$ heroku rename your-custom-name</pre>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump to your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.\r\n<h3>Huzzah! You\'re deployed.</h3>\r\nHope this helps, please feel free to email or comment in the comments below if you have any issues.', '9 steps for first-time deployment to Heroku', '', 'publish', 'open', 'open', '', '9-steps-for-first-time-deployment-to-heroku', '', '', '2014-08-26 10:48:46', '2014-08-26 15:48:46', '', 0, 'http://dev.dorails.com/?p=98', 0, 'post', '', 0),
(99, 1, '2014-08-08 14:35:30', '2014-08-08 19:35:30', 'P (crispy) - How to deploy your Rails app to Heroku in plain english.\r\n\r\nDeep pain?\r\n\r\nHave no clue how to deploy\r\n\r\n&nbsp;\r\n\r\nD - What if there wer\r\n\r\nF -\r\n\r\nAssumes <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git is installed</a> and you have <a href="http://heroku.com">created a Heroku account</a>.\r\n\r\n&nbsp;\r\n<h3>Install Heroku Tools</h3>\r\n&nbsp;', 'How to deploy a local Git repo to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-08 14:35:30', '2014-08-08 19:35:30', '', 98, 'http://dev.dorails.com/98-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(101, 1, '2014-08-08 16:30:46', '2014-08-08 21:30:46', 'P (crispy) - How to deploy your Rails app to Heroku for the first time\r\n\r\nP - Trying to deploy your Rails app for the first time. Have no clue how to deploy for the world to see?\r\n\r\nD - What if there wer\r\n\r\nF -\r\n\r\nAssumes <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git is installed</a> and you have <a href="http://heroku.com">created a Heroku account</a>.\r\n\r\n&nbsp;\r\n<h3>Install Heroku Tools</h3>\r\n<h3>Setup SSH Keys</h3>\r\n<h3>Setup Remote</h3>\r\n<h3>Push Live</h3>\r\n<h3>Migrate</h3>\r\n&nbsp;\r\n\r\n&nbsp;', 'How to deploy your Rails app to Heroku in plain english.', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-08 16:30:46', '2014-08-08 21:30:46', '', 98, 'http://dev.dorails.com/98-revision-v1/', 0, 'revision', '', 0),
(102, 1, '2014-08-08 16:36:12', '2014-08-08 21:36:12', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create SSH Keys</h3>\r\nFollow Github instructions <a href="https://help.github.com/articles/generating-ssh-keys" target="_blank">here</a>.\r\n<h3>5. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>6. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\r\n<h3>7. Do the Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>8. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\r\n\r\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Hop on the Github bandwagon', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-08 16:36:12', '2014-08-08 21:36:12', '', 73, 'http://dev.dorails.com/73-revision-v1/', 0, 'revision', '', 0),
(103, 1, '2014-08-08 17:05:48', '2014-08-08 22:05:48', 'P (crispy) - How to deploy your Rails app to Heroku for the first time\r\n\r\nP - Trying to deploy your Rails app for the first time. Have no clue how to deploy for the world to see?\r\n\r\nD - What if there wer\r\n\r\nF -\r\n\r\nAssumes <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git is installed</a> and you have <a href="http://heroku.com">created a Heroku account</a>.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com</pre>\r\n<pre>Password: (will not be seen)</pre>\r\n<h3>4. Setup Heroku SSH Keys</h3>\r\nWith the command-line still open we will add SSH keys by typing:\r\n<pre>$ heroku add:keys</pre>\r\n(Note: You will only need to do this once per computer)\r\n<h3>5. Create new URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ heroku create</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab.\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want add a couple gems just for Heroku\r\n<h3>6. Add / Commit / Push</h3>\r\n<h3>7. Push to Heroku</h3>\r\n<h3>8. Migrate</h3>\r\nif you ha\r\n<h3>9. Open</h3>\r\n<h3>10. To Debug</h3>\r\n<pre style="color: #4d4d4d;"><code class="prettyprint lang-scm prettyprinted" style="color: inherit;"><span class="pln" style="color: #000000;">heroku logs </span><span class="pun" style="color: #666600;">--</span><span class="pln" style="color: #000000;">tail </span></code></pre>\r\n&nbsp;', 'How to deploy your Rails app to Heroku in plain english.', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-08 17:05:48', '2014-08-08 22:05:48', '', 98, 'http://dev.dorails.com/98-revision-v1/', 0, 'revision', '', 0),
(105, 1, '2014-08-22 09:48:24', '2014-08-22 14:48:24', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4>Don\'t learned the hard way</h4>\r\nIt took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a ton of unnecessary pain and heartache.\r\n<h3>With my <em>30-Day Rails</em> course you will build and deploy a live Rails app in 30 days.</h3>\r\nBypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>30-Day Rails</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>30-Day Rails</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>30-Day Rails</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>30-Day Rails</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> 30-Day Rails </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>30-Day Rails</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>30-Day Rails</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>30-Day Rails</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>30-Day Rails</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <i>30-Day Rails</i> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <i>30-Day Rails</i> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>30-Day Rails</em><em> </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'publish', 'closed', 'closed', '', '30dayrails', '', '', '2014-09-04 13:20:59', '2014-09-04 18:20:59', '', 0, 'http://dev.dorails.com/?page_id=105', 0, 'page', '', 0),
(106, 1, '2014-08-21 16:36:02', '2014-08-21 21:36:02', '<h1>Level out the learning curve of Ruby on Rails.</h1>\r\nWant to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Do Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-21 16:36:02', '2014-08-21 21:36:02', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(107, 1, '2014-08-21 16:36:52', '2014-08-21 21:36:52', '<h2>Flatten the learning curve of Ruby on Rails</h2>\r\nWant to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Do Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-21 16:36:52', '2014-08-21 21:36:52', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(108, 1, '2014-08-22 09:21:28', '2014-08-22 14:21:28', '<h2>Flatten the learning curve of Ruby on Rails</h2>\r\nWant to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'RailsCurve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 09:21:28', '2014-08-22 14:21:28', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(109, 1, '2014-08-22 09:48:14', '2014-08-22 14:48:14', 'hello', 'Home', '', 'publish', 'closed', 'closed', '', 'home', '', '', '2014-08-22 21:59:08', '2014-08-23 02:59:08', '', 0, 'http://dev.dorails.com/?page_id=109', 0, 'page', '', 0),
(110, 1, '2014-08-22 09:48:14', '2014-08-22 14:48:14', 'hello', 'Home', '', 'inherit', 'open', 'open', '', '109-revision-v1', '', '', '2014-08-22 09:48:14', '2014-08-22 14:48:14', '', 109, 'http://dev.dorails.com/109-revision-v1/', 0, 'revision', '', 0),
(111, 1, '2014-08-22 09:52:01', '2014-08-22 14:52:01', '', 'Rails Vitamins', '', 'publish', 'open', 'closed', '', 'railsvitamins', '', '', '2014-08-22 10:18:04', '2014-08-22 15:18:04', '', 0, 'http://dev.dorails.com/?page_id=111', 0, 'page', '', 0),
(112, 1, '2014-08-22 09:52:01', '2014-08-22 14:52:01', '', 'Blog', '', 'inherit', 'open', 'open', '', '111-revision-v1', '', '', '2014-08-22 09:52:01', '2014-08-22 14:52:01', '', 111, 'http://dev.dorails.com/111-revision-v1/', 0, 'revision', '', 0),
(113, 1, '2014-08-22 09:52:42', '2014-08-22 14:52:42', '', 'Blog', '', 'inherit', 'open', 'open', '', '111-autosave-v1', '', '', '2014-08-22 09:52:42', '2014-08-22 14:52:42', '', 111, 'http://dev.dorails.com/111-autosave-v1/', 0, 'revision', '', 0),
(114, 1, '2014-08-22 09:55:01', '2014-08-22 14:55:01', ' ', '', '', 'publish', 'open', 'open', '', 'rails-vitamins', '', '', '2014-09-01 21:22:01', '2014-09-02 02:22:01', '', 0, 'http://dev.dorails.com/?p=114', 3, 'nav_menu_item', '', 0),
(115, 1, '2014-08-22 09:55:01', '2014-08-22 14:55:01', ' ', '', '', 'publish', 'open', 'open', '', 'rails-curve', '', '', '2014-09-01 21:22:01', '2014-09-02 02:22:01', '', 0, 'http://dev.dorails.com/?p=115', 2, 'nav_menu_item', '', 0),
(116, 1, '2014-08-22 09:54:04', '0000-00-00 00:00:00', '', 'More', '', 'draft', 'open', 'open', '', '', '', '', '2014-08-22 09:54:04', '0000-00-00 00:00:00', '', 0, 'http://dev.dorails.com/?p=116', 1, 'nav_menu_item', '', 0),
(117, 1, '2014-08-22 10:06:21', '2014-08-22 15:06:21', '', 'Rials Vitamins', '', 'inherit', 'open', 'open', '', '111-revision-v1', '', '', '2014-08-22 10:06:21', '2014-08-22 15:06:21', '', 111, 'http://dev.dorails.com/111-revision-v1/', 0, 'revision', '', 0),
(118, 1, '2014-08-22 10:18:04', '2014-08-22 15:18:04', '', 'Rails Vitamins', '', 'inherit', 'open', 'open', '', '111-revision-v1', '', '', '2014-08-22 10:18:04', '2014-08-22 15:18:04', '', 111, 'http://dev.dorails.com/111-revision-v1/', 0, 'revision', '', 0),
(119, 1, '2014-08-22 11:52:58', '2014-08-22 16:52:58', '<h2>Flatten the learning curve of Ruby on Rails</h2>\r\nWant to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 11:52:58', '2014-08-22 16:52:58', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(120, 1, '2014-08-22 11:56:41', '2014-08-22 16:56:41', '<h1>Flatten the learning curve of Ruby on Rails</h1>\r\nWant to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 11:56:41', '2014-08-22 16:56:41', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(121, 1, '2014-08-22 12:15:25', '2014-08-22 17:15:25', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\nDo you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 12:15:25', '2014-08-22 17:15:25', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(123, 1, '2014-08-22 12:42:34', '2014-08-22 17:42:34', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n\r\n<p class="lead">Do you learn by doing? Are you tired of studying abstract programming concepts and syntax without actually applying them to a real app?</p>\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nPAIN+DREAM SEGUE\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\nDREAM\r\n\r\nImagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding. I know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n\r\nThen the dream of making AND shipping your app could finally come true.\r\n\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – all at once.\r\n\r\nFIX SEGUE:\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n\r\nFIX:\r\n\r\nWith ___________ you can bypass the learning curve altogether and build a live Rails app in 30 days.\r\n\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n\r\nLEARN YOUR WAY\r\n\r\nWith ________ you will learn Rails by osmosis. You will learn your way – by doing. After all, you decided to learn Rails so you could build an app – so why not learn by building one? By following the method of building AND learning at the same time you will...\r\n\r\nUnderstand the big picture faster\r\nPick up complex skills and concepts faster\r\nAvoid getting paralyzed by the tiny details\r\nAvoid the pain of wasting weeks studying in-depth concepts\r\nPunch perfectionism in the face\r\nSTACK THE BRICKS\r\n\r\nInstead of spinning your wheels on learning abstract concepts, ______ will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. _______ gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n\r\nBUILD YOUR SKILLS\r\n\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n\r\nRuby\r\nGems\r\nRuby on Rails Framework\r\nCommand Line (Terminal)\r\nMVC pattern (Model View Controller)\r\nObject-Oriented Programming\r\nActive Record\r\nDatabases\r\nHTML\r\nCSS and Sass\r\nJavascript and CoffeeScript\r\nFront-end Frameworks\r\nDeployment\r\nVersion Control\r\nValidation\r\nUser Authentication\r\nUI Design\r\nUX Design\r\nProject Management\r\nand more...\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 12:42:34', '2014-08-22 17:42:34', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(124, 1, '2014-08-22 12:57:57', '2014-08-22 17:57:57', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by doing?</h3>\r\nAre you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<h3>Imagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding.</h3>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could finally come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – <em>all at once</em>.\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in 30 days</h3>\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by osmosis</h4>\r\nYou will learn your way – by <em>doing</em>. After all, you decided to learn Rails so you could build an app – so why not learn by actually building one?\r\n\r\nBy following the method of building AND learning at the same time you will...\r\n<ul>\r\n	<li>Understand the big picture faster</li>\r\n	<li>Pick up complex skills and concepts faster</li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting weeks studying in-depth concepts</li>\r\n	<li>Punch perfectionism in the face</li>\r\n</ul>\r\n<h3>Stack the bricks</h3>\r\nInstead of spinning your wheels on learning abstract concepts, <em>Rails Curve</em> will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. <em>Rails Curve</em> gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n<h3>Build your skills</h3>\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n\r\n________ will jump-start your understanding of key elements like...\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\nGET EQUIPPED\r\n\r\nYou can’t build an app without the right tools though. So you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt. With _________ you will learn exactly how to do things like ...\r\n\r\nuse the command-line to create a new blank-slate app\r\nuse a single command to create a rails server on your computer\r\nuse Git to manage your source code and push it to an online repo at Github\r\nuse the command-line to generate the pages and elements of your app on the fly\r\nuse the command-line to manage your database\r\nuse the command-line to push your app to a live server on Heroku\r\nuse Twitter Bootstrap to rapidly style your app - with no design experience needed.\r\nuse the Devise gem to create user sign-up and sign-in in a matter of minutes.\r\nand a lot more\r\nGET UNSTUCK\r\n\r\nBut no amount of skills and tools will wipe out the possibility of error messages. So with _______ you will learn how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n\r\nReading error messages to get clues about what part of your app needs fixing\r\nGoogling and searching online dev communities to get past any error in minutes\r\nchecking Rails and Heroku error logs using your trusty command line\r\nGET RESULTS\r\n\r\nBy the time you finish ______ you will have...\r\n\r\nseen how to make a solid plan you can follow\r\ncreated all the key features needed for the app\r\nsketched &amp; styled a beautiful UI on the front-end of the app\r\ncreated a solid database back-end for the app\r\nimplemented a user authentication system for users to sign in and sign out\r\ndeployed your app to a live server\r\ngrown a slew of foundational web development skills in the process\r\nGET TRACTION\r\n\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nFEELINGS\r\n\r\nWhen you complete _________ you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n\r\nWHAT’S NEXT?\r\n\r\nSo, fast forward 30 days and you are finished with _____. Now what? Back to the obscure world of not knowing what’s next? No way. When you complete the lessons you will definitely want to transition into building your own app idea. So ______ includes outro lessons that will walk you through how to create your own plan for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer Rails coaching. My goal is to see everyone who goes through ________ build and launch their app with great success and without stalling out on an issue.\r\n\r\nJoin other students who learn by doing\r\n\r\nWith ____________ you will build a real Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet ________ take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when ______ will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 12:57:57', '2014-08-22 17:57:57', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(125, 1, '2014-08-22 13:10:14', '2014-08-22 18:10:14', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is sooo easy, but you’ve been banging your head against the desk for months trying to figure it out. Are you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by doing?</h3>\r\nAre you tired of studying abstract programming concepts and syntax without actually applying them to a real app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely nothing? A lot of Rails books &amp; courses take forever to get through and then leave you high and dry with no skills or finished product. Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once? Even the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n\r\nLet’s face it, you need progress to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a better way to learn Rails, but fear that there isn’t? It shouldn’t be this difficult.\r\n\r\nYou are certain that you want to build your idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<h3>Imagine you could make and launch your own Ruby on Rails app in a matter of days with little knowledge of coding.</h3>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n\r\nYou could finally make REAL traction and get ’er done. If you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could finally come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really doing. You’d build a Rails app and easily absorb the concepts and details one by one as you move along. You’d know exactly what to learn and you would learn it all in exactly the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel confident as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there. Hell, at this rate you would actually enjoy coding.\r\n\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building and shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app AND get solid skills that you can build on – <em>all at once</em>.\r\n\r\nThat being said, it is true that Rails does have a crazy learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in 30 days</h3>\r\nYou will learn how to build a web app from start to finish, and master all the skills you need to make your own apps moving forward. In four weeks, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by osmosis</h4>\r\nYou will learn your way – by <em>doing</em>. After all, you decided to learn Rails so you could build an app – so why not learn by actually building one?\r\n\r\nBy following the method of building AND learning at the same time you will...\r\n<ul>\r\n	<li>Understand the big picture faster</li>\r\n	<li>Pick up complex skills and concepts faster</li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting weeks studying in-depth concepts</li>\r\n	<li>Punch perfectionism in the face</li>\r\n</ul>\r\n<h3>Stack the bricks</h3>\r\nInstead of spinning your wheels on learning abstract concepts, <em>Rails Curve</em> will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized walk-throughs, in plain english, that will show you exactly what to do. <em>Rails Curve</em> gives you a solid path of exactly what to learn in exactly the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n<h3>Build your skills</h3>\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4><em>Rails Curve</em> will jump-start your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools though</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like Sublime Text), Git, Github, Heroku, Twitter Bootstrap, Devise, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn exactly how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use Git to manage your source code and push it to an online repo at Github</li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on Heroku</li>\r\n	<li>use Twitter Bootstrap to rapidly style your app - with no design experience needed.</li>\r\n	<li>use the Devise gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of error messages.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to eliminate "getting stuck" forever. You’ll get real-world experience troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error in minutes</li>\r\n	<li>checking Rails and Heroku error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish ______ you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can finally get the traction you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you are finished with <em>Rails Curve</em>. Now what?</h3>\r\nBack to the obscure world of not knowing what’s next? <em>No way</em>. When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to create <em>your own plan</em> for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app with great success and without stalling out on a problem.\r\n<h2>Join other students who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 13:10:14', '2014-08-22 18:10:14', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(126, 1, '2014-08-22 13:31:05', '2014-08-22 18:31:05', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by doing?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain flat-lining because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <em>progress</em> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<h3>Imagine you could make and launch your own Ruby on Rails app in a <em>matter of days</em> with little knowledge of coding.</h3>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make REAL traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could finally come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in 30 days</h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <em>osmosis</em></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could build an app – so why not learn by <em>actually building one</em>?\r\n<h4>By following the method of building AND learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture faster</li>\r\n	<li>Pick up complex skills and concepts faster</li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting weeks studying in-depth concepts</li>\r\n	<li>Punch perfectionism in the face</li>\r\n</ul>\r\n<h3>Stack the bricks</h3>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n<h3>Build your skills</h3>\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4><em>Rails Curve</em> will jump-start your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn exactly how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with no design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of error messages.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to eliminate "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error in minutes</li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish ______ you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can finally get the traction you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you are finished with <em>Rails Curve</em>. Now what?</h3>\r\nBack to the obscure world of not knowing what’s next? <em>No way</em>. When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to create <em>your own plan</em> for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app with great success and without stalling out on a problem.\r\n<h2>Join other students who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 13:31:05', '2014-08-22 18:31:05', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(127, 1, '2014-08-22 13:37:25', '2014-08-22 18:37:25', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by doing?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <em>progress</em> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<h3>Imagine you could make and launch your own Ruby on Rails app in a <em>matter of days</em> with little knowledge of coding.</h3>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make REAL traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could finally come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in 30 days</h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <em>osmosis</em></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could build an app – so why not learn by <em>actually building one</em>?\r\n<h4>By following the method of building AND learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture faster</li>\r\n	<li>Pick up complex skills and concepts faster</li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting weeks studying in-depth concepts</li>\r\n	<li>Punch perfectionism in the face</li>\r\n</ul>\r\n<h3>Stack the bricks</h3>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n<h3>Build your skills</h3>\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4><em>Rails Curve</em> will jump-start your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn exactly how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with no design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of error messages.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to eliminate "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error in minutes</li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish ______ you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can finally get the traction you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you are finished with <em>Rails Curve</em>. Now what?</h3>\r\nBack to the obscure world of not knowing what’s next? <em>No way</em>. When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to create <em>your own plan</em> for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app with great success and without stalling out on a problem.\r\n<h2>Join other students who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 13:37:25', '2014-08-22 18:37:25', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(128, 1, '2014-08-22 13:38:16', '2014-08-22 18:38:16', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n\r\n<div class="well">\r\n<h3>Imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <em>matter of days</em> with little knowledge of coding.</h3>\r\n</div>\r\n\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure. You would know exactly where to start learning and what was next. And getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make REAL traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could finally come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in 30 days</h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <em>osmosis</em></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could build an app – so why not learn by <em>actually building one</em>?\r\n<h4>By following the method of building AND learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture faster</li>\r\n	<li>Pick up complex skills and concepts faster</li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting weeks studying in-depth concepts</li>\r\n	<li>Punch perfectionism in the face</li>\r\n</ul>\r\n<h3>Stack the bricks</h3>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you a clear day-by-day plan for how to build a robust Rails app from start to finish. Each lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (and live) web app.\r\n<h3>Build your skills</h3>\r\nAs you move through each lesson, you will get a solid foundation of the key concepts and get first-hand experience on how they all work together. And no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4><em>Rails Curve</em> will jump-start your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you gotta have in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn exactly how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with no design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of error messages.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to eliminate "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself quickly so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error in minutes</li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish ______ you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can finally get the traction you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you are finished with <em>Rails Curve</em>. Now what?</h3>\r\nBack to the obscure world of not knowing what’s next? <em>No way</em>. When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to create <em>your own plan</em> for your app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app with great success and without stalling out on a problem.\r\n<h2>Join other students who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 13:38:16', '2014-08-22 18:38:16', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(129, 1, '2014-08-22 13:56:52', '2014-08-22 18:56:52', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <em>matter of days</em> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 13:56:52', '2014-08-22 18:56:52', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(130, 1, '2014-08-22 14:01:47', '2014-08-22 19:01:47', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 14:01:47', '2014-08-22 19:01:47', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(131, 1, '2014-08-22 14:08:35', '2014-08-22 19:08:35', '[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-08-22 14:08:35', '2014-08-22 19:08:35', '', 15, 'http://dev.dorails.com/15-revision-v1/', 0, 'revision', '', 0),
(132, 1, '2014-08-22 14:23:30', '2014-08-22 19:23:30', 'Want to learn to make your own web app with Ruby on Rails? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]\r\n\r\n<!-- Begin MailChimp Signup Form -->\r\n<link href="//cdn-images.mailchimp.com/embedcode/classic-081711.css" rel="stylesheet" type="text/css">\r\n<style type="text/css">\r\n	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }\r\n	/* Add your own MailChimp form style overrides in your site stylesheet or in this style block.\r\n	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */\r\n</style>\r\n<div id="mc_embed_signup">\r\n<form action="//railsvitamins.us8.list-manage.com/subscribe/post?u=40e20a404b24c24893118c9f7&amp;id=10300bb940" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>\r\n	<h2>Sign Up to be the first to use Rails Curve</h2>\r\n<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>\r\n<div class="mc-field-group">\r\n	<label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>\r\n</label>\r\n	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">\r\n</div>\r\n<div class="mc-field-group">\r\n	<label for="mce-FNAME">First Name </label>\r\n	<input type="text" value="" name="FNAME" class="" id="mce-FNAME">\r\n</div>\r\n<div class="mc-field-group">\r\n	<label for="mce-LNAME">Last Name </label>\r\n	<input type="text" value="" name="LNAME" class="" id="mce-LNAME">\r\n</div>\r\n	<div id="mce-responses" class="clear">\r\n		<div class="response" id="mce-error-response" style="display:none"></div>\r\n		<div class="response" id="mce-success-response" style="display:none"></div>\r\n	</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\r\n    <div style="position: absolute; left: -5000px;"><input type="text" name="b_40e20a404b24c24893118c9f7_10300bb940" tabindex="-1" value=""></div>\r\n    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>\r\n</form>\r\n</div>\r\n<script type=\'text/javascript\' src=\'//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js\'></script><script type=\'text/javascript\'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=\'EMAIL\';ftypes[0]=\'email\';fnames[1]=\'FNAME\';ftypes[1]=\'text\';fnames[2]=\'LNAME\';ftypes[2]=\'text\';}(jQuery));var $mcj = jQuery.noConflict(true);</script>\r\n<!--End mc_embed_signup-->', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 14:23:30', '2014-08-22 19:23:30', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(133, 1, '2014-08-22 14:40:57', '2014-08-22 19:40:57', 'Are you looking to launch your career? Or are you just trying to launch your app idea? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]\r\n\r\n<!-- Begin MailChimp Signup Form -->\r\n<div id="mc_embed_signup"><form id="mc-embedded-subscribe-form" class="validate" action="//railsvitamins.us8.list-manage.com/subscribe/post?u=40e20a404b24c24893118c9f7&amp;id=10300bb940" method="post" name="mc-embedded-subscribe-form" novalidate="" target="_blank">\r\n<h2>Sign Up to be the first to use Rails Curve</h2>\r\n<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>\r\n<div class="mc-field-group"><label for="mce-EMAIL">Email Address <span class="asterisk">*</span>\r\n</label>\r\n<input id="mce-EMAIL" class="required email" name="EMAIL" type="email" value="" /></div>\r\n<div class="mc-field-group"><label for="mce-FNAME">First Name </label>\r\n<input id="mce-FNAME" name="FNAME" type="text" value="" /></div>\r\n<div class="mc-field-group"><label for="mce-LNAME">Last Name </label>\r\n<input id="mce-LNAME" name="LNAME" type="text" value="" /></div>\r\n<div id="mce-responses" class="clear"></div>\r\n<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\r\n<div style="position: absolute; left: -5000px;"><input tabindex="-1" name="b_40e20a404b24c24893118c9f7_10300bb940" type="text" value="" /></div>\r\n<div class="clear"><input id="mc-embedded-subscribe" class="button" name="subscribe" type="submit" value="Subscribe" /></div>\r\n</form></div>\r\n<script src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script><script>// <![CDATA[\r\n(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=\'EMAIL\';ftypes[0]=\'email\';fnames[1]=\'FNAME\';ftypes[1]=\'text\';fnames[2]=\'LNAME\';ftypes[2]=\'text\';}(jQuery));var $mcj = jQuery.noConflict(true);\r\n// ]]></script>\r\n<!--End mc_embed_signup-->', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 14:40:57', '2014-08-22 19:40:57', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(134, 1, '2014-08-22 14:42:19', '2014-08-22 19:42:19', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]\r\n\r\n<!-- Begin MailChimp Signup Form -->\r\n<div id="mc_embed_signup"><form id="mc-embedded-subscribe-form" class="validate" action="//railsvitamins.us8.list-manage.com/subscribe/post?u=40e20a404b24c24893118c9f7&amp;id=10300bb940" method="post" name="mc-embedded-subscribe-form" novalidate="" target="_blank">\r\n<h2>Sign Up to be the first to use Rails Curve</h2>\r\n<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>\r\n<div class="mc-field-group"><label for="mce-EMAIL">Email Address <span class="asterisk">*</span>\r\n</label>\r\n<input id="mce-EMAIL" class="required email" name="EMAIL" type="email" value="" /></div>\r\n<div class="mc-field-group"><label for="mce-FNAME">First Name </label>\r\n<input id="mce-FNAME" name="FNAME" type="text" value="" /></div>\r\n<div class="mc-field-group"><label for="mce-LNAME">Last Name </label>\r\n<input id="mce-LNAME" name="LNAME" type="text" value="" /></div>\r\n<div id="mce-responses" class="clear"></div>\r\n<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\r\n<div style="position: absolute; left: -5000px;"><input tabindex="-1" name="b_40e20a404b24c24893118c9f7_10300bb940" type="text" value="" /></div>\r\n<div class="clear"><input id="mc-embedded-subscribe" class="button" name="subscribe" type="submit" value="Subscribe" /></div>\r\n</form></div>\r\n<script src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script><script>// <![CDATA[\r\n(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=\'EMAIL\';ftypes[0]=\'email\';fnames[1]=\'FNAME\';ftypes[1]=\'text\';fnames[2]=\'LNAME\';ftypes[2]=\'text\';}(jQuery));var $mcj = jQuery.noConflict(true);\r\n// ]]></script>\r\n<!--End mc_embed_signup-->', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 14:42:19', '2014-08-22 19:42:19', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(135, 1, '2014-08-22 14:55:00', '2014-08-22 19:55:00', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if Rails’ steep learning curve was suddenly flattened? If nothing stood in the way of you learning Rails and getting your app shipped?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 14:55:00', '2014-08-22 19:55:00', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(136, 1, '2014-08-22 20:14:26', '2014-08-23 01:14:26', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job? \r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\nFind out the latest on when <em>Rails Curve</em> will be available by signing up below.\r\n\r\n[gravityform id="1" name="Don\'t miss out on my next post." title="false" description="false" ajax="true"]', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-22 20:14:26', '2014-08-23 01:14:26', '', 105, 'http://dev.dorails.com/105-revision-v1/', 0, 'revision', '', 0),
(137, 1, '2014-08-23 15:11:03', '2014-08-23 20:11:03', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you could get all of the key Rails skills and <strong>build</strong> an app at the same time.\r\n\r\nMy <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">upcoming course</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, I think it can help you get launched. I\'d go on but I\'ve already said it <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">here</a>. If you\'re stuck and need a leg up with Ruby on Rails, check it out by clicking below.\r\n\r\n<a class="btn btn-primary" title="30-Day Rails" href="http://dev.dorails.com/30dayrails/">Learn more</a>', 'Speed up the learning curve for Ruby on Rails', '', 'publish', 'open', 'open', '', 'speed-up-the-learning-curve-for-ruby-on-rails', '', '', '2014-09-04 13:27:20', '2014-09-04 18:27:20', '', 0, 'http://dev.dorails.com/?p=137', 0, 'post', '', 0),
(138, 1, '2014-08-23 15:06:27', '2014-08-23 20:06:27', 'Are you spinning your wheels with Rails? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you get all of the key Rails skills and build an app at the same time. I\'d go on but I\'ve already said it <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">here</a>. My upcoming product <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> will help you launch.\r\n\r\n<a title="Rails Curve" class="btn btn-primary" href="http://dev.dorails.com/railscurve/">Learn more about <em>Rails Curve</em></a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-08-23 15:06:27', '2014-08-23 20:06:27', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0),
(139, 1, '2014-08-23 15:09:22', '2014-08-23 20:09:22', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you get all of the key Rails skills and <strong>build</strong> an app at the same time. My upcoming product <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> will help you launch. I\'d go on but I\'ve already said it <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">here</a>. If you\'re stuck with Ruby on Rails and need a leg up, check it out.\r\n\r\n<a class="btn btn-primary" title="Rails Curve" href="http://dev.dorails.com/railscurve/">Learn more about <em>Rails Curve</em></a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-08-23 15:09:22', '2014-08-23 20:09:22', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0),
(140, 1, '2014-08-23 15:09:56', '2014-08-23 20:09:56', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you get all of the key Rails skills and <strong>build</strong> an app at the same time.\r\n\r\nMy upcoming product <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> will help you launch. I\'d go on but I\'ve already said it <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">here</a>. If you\'re stuck with Ruby on Rails and need a leg up, check it out.\r\n\r\n<a class="btn btn-primary" title="Rails Curve" href="http://dev.dorails.com/railscurve/">Learn more about <em>Rails Curve</em></a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-08-23 15:09:56', '2014-08-23 20:09:56', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0),
(141, 1, '2014-08-23 15:11:03', '2014-08-23 20:11:03', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you get all of the key Rails skills and <strong>build</strong> an app at the same time.\r\n\r\nMy upcoming product <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">Rails Curve</a> will help you launch. I\'d go on but I\'ve already said it <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">here</a>. If you\'re stuck and need a leg up with Ruby on Rails, check it out by clicking below.\r\n\r\n<a class="btn btn-primary" title="Rails Curve" href="http://dev.dorails.com/railscurve/">Learn more about <em>Rails Curve</em></a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-08-23 15:11:03', '2014-08-23 20:11:03', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0),
(142, 1, '2014-08-23 15:42:41', '2014-08-23 20:42:41', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n<h3>Find out the latest on when <em>Rails Curve</em> will be available by signing up below.</h3>', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-23 15:42:41', '2014-08-23 20:42:41', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(143, 1, '2014-08-23 15:46:05', '2014-08-23 20:46:05', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>Let’s face it, you need <strong>progress</strong> to stay motivated and learn Rails.</h4>\r\nProgress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t? It shouldn’t be <em>this</em> difficult.\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-23 15:46:05', '2014-08-23 20:46:05', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(144, 1, '2014-09-04 13:19:20', '2014-09-04 18:19:20', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\n\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\n\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\nOn and on.\n\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\n\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\n<h4>This is not your fault.</h4>\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\n\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\n<h4>What it took me years to figure out:</h4>\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\n<h4>Don\'t learned the hard way</h4>\nIt took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a ton of unnecessary pain and heartache.\n<h3>With my <em>30-Day Rails</em> course you will build and deploy a live Rails app in 30 days.</h3>\nBypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.\n<h4>Learn by doing</h4>\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\n<ul>\n	<li>Understand the big picture <strong>faster</strong></li>\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\n	<li>Avoid getting paralyzed by the tiny details</li>\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\n	<li>Punch perfectionism <em>in the face</em></li>\n</ul>\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>30-Day Rails</em> will give you:\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>30-Day Rails</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\n<h4 style="text-align: left;"><em>30-Day Rails</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\n<div class="row">\n<ul class="col-md-6">\n	<li>Ruby</li>\n	<li>Gems</li>\n	<li>Ruby on Rails Framework</li>\n	<li>Command Line (Terminal)</li>\n	<li>MVC pattern (Model View Controller)</li>\n	<li>Object-Oriented Programming</li>\n	<li>Active Record</li>\n	<li>Databases</li>\n	<li>HTML &amp; ERB</li>\n	<li>CSS and Sass</li>\n	<li>Javascript and CoffeeScript</li>\n</ul>\n<ul class="col-md-6">\n	<li>Front-end Frameworks</li>\n	<li>Deployment</li>\n	<li>Version Control</li>\n	<li>Validation</li>\n	<li>User Authentication</li>\n	<li>UI Design</li>\n	<li>UX Design</li>\n	<li>Project Management</li>\n	<li>and more...</li>\n</ul>\n</div>\n<h3>You can’t build an app without the right tools</h3>\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\n<h4>With 30-Day Rails you will learn <strong>exactly</strong> how to do things like ...</h4>\n<ul>\n	<li>use the command-line to create a new blank-slate app</li>\n	<li>use a single command to create a rails server on your computer</li>\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\n	<li>use the command-line to manage your database</li>\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\n	<li>and a lot more</li>\n</ul>\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\n<ul>\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\n</ul>\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\n<ul>\n	<li>seen how to make a solid plan you can follow</li>\n	<li>created all the key features needed for the app</li>\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\n	<li>created a solid database back-end for the app</li>\n	<li>implemented a user authentication system for users to sign in and sign out</li>\n	<li>deployed your app to a live server</li>\n	<li>grown a slew of foundational web development skills in the process</li>\n</ul>\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\n<h2>Join other developers who learn by doing</h2>\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\n\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-autosave-v1', '', '', '2014-09-04 13:19:20', '2014-09-04 18:19:20', '', 105, 'http://dev.dorails.com/railsvitamins/105-autosave-v1/', 0, 'revision', '', 0),
(145, 1, '2014-08-24 03:57:21', '2014-08-24 08:57:21', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>It shouldn’t be <strong>this</strong> difficult.</h4>\r\nLet’s face it, you need <strong>progress</strong> to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t?\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n\r\nYou could keep your precious precious sanity, that’s for sure.\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-24 03:57:21', '2014-08-24 08:57:21', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(146, 1, '2014-08-24 03:58:42', '2014-08-24 08:58:42', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>It shouldn’t be <strong>this</strong> difficult.</h4>\r\nLet’s face it, you need <strong>progress</strong> to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t?\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-24 03:58:42', '2014-08-24 08:58:42', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(147, 1, '2014-08-24 04:40:26', '2014-08-24 09:40:26', '<h2 style="text-align: center;">Complete your pre-order billing info below by clicking the button</h2>\r\n<p style="text-align: center;">Pre-order your  <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="/wp-content/themes/Paradox/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Billing Info', '', 'draft', 'closed', 'closed', '', 'pre-order', '', '', '2014-08-26 12:50:01', '2014-08-26 17:50:01', '', 105, 'http://dev.dorails.com/?page_id=147', 0, 'page', '', 0),
(148, 1, '2014-08-24 04:40:26', '2014-08-24 09:40:26', '', 'pre-order', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 04:40:26', '2014-08-24 09:40:26', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(150, 1, '2014-08-24 04:49:30', '2014-08-24 09:49:30', '<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> $49</h2>\r\nSave $99 by joining early. You will get a life-time rate of $49 per year and your cost will never go up for the yearly membership. This only lasts until the official launch of the product in a few weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n// ]]></script></form>', 'pre-order', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 04:49:30', '2014-08-24 09:49:30', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(151, 1, '2014-08-24 04:50:02', '2014-08-24 09:50:02', '<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> $49</h2>\r\nSave $99 by joining early. You will get a life-time rate of $49 per year and your cost will never go up for the yearly membership. This only lasts until the official launch of the product in a few weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 04:50:02', '2014-08-24 09:50:02', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(152, 1, '2014-08-24 04:52:26', '2014-08-24 09:52:26', '<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></h2>\r\nSave $49 by joining early. You will get a life-time rate of $49 per year and your cost will never go up for the yearly membership. This only lasts until the official launch of the product in a few weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n\r\n<div class="text-center">\r\n<p>Click below to pre-order:</p>\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form>\r\n</div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 04:52:26', '2014-08-24 09:52:26', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(153, 1, '2014-08-24 05:10:00', '2014-08-24 10:10:00', '<h2>Complete your pre-order below</h2>\r\n<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></h2>\r\nSave $49 by joining early. You will get a life-time rate of $49 per year and your cost will never go up for the yearly membership. This only lasts until the official launch of the product in a few weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n<div class="text-center">\r\n\r\nClick below to pre-order:\r\n\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:10:00', '2014-08-24 10:10:00', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(154, 1, '2014-08-24 05:12:40', '2014-08-24 10:12:40', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>It shouldn’t be <strong>this</strong> difficult.</h4>\r\nLet’s face it, you need <strong>progress</strong> to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t?\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></h2>\r\nSave $49 by joining early. You will get a life-time rate of $49 per year and your cost will never go up. This only lasts until the official launch of the product in a matter of weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n<div class="text-center">\r\n\r\nSign up below to pre-order <em>Rails Curve</em>\r\n\r\n[gravityform id="4" name="Pre-order Rails Curve yearly access for only <del>$99</del> $49" ajax="true"]\r\n\r\n</div>', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-24 05:12:40', '2014-08-24 10:12:40', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(155, 1, '2014-08-24 05:15:57', '2014-08-24 10:15:57', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>It shouldn’t be <strong>this</strong> difficult.</h4>\r\nLet’s face it, you need <strong>progress</strong> to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t?\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.\r\n\r\n<div class="well">\r\n<h2>Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></h2>\r\nSave $49 by joining early. You will get a life-time rate of $49 per year and your cost will never go up. This only lasts until the official launch of the product in a matter of weeks. Plus if you pre-order <em>Rails Curve</em>, I can make the initial course that much better.\r\n\r\nSign up below to pre-order <em>Rails Curve</em>\r\n\r\n[gravityform id="4" name="Pre-order Rails Curve yearly access for only <del>$99</del> $49"]\r\n\r\n</div>', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-24 05:15:57', '2014-08-24 10:15:57', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(156, 1, '2014-08-24 05:20:05', '2014-08-24 10:20:05', 'Are you trying to launch your app idea? Or are you looking to get your career off the ground? Maybe you’ve tried to learn Rails on your own, but how do you know where to start? Is the learning-curve impossibly steep? Everyone says that learning Rails is <em>sooo</em> easy, but you’ve been banging your head against the desk for months trying to figure it out.\r\n\r\nAre you drowning in a sea of error messages? As you know by now, they can wash your dream app down the drain and bring months of hard work to a screeching halt.\r\n<h3>Do you learn by <strong>doing</strong>?</h3>\r\nAre you tired of studying <em>abstract</em> programming concepts and syntax without actually applying them to a <strong>real</strong> app?\r\n\r\nHave you burned piles of money and time on books and courses to be left with absolutely <em>nothing</em>? A lot of Rails books &amp; courses take <em>forever</em> to get through and then leave you high and dry with no skills or finished product.\r\n<h4>Is your brain<strong> flat-lining</strong> because you are forced to digest too many confusing programming concepts at once?</h4>\r\nEven the books that say they are for beginners are mind-numbing. And with endless copy &amp; pasting, they end up reducing you to a transcriptionist monkey. You are left in a foggy blur and you don’t retain the material. Plus many of the resources are horribly out-of-date and almost never go picture-perfect like they are written.\r\n<h4>It shouldn’t be <strong>this</strong> difficult.</h4>\r\nLet’s face it, you need <strong>progress</strong> to stay motivated and learn Rails. Progress is the fuel that keeps you going. So a lack of it can really beat you down. I know it has for me. Do you wish there was a <em>better way</em> to learn Rails, but fear that there isn’t?\r\n\r\nYou are <strong>certain</strong> that you want to build your app idea. You just aren’t sure that you can do it. Maybe it’s a lost cause. Perhaps you should save yourself the trouble and leave it alone.\r\n<div class="well">\r\n<h3>Well, imagine you <strong>could</strong> make and launch your own Ruby on Rails app in a <strong>matter of days</strong> with little knowledge of coding.</h3>\r\n</div>\r\nI know it sounds crazy, but seriously. What would it be like if you could fast-forward through Rails’ steep learning curve? If nothing stood in the way of you learning Rails and getting your app shipped? If nothing kept you from starting your own business or landing your dream job?\r\n<h4>You would know <strong>exactly</strong> where to start learning and what was next.</h4>\r\nAnd getting stuck with error messages would be a thing of the past. You could soar through building your Rails app and cut through error messages like they were butter.\r\n\r\nYou wouldn’t have to throw away thousands on a Computer Science degree or Code School. And you wouldn’t need to find yourself a technical co-founder or hire that expensive developer. And huzzah, you could push your app live for the world to enjoy, without a hitch.\r\n<h4>You could finally make <strong>REAL</strong> traction and get ’er done.</h4>\r\nIf you had a Rails fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.\r\n<h3>Then the dream of making AND shipping your app could <strong>finally</strong> come true.</h3>\r\nIf Rails was a piece o’ cake to pick up you could just learn by doing. Really <em>doing</em>. You’d <em>build</em> a Rails app and easily absorb the concepts and details one by one as you went along. You’d know <strong>exactly</strong> what to learn and you would learn it all in<strong> exactly</strong> the right order. You could eat the elephant one concept at a time, even in the midst of a wall of tasks, languages and syntax. And you’d never wonder if you had up-to-date training.\r\n\r\nEven without being a "Computer Scientist", you’d feel <strong>confident</strong> as you made a big-picture plan for your new app, wrote code at each step, and understood exactly what each line of code did and why it was there.\r\n<h4>Hell, at this rate you would actually <strong>enjoy </strong>coding.</h4>\r\nBy quickly stacking up tiny victories with Rails you could move yourself closer and closer to the big win of building <strong>and</strong> shipping your app for the world to see. The bottom line is that if Rails was easy-breezy to learn you could make an app <em>AND</em> get solid skills that you can build on – <strong>all at once</strong>.\r\n\r\nThat being said, it is true that Rails does have a crazy difficult learning curve and a Rails app can take months and months to build. But there’s good news. You don’t have to follow that path.\r\n<h3>With <em>Rails Curve</em> you can bypass the learning curve altogether and build a live Rails app in <strong>30 days.</strong></h3>\r\nYou will learn how to build a web app from start to finish, and grow all the skills you need to make your own apps moving forward. In <em>four weeks</em>, you will become experienced with all of the tools, concepts and skills that you need to plan, design, develop and ship a web app.\r\n<h4>With <em>Rails Curve</em> you will learn Rails by <strong>osmosis</strong></h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-08-24 05:20:05', '2014-08-24 10:20:05', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(157, 1, '2014-08-24 05:28:44', '2014-08-24 10:28:44', '<h2>Complete your pre-order below</h2>\r\nPre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong>\r\n\r\nClick below to pre-order:\r\n\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:28:44', '2014-08-24 10:28:44', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(158, 1, '2014-08-24 05:30:46', '2014-08-24 10:30:46', '<h2>Complete your pre-order below by clicking the button below</h2>\nPre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong>\n\n<div class="text-center">\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\n\n\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-autosave-v1', '', '', '2014-08-24 05:30:46', '2014-08-24 10:30:46', '', 147, 'http://dev.dorails.com/railsvitamins/147-autosave-v1/', 0, 'revision', '', 0),
(159, 1, '2014-08-24 05:30:54', '2014-08-24 10:30:54', '<h2>Complete your pre-order below by clicking the button below</h2>\r\nPre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong>\r\n\r\n<div class="text-center">\r\n<form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form>\r\n</div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:30:54', '2014-08-24 10:30:54', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(160, 1, '2014-08-24 05:31:37', '2014-08-24 10:31:37', '<h2 style="text-align: center;">Complete your pre-order below by clicking the button below</h2>\r\n<p style="text-align: center;">Pre-order <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:31:37', '2014-08-24 10:31:37', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(161, 1, '2014-08-24 05:32:35', '2014-08-24 10:32:35', '<h2 style="text-align: center;">Complete your pre-order billing info below by clicking the button</h2>\r\n<p style="text-align: center;">Pre-order your  <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="&lt;?php echo get_template_directory_uri(); ?&gt;/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:32:35', '2014-08-24 10:32:35', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(162, 1, '2014-08-24 05:34:03', '2014-08-24 10:34:03', '<h2 style="text-align: center;">Complete your pre-order billing info below by clicking the button</h2>\r\n<p style="text-align: center;">Pre-order your  <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="http://dorails.com/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:34:03', '2014-08-24 10:34:03', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(163, 1, '2014-08-24 05:35:56', '2014-08-24 10:35:56', '<h2 style="text-align: center;">Complete your pre-order billing info below by clicking the button</h2>\r\n<p style="text-align: center;">Pre-order your  <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="/wp-content/themes/Paradox/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Pre-order Rails Curve', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:35:56', '2014-08-24 10:35:56', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(164, 1, '2014-08-24 05:51:27', '2014-08-24 10:51:27', '<h2 style="text-align: center;">Complete your pre-order billing info below by clicking the button</h2>\r\n<p style="text-align: center;">Pre-order your  <i>Rails Curve</i> yearly access for only <del>$99</del> <strong>$49</strong></p>\r\n\r\n<div class="text-center"><form action="" method="POST"><script class="stripe-button" src="https://checkout.stripe.com/checkout.js" data-key="pk_test_4aTlVzE71bqN2QqMZiTKXkM8" data-amount="4900" data-name="Rails Curve" data-description="30-Day Course | Pre-sale Price ($49)" data-image="/wp-content/themes/Paradox/assets/images/stripe-logo.jpg">// <![CDATA[\r\n\r\n\r\n// ]]></script></form></div>', 'Billing Info', '', 'inherit', 'open', 'open', '', '147-revision-v1', '', '', '2014-08-24 05:51:27', '2014-08-24 10:51:27', '', 147, 'http://dev.dorails.com/railsvitamins/147-revision-v1/', 0, 'revision', '', 0),
(165, 1, '2014-08-24 05:54:35', '2014-08-24 10:54:35', 'Thank you for pre-ordering! You\'ve received an email in your inbox confirming the payment. I will keep you posted on the release date of<em> Rails Curve. </em>\r\n\r\nIn the meantime you can checkout Rails tips and tricks <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/">here</a>, if you haven\'t already.\r\n\r\nHave a great day.', 'Thanks!', '', 'draft', 'open', 'closed', '', 'thanks', '', '', '2014-08-26 12:50:15', '2014-08-26 17:50:15', '', 0, 'http://dev.dorails.com/?page_id=165', 0, 'page', '', 0),
(166, 1, '2014-08-24 05:54:35', '2014-08-24 10:54:35', 'Thank you for pre-ordering! You\'ve received an email in your inbox confirming the payment. I will keep you posted on the release date of<em> Rails Curve. </em>\r\n\r\nIn the meantime you can checkout Rails tips and tricks <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/">here</a>, if you haven\'t already.\r\n\r\nHave a great day.', 'Thanks!', '', 'inherit', 'open', 'open', '', '165-revision-v1', '', '', '2014-08-24 05:54:35', '2014-08-24 10:54:35', '', 165, 'http://dev.dorails.com/railsvitamins/165-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(167, 1, '2014-08-26 10:35:00', '2014-08-26 15:35:00', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\n\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\n<h3>1. Create a Heroku Account</h3>\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\n<h3>2. Download Heroku Tool Belt</h3>\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\n<h3>3. Login to Heroku</h3>\nTo login from the command-line, open up your command-line tool (terminal) and type:\n(Note: You will only need to do this once per computer)\n<pre>$ heroku login</pre>\nThen enter your username and your password.\n(Note: Your password will be invisible as you type)\n<pre>Email:  you@youremail.com\nPassword: # Your password\nCould not find an existing public key.\nWould you like generate one? [Yn] # Type Y\nGenerating new SSH public key.\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\n<h3>4. Create new Heroku URL</h3>\nThen we want to create our new app instance &amp; url in Heroku.\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\n$ git init # create local git repo if you haven\'t already\n$ heroku create\n</pre>\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\n\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\n<pre>$ heroku rename your-custom-name</pre>\n<h3>5. Add Gems &amp; Groups</h3>\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\n<pre>...\ngroup :development, :test do\n   gem \'sqlite 3\'\nend\n\ngroup :production do\n   gem \'pg\'\n   gem \'rails_12factor\'\nend   \n...\n</pre>\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\n<h3>6. Add / Commit</h3>\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\n$ git add . # add all files\n$ git commit -am "Whatever latest changes"\n$ git push origin master # optional if you are already setup on Github\n$ git push heroku master\n</pre>\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\n<h3>7. Open</h3>\nEnter <code>$ heroku open</code> to jump to your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\n<h3>8. Migrate</h3>\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\n<pre>$ heroku run rake db:migrate</pre>\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\n\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\n<h3>9. To Debug</h3>\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\n<pre>$ heroku logs --tail</pre>\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.\n\nHuzzah! You have deployed\n\nHope this helps, please feel free to email or comment in the comments below if you have any issues.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-autosave-v1', '', '', '2014-08-26 10:35:00', '2014-08-26 15:35:00', '', 98, 'http://dev.dorails.com/railsvitamins/98-autosave-v1/', 0, 'revision', '', 0),
(168, 1, '2014-08-26 09:59:59', '2014-08-26 14:59:59', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command <code>heroku apps:rename</code>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump open your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 09:59:59', '2014-08-26 14:59:59', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0),
(169, 1, '2014-08-26 10:01:23', '2014-08-26 15:01:23', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command <code>heroku rename your-custom-name</code>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump open your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 10:01:23', '2014-08-26 15:01:23', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0),
(170, 1, '2014-08-26 10:03:42', '2014-08-26 15:03:42', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\r\n<pre>$ heroku rename your-custom-name</pre>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump open your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 10:03:42', '2014-08-26 15:03:42', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0),
(171, 1, '2014-08-26 10:04:47', '2014-08-26 15:04:47', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\r\n<pre>$ heroku rename your-custom-name</pre>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump open your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.\r\n\r\nHope this helps, please feel free to email or comment in the comments below if you have any issues.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 10:04:47', '2014-08-26 15:04:47', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0),
(172, 1, '2014-09-04 13:27:16', '2014-09-04 18:27:16', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you could get all of the key Rails skills and <strong>build</strong> an app at the same time.\n\nMy <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">upcoming course</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, I think it can help you get launched. I\'d go on but I\'ve already said it <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">here</a>. If you\'re stuck and need a leg up with Ruby on Rails, check it out by clicking below.\n\n<a class="btn btn-primary" title="Rails Curve" href="http://dev.dorails.com/railscurve/">Learn more</a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-autosave-v1', '', '', '2014-09-04 13:27:16', '2014-09-04 18:27:16', '', 137, 'http://dev.dorails.com/railsvitamins/137-autosave-v1/', 0, 'revision', '', 0),
(173, 1, '2014-08-26 10:21:40', '2014-08-26 15:21:40', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you could get all of the key Rails skills and <strong>build</strong> an app at the same time.\r\n\r\nMy <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">upcoming course</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, I think it can help you get launched. I\'d go on but I\'ve already said it <a title="Rails Curve" href="http://dev.dorails.com/railscurve/">here</a>. If you\'re stuck and need a leg up with Ruby on Rails, check it out by clicking below.\r\n\r\n<a class="btn btn-primary" title="Rails Curve" href="http://dev.dorails.com/railscurve/">Learn more</a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-08-26 10:21:40', '2014-08-26 15:21:40', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0),
(174, 1, '2014-08-26 10:23:00', '2014-08-26 15:23:00', 'I used to see web/software development as a lonely, anti-social and disorganized activity. It was incredibly difficult to collaborate and follow along with the progress of a project. Also it was a beat-down to transfer and backup projects to a place where I could always access them from anywhere. That was until I discovered <a href="https://github.com/" target="_blank">Github</a>.\r\n\r\nNow I push all my projects to an online repository. I see a real-time history of all my projects. I easily collaborate and contribute to other\'s projects, and get instant access to my source code whenever I need it. Github also serves as a social network of sorts for developers. In a glance others can see what I\'m working on and I can explore to see what my friends are working on. This is all part of the modern web/software developer\'s repertoire  (especially Rails), along with <a href="http://git-scm.com/" target="_blank">Git</a>.\r\n\r\nKeep in mind that Github and Git are related but different things. Git is a local version control tool for your projects, and Github is online hosting of your project source code.\r\n\r\nSo what\'s the best way to get started with Github? Follow these steps and you\'ll be rolling.\r\n<h3>1. Setup Git</h3>\r\nGit is required to be able to use Github, so if you haven\'t read my post <em><a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Get going with Git</a></em>, go there first and setup Git on your local computer.\r\n<h3>2. Make initial commit</h3>\r\nOnce you\'ve setup Git on your computer. Find an existing project that you want to put on Github or create a new folder for an upcoming project. Then open terminal and enter the following:\r\n<pre>$ cd /path/to/your/project/ # change to the directory of your project\r\n$ git init # create local repository\r\n$ git add . # add all files in the directory\r\n$ git commit -am "Initial Commit" # commit with a message</pre>\r\nYou now have a local repository with your new or existing project. How do we push this to Github? Continue on...\r\n<h3>3. Start Github account</h3>\r\nGo to <a href="http://github.com" target="_blank">github.com</a> and setup your account.\r\n<h3>4. Create SSH Keys</h3>\r\nFollow Github instructions <a href="https://help.github.com/articles/generating-ssh-keys" target="_blank">here</a>.\r\n<h3>5. Create a new repo</h3>\r\nOnce you are setup and logged in:\r\n<ul>\r\n	<li>Click on the <code>+</code> sign in the top right hand corner</li>\r\n	<li>Click <code>New repository</code> from the dropdown</li>\r\n	<li>Give repo a name like <code>my_project</code>, <code>my-project</code>, or <code>MyProject</code> (I like to pick a convention and stick with it).</li>\r\n	<li>Give your project a description</li>\r\n	<li>Choose <code>Public</code> or <code>Private</code>.\r\n<small>Stick with public right now unless you are doing a company/client project (they might not like you publishing their source code for the world to see). Public repos are free. Private repos will cost you a little. I use them myself though.</small></li>\r\n	<li>I usually leave the <code>Initialize this repo with a README</code> unchecked because Rails projects have these by default when you setup a rails project.</li>\r\n	<li>Then click the <code>Create Repository</code> Button</li>\r\n</ul>\r\n<h3>6. Push Local Git Repo to Github Repo</h3>\r\nAfter your Github repo is created you will see a screen with setup instructions. Skip down to the <code>Push an existing repository from the command line</code> section. Type the following into the command line on your local machine:\r\n<pre>git remote add origin git@github.com:MyAccount/my_project.git\r\ngit push -u origin master</pre>\r\nYou have now set your new Github repo as the origin "remote" repository (more on remotes later). And you have set the ability to push your <em>local</em> Git repo to your <em>remote</em> Github repo.\r\n<h3>7. Do the Git Jive</h3>\r\nNow you can work on your project, make changes, and do the Git dance.\r\n<ol>\r\n	<li>Work on stuff</li>\r\n	<li>\r\n<pre>$ git add .</pre>\r\n</li>\r\n	<li>\r\n<pre>$ git commit -am "Create Navbar"</pre>\r\n<small>Note: Best practice for commits is to write in present tense and keep it short</small></li>\r\n	<li>\r\n<pre>$ git push</pre>\r\n<small>Pushes to Github repo</small></li>\r\n	<li>Repeat</li>\r\n</ol>\r\n<h3>8. Bonus</h3>\r\nI was going to save this for another post, but it\'s too much fun. Now that your Github repo is setup for your project you can pull up your project from any computer in a jiffy (as long as it has Git setup on it). You can actually do this with anyone\'s public project on Github. This is called <em>cloning</em>, and it does just that. Just open the directory where you want to drop it on your local machine and clone the repo to download the project instantly. The quickest way to clone a project is to find the project repo on Github and copy the clone code on the righthand side here:\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone.jpg"><img class="aligncenter wp-image-80" src="http://dev.dorails.com/wp-content/uploads/2014/08/Git-Clone-300x183.jpg" alt="Git Clone" width="500" height="306" /></a>\r\n\r\nThen travel to the directory you want to drop it and type <code>$ git clone</code> and paste the clone text in like so:\r\n<pre>$ cd /path/to/new/project/destination/\r\n$ git clone git@github.com:MyAccount/my_project.git</pre>\r\nFeel free to dig around Github and find other amazing developers with fun projects and clone theirs too to dig through their code.\r\n\r\nThere are a thousand other more advanced techniques I will cover with Git/Github including branches, remotes and deploying your Rails app, but you can hit the ground running now. With this jump start you can keep your code in an online repo, share what you are working on with others, easily collaborate, and interact with other humans. Congrats you\'re now a <em>modern</em> developer living in the 21st century!', 'Hop on the Github bandwagon', '', 'inherit', 'open', 'open', '', '73-revision-v1', '', '', '2014-08-26 10:23:00', '2014-08-26 15:23:00', '', 73, 'http://dev.dorails.com/railsvitamins/73-revision-v1/', 0, 'revision', '', 0),
(175, 1, '2014-08-26 10:25:59', '2014-08-26 15:25:59', 'Do you feel like your still doing web/software dev in the stoneage? Still using FTP or SVN? Ever have a client ask you to put things back how they were 2 weeks ago? Or do you have a hard time collaborating with other developers?\r\n\r\nImagine you can rewind or revert to any stage in development at the drop of a hat. And when it’s time to work on a risky or experimental feature you could get messy without affecting the main source code of the project. Imagine it is simple and straight forward to collaborate with other devs on your team without stepping on each others toes. For these and a million other reasons, you need to use Git! Git is a small but powerful tool vital to any Rails developer. If you are new to Rails and are ready to usher in a new age for yourself, it’s best to just jump on the Git bandwagon right away so you’ve got a leg to stand on.\r\n\r\nNote: Their is a distinction between Git and Github. Although related and used in tandem, it’s important to know that Git is the version control system on your local computer and Github is  a web-based hosting service. We will focus on Git for today but I do have a <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">post about Github</a> when you are ready.\r\n\r\nHere’s a fast track to getting setup with Git:\r\n<h3>1. Open Terminal</h3>\r\nFind the application called Terminal on your Mac (or Windows Equivalent) and open it. You should see a black command-line screen once opened\r\n<h3>2. Setup Git</h3>\r\nTo setup Git on your computer, type these in the command-line ($ signifies that this is a command, don’t type the $):\r\n<pre>$ git config --global user.name “Ty Richards”</pre>\r\n<pre>$ git config --global user.name   # to confirm name saved</pre>\r\n<pre>$ git config --global user.email “me@tyrichards.com”</pre>\r\n<pre>$ git config --global user.email   # to confirm email saved</pre>\r\n<h3>3. Create New Repo</h3>\r\nTo setup a Git repo for a new project or give an existing project a repo:\r\n<pre>$ cd ~/Sites/new_project  # travel to your new project folder in terminal</pre>\r\n<pre>$ pwd   # verify that you are in that directory</pre>\r\n<pre>$ git init  # creates a new repo</pre>\r\n<pre>$ git status # to see what files are being tracked$ git add .  # adds all files in current folder)</pre>\r\n<pre>$ git commit -a -m “initial commit”  # commits all(-a) modified files and includes a message(-m)</pre>\r\n<h3>4. Do Stuff</h3>\r\nAfter every task you do you can:\r\n<pre>$ git status # to see what is being tracked and modified</pre>\r\n<pre>$ git add .</pre>\r\n<pre>$ git commit -am “Build initial scaffolding”</pre>\r\nand repeat\r\n\r\nWith this you’ll be setup and ready to go in the era of Git. At it’s best you have full control of your source code revisions and collaboration, and at worst you have a nicely documented history of revisions that have been made on the project. There are many more advanced features of Git and GitHub makes things more exciting too. With Git you also need to understand branches, remotes, and the .gitignore file, but you are at least jumpstarted into the world of Git. More on these other things later.', 'Get going with Git', '', 'inherit', 'open', 'open', '', '42-revision-v1', '', '', '2014-08-26 10:25:59', '2014-08-26 15:25:59', '', 42, 'http://dev.dorails.com/railsvitamins/42-revision-v1/', 0, 'revision', '', 0),
(176, 1, '2014-08-26 10:29:55', '2014-08-26 15:29:55', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\r\n<pre>$ heroku rename your-custom-name</pre>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump to your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.\r\n\r\nHope this helps, please feel free to email or comment in the comments below if you have any issues.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 10:29:55', '2014-08-26 15:29:55', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(177, 1, '2014-08-26 10:35:14', '2014-08-26 15:35:14', 'Unsure how to push your app live? Don\'t want to deal with days or weeks of configuring a server? Save the headache of dealing with your own server and get your app live in a matter of minutes with Heroku. Heroku does all the heavy lifting for you. Plus you can launch several apps for free up to a certain scale. Here\'s how you set it up and push your app live.\r\n\r\nAlso keep in mind, a lot of this stuff you will setup once and be done. This walk-through is assuming you have <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">git installed</a>, and you have some form of a rails app to deploy.\r\n<h3>1. Create a Heroku Account</h3>\r\nFirst things first. Go to the <a href="http://heroku.com" target="_blank">Heroku</a> site and setup an account.\r\n<h3>2. Download Heroku Tool Belt</h3>\r\nNext go to <a href="https://toolbelt.heroku.com/" target="_blank">http://toolbelt.heroku.com</a> and download heroku\'s command-line tools. This will give you everything you need to work with Heroku in terminal.\r\n<h3>3. Login to Heroku</h3>\r\nTo login from the command-line, open up your command-line tool (terminal) and type:\r\n(Note: You will only need to do this once per computer)\r\n<pre>$ heroku login</pre>\r\nThen enter your username and your password.\r\n(Note: Your password will be invisible as you type)\r\n<pre>Email:  you@youremail.com\r\nPassword: # Your password\r\nCould not find an existing public key.\r\nWould you like generate one? [Yn] # Type Y\r\nGenerating new SSH public key.\r\nUploading ssh public key /Users/adam/.ssh/id_rsa.pub</pre>\r\n<h3>4. Create new Heroku URL</h3>\r\nThen we want to create our new app instance &amp; url in Heroku.\r\n<pre>$ cd /path/to/your/app/ # change directory to app you want to deploy\r\n$ git init # create local git repo if you haven\'t already\r\n$ heroku create\r\n</pre>\r\nAt this point you could login to your heroku account and browser and see that a new app has been created in your account by traveling to the "Apps" tab. When you enter <code>heroku create</code> Heroku creates a new url and git repo online for you and automatically adds a <i>Git Remote</i> to your current local git repo on your computer.\r\n\r\nYou can rename your Heroku url from <code>crazy-random-name.herokuapp.com</code> to <code>custom-name.herokuapp.com</code> by entering the command:\r\n<pre>$ heroku rename your-custom-name</pre>\r\n<h3>5. Add Gems &amp; Groups</h3>\r\nNow we want to add a couple gems just for Heroku. This is worth noting. Rails comes with the gem <code>sqlite</code> and works out of the box with that type of database, but Heroku prefers <code>postgres</code> databases. So we are going to paste <code>gem \'sqlite 3\'</code> from our Gemfile and add two groups for now. One group for your development and test environment on your local machine and another group for production environment on Heroku. So open your Gemfile, cut <code>gem \'sqlite 3\' and add the following groups:</code>\r\n<pre>...\r\ngroup :development, :test do\r\n   gem \'sqlite 3\'\r\nend\r\n\r\ngroup :production do\r\n   gem \'pg\'\r\n   gem \'rails_12factor\'\r\nend   \r\n...\r\n</pre>\r\nThen you always run <code>bundle install</code> in command-line after you add to your Gemfile\r\n<h3>6. Add / Commit</h3>\r\nThe last step before deploying is to precompile and then add/commit to our local Git repo before we push to Heroku\r\n<pre>$ rake assets:precompile # probably want to do this everytime you push latest commit to Heroku\r\n$ git add . # add all files\r\n$ git commit -am "Whatever latest changes"\r\n$ git push origin master # optional if you are already setup on Github\r\n$ git push heroku master\r\n</pre>\r\nThis may take a minute to let Heroku do it\'s thing. But once it\'s done, you should be live – Woohoo! The last command pushes your local Git repo to your Heroku remote repository, and specifies to go to the master branch.\r\n<h3>7. Open</h3>\r\nEnter <code>$ heroku open</code> to jump to your live app in a browser. You have pushed to the server but there is a chance you will see default Heroku error message right off the bat. Don\'t panic, it\'s normal.\r\n<h3>8. Migrate</h3>\r\nThere may be a bit of an anti-climax but if you see the default heroku error message screen you probably just need to migrate your database. To do this run this in command-line:\r\n<pre>$ heroku run rake db:migrate</pre>\r\nThis is a lot like migrating a database on your local machine but this command tells Heroku to to run <code>rake db:migrate</code> on your live app. Enter <code>$ heroku open</code> to make sure the error message is gone.\r\n\r\nOnce this is done, your wonderful creation should be on the web for the world to see. It\'s a good idea to do this early and often so you can catch any deployment problems before your app gets more and more complex.\r\n<h3>9. To Debug</h3>\r\nThis should get you up and running on Heroku quickly, but depending on your OS and the configuration of your Rials app you may run into problems. Not to worry though. Use this trusty terminal command to see what is causing the issue.\r\n<pre>$ heroku logs --tail</pre>\r\nIt seems scary at first but I like to make it easier by using <code>cmd+F</code> for Mac or <code>ctrl+F</code> for PC to search the for "error". That jumps me straight to what I want to see. Then you can simply Google the error message and go from there. It seems like half of programming is Googling.\r\n<h3>Huzzah! You\'re deployed.</h3>\r\nHope this helps, please feel free to email or comment in the comments below if you have any issues.', '9 steps for first-time deployment to Heroku', '', 'inherit', 'open', 'open', '', '98-revision-v1', '', '', '2014-08-26 10:35:14', '2014-08-26 15:35:14', '', 98, 'http://dev.dorails.com/railsvitamins/98-revision-v1/', 0, 'revision', '', 0),
(178, 1, '2014-08-27 10:00:06', '2014-08-27 15:00:06', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n\r\n<h3>1. Add domain to Heroku</h3>\r\n\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>\r\n$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code> \r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>\r\n$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\n\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n\r\n<h3>2. Point your domain to Heroku</h3>\r\n\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. \r\n\r\nLogin, then click on <code>My Account</code>.\r\nThen click on <code>Manage My Domains</code>.\r\nFind your domain in the list and click on the name.\r\nThen click on the tab <code>DNS Zone File</code>.\r\nClick the <code>Add Record</code> button.\r\nThen select <code>CNAME</code> from the Record type dropdown.\r\nFor Hostname enter <code>@</code>\r\nFor Points to enter <code>your-app-name.herokuapp.com</code>\r\nThen click Finish.\r\nDon\'t forget to click the <code>Save Changes</code> button.\r\n\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.\r\n\r\n\r\n', '3 steps to add your custom domain to Heroku', '', 'trash', 'open', 'open', '', '3-steps-to-add-your-custom-domain-to-heroku', '', '', '2014-08-26 12:49:44', '2014-08-26 17:49:44', '', 0, 'http://dev.dorails.com/?page_id=178', 0, 'page', '', 0),
(179, 1, '2014-08-26 12:46:02', '2014-08-26 17:46:02', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n\r\n<h3>1. Add domain to Heroku</h3>\r\n\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>\r\n$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code> \r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>\r\n$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\n\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n\r\n<h3>2. Point your domain to Heroku</h3>\r\n\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. \r\n\r\nLogin, then click on <code>My Account</code>.\r\nThen click on <code>Manage My Domains</code>.\r\nFind your domain in the list and click on the name.\r\nThen click on the tab <code>DNS Zone File</code>.\r\nClick the <code>Add Record</code> button.\r\nThen select <code>CNAME</code> from the Record type dropdown.\r\nFor Hostname enter <code>@</code>\r\nFor Points to enter <code>your-app-name.herokuapp.com</code>\r\nThen click Finish.\r\nDon\'t forget to click the <code>Save Changes</code> button.\r\n\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.\r\n\r\n\r\n', '3 steps to add your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '178-revision-v1', '', '', '2014-08-26 12:46:02', '2014-08-26 17:46:02', '', 178, 'http://dev.dorails.com/railsvitamins/178-revision-v1/', 0, 'revision', '', 0),
(180, 1, '2014-08-26 12:46:32', '2014-08-26 17:46:32', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n\r\n<h3>1. Add domain to Heroku</h3>\r\n\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>\r\n$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code> \r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>\r\n$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\n\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n\r\n<h3>2. Point your domain to Heroku</h3>\r\n\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. \r\n\r\nLogin, then click on <code>My Account</code>.\r\nThen click on <code>Manage My Domains</code>.\r\nFind your domain in the list and click on the name.\r\nThen click on the tab <code>DNS Zone File</code>.\r\nClick the <code>Add Record</code> button.\r\nThen select <code>CNAME</code> from the Record type dropdown.\r\nFor Hostname enter <code>@</code>\r\nFor Points to enter <code>your-app-name.herokuapp.com</code>\r\nThen click Finish.\r\nDon\'t forget to click the <code>Save Changes</code> button.\r\n\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.\r\n\r\n\r\n', '3 steps to add your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '178-autosave-v1', '', '', '2014-08-26 12:46:32', '2014-08-26 17:46:32', '', 178, 'http://dev.dorails.com/railsvitamins/178-autosave-v1/', 0, 'revision', '', 0),
(181, 1, '2014-08-27 05:00:00', '2014-08-27 10:00:00', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n<h3>1. Add domain to Heroku</h3>\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code>\r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n<h3>2. Point your domain to Heroku</h3>\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. Now we need to add a CNAME to our DNS Records that points the domain to heroku. To do this:\r\n<ol>\r\n	<li>Login, then click on <code>My Account</code>.</li>\r\n	<li>Then click on <code>Manage My Domains</code>.</li>\r\n	<li>Find your domain in the list and click on the name.</li>\r\n	<li>Then click on the tab <code>DNS Zone File</code>.</li>\r\n	<li>Click the <code>Add Record</code> button.</li>\r\n	<li>Then select <code>CNAME</code> from the Record type dropdown.</li>\r\n	<li>For Hostname enter <code>@</code></li>\r\n	<li>For Points to enter <code>your-app-name.herokuapp.com</code></li>\r\n	<li>Then click Finish.</li>\r\n	<li>Don\'t forget to click the <code>Save Changes</code> button.</li>\r\n</ol>\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.', '3 steps to direct your custom domain to Heroku', '', 'publish', 'open', 'open', '', '3-steps-to-direct-your-custom-domain-to-heroku', '', '', '2014-08-26 12:54:56', '2014-08-26 17:54:56', '', 0, 'http://dev.dorails.com/?p=181', 0, 'post', '', 0),
(182, 1, '2014-08-26 12:49:07', '2014-08-26 17:49:07', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n\r\n<h3>1. Add domain to Heroku</h3>\r\n\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>\r\n$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code> \r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>\r\n$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\n\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n\r\n<h3>2. Point your domain to Heroku</h3>\r\n\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. \r\n\r\nLogin, then click on <code>My Account</code>.\r\nThen click on <code>Manage My Domains</code>.\r\nFind your domain in the list and click on the name.\r\nThen click on the tab <code>DNS Zone File</code>.\r\nClick the <code>Add Record</code> button.\r\nThen select <code>CNAME</code> from the Record type dropdown.\r\nFor Hostname enter <code>@</code>\r\nFor Points to enter <code>your-app-name.herokuapp.com</code>\r\nThen click Finish.\r\nDon\'t forget to click the <code>Save Changes</code> button.\r\n\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.\r\n\r\n', '3 steps to add your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '181-revision-v1', '', '', '2014-08-26 12:49:07', '2014-08-26 17:49:07', '', 181, 'http://dev.dorails.com/railsvitamins/181-revision-v1/', 0, 'revision', '', 0),
(183, 1, '2014-08-26 12:54:14', '2014-08-26 17:54:14', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\n<h3>1. Add domain to Heroku</h3>\nFirst open your command-line and go to your local app directory and enter this heroku command:\n<pre>$ cd /path/to/your/app/\n$ heroku domains\n</pre>\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code>\n\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\n<pre>$ heroku domains:add yourfancyapp.com\n$ heroku domains:add www.yourfancyapp.com\n</pre>\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\n<h3>2. Point your domain to Heroku</h3>\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. Now we need to add a CNAME to our DNS Then:\n<ol>\n	<li>Login, then click on <code>My Account</code>.</li>\n	<li>Then click on <code>Manage My Domains</code>.</li>\n	<li>Find your domain in the list and click on the name.</li>\n	<li>Then click on the tab <code>DNS Zone File</code>.</li>\n	<li>Click the <code>Add Record</code> button.</li>\n	<li>Then select <code>CNAME</code> from the Record type dropdown.</li>\n	<li>For Hostname enter <code>@</code></li>\n	<li>For Points to enter <code>your-app-name.herokuapp.com</code></li>\n	<li>Then click Finish.</li>\n	<li>Don\'t forget to click the <code>Save Changes</code> button.</li>\n</ol>\n<h3>3. Done</h3>\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.', '3 steps to direct your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '181-autosave-v1', '', '', '2014-08-26 12:54:14', '2014-08-26 17:54:14', '', 181, 'http://dev.dorails.com/railsvitamins/181-autosave-v1/', 0, 'revision', '', 0),
(184, 1, '2014-08-26 12:50:49', '2014-08-26 17:50:49', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n\r\n<h3>1. Add domain to Heroku</h3>\r\n\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>\r\n$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code> \r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>\r\n$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\n\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n\r\n<h3>2. Point your domain to Heroku</h3>\r\n\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. \r\n\r\nLogin, then click on <code>My Account</code>.\r\nThen click on <code>Manage My Domains</code>.\r\nFind your domain in the list and click on the name.\r\nThen click on the tab <code>DNS Zone File</code>.\r\nClick the <code>Add Record</code> button.\r\nThen select <code>CNAME</code> from the Record type dropdown.\r\nFor Hostname enter <code>@</code>\r\nFor Points to enter <code>your-app-name.herokuapp.com</code>\r\nThen click Finish.\r\nDon\'t forget to click the <code>Save Changes</code> button.\r\n\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.\r\n\r\n', '3 steps to direct your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '181-revision-v1', '', '', '2014-08-26 12:50:49', '2014-08-26 17:50:49', '', 181, 'http://dev.dorails.com/railsvitamins/181-revision-v1/', 0, 'revision', '', 0),
(186, 1, '2014-08-26 12:53:13', '2014-08-26 17:53:13', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n<h3>1. Add domain to Heroku</h3>\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code>\r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n<h3>2. Point your domain to Heroku</h3>\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. Then:\r\n<ol>\r\n	<li>Login, then click on <code>My Account</code>.</li>\r\n	<li>Then click on <code>Manage My Domains</code>.</li>\r\n	<li>Find your domain in the list and click on the name.</li>\r\n	<li>Then click on the tab <code>DNS Zone File</code>.</li>\r\n	<li>Click the <code>Add Record</code> button.</li>\r\n	<li>Then select <code>CNAME</code> from the Record type dropdown.</li>\r\n	<li>For Hostname enter <code>@</code></li>\r\n	<li>For Points to enter <code>your-app-name.herokuapp.com</code></li>\r\n	<li>Then click Finish.</li>\r\n	<li>Don\'t forget to click the <code>Save Changes</code> button.</li>\r\n</ol>\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.', '3 steps to direct your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '181-revision-v1', '', '', '2014-08-26 12:53:13', '2014-08-26 17:53:13', '', 181, 'http://dev.dorails.com/railsvitamins/181-revision-v1/', 0, 'revision', '', 0),
(187, 1, '2014-08-26 12:54:45', '2014-08-26 17:54:45', 'Here\'s a quick trick for how you can direct your custom domain name <code>yourfancyapp.com</code> to your live app on Heroku. This post assumes you actually have already pushed your app live to Heroku. If you haven\'t yet, that\'s okay checkout my post <a title="9 steps for first-time deployment to Heroku" href="http://dev.dorails.com/railsvitamins/9-steps-for-first-time-deployment-to-heroku/" target="_blank">here</a>.\r\n<h3>1. Add domain to Heroku</h3>\r\nFirst open your command-line and go to your local app directory and enter this heroku command:\r\n<pre>$ cd /path/to/your/app/\r\n$ heroku domains\r\n</pre>\r\nThis will show your current domains that work with your live Heroku app. You will likely see <code>random-name.herokuapp.com</code> or <code>your-custom-name.herokuapp.com</code>\r\n\r\nSo to add <code>yourfancyapp.com</code> just enter the following in your command-line:\r\n<pre>$ heroku domains:add yourfancyapp.com\r\n$ heroku domains:add www.yourfancyapp.com\r\n</pre>\r\nIn a nutshell, this command adds your domain as an alias and tells Heroku to listen for that domain name.\r\n<h3>2. Point your domain to Heroku</h3>\r\nThere are lots of domain registrar\'s so I\'m just going to show you how to do this with the most popular one, GoDaddy.com. If you haven\'t already purchased the domain go ahead and go there and do that. Now we need to add a CNAME to our DNS Records that points the domain to heroku. To do this:\r\n<ol>\r\n	<li>Login, then click on <code>My Account</code>.</li>\r\n	<li>Then click on <code>Manage My Domains</code>.</li>\r\n	<li>Find your domain in the list and click on the name.</li>\r\n	<li>Then click on the tab <code>DNS Zone File</code>.</li>\r\n	<li>Click the <code>Add Record</code> button.</li>\r\n	<li>Then select <code>CNAME</code> from the Record type dropdown.</li>\r\n	<li>For Hostname enter <code>@</code></li>\r\n	<li>For Points to enter <code>your-app-name.herokuapp.com</code></li>\r\n	<li>Then click Finish.</li>\r\n	<li>Don\'t forget to click the <code>Save Changes</code> button.</li>\r\n</ol>\r\n<h3>3. Done</h3>\r\nThere is no step 3. You are done. Check your new custom url to make sure that it\'s directing to your Heroku app. Depending on the registrar this could take some time to go through.', '3 steps to direct your custom domain to Heroku', '', 'inherit', 'open', 'open', '', '181-revision-v1', '', '', '2014-08-26 12:54:45', '2014-08-26 17:54:45', '', 181, 'http://dev.dorails.com/railsvitamins/181-revision-v1/', 0, 'revision', '', 0),
(188, 1, '2014-08-29 05:00:33', '2014-08-29 10:00:33', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\n<h4>Add Remote (for real this time)</h4>\r\nSo we\'ve got our remote repo ready, we just need to push our project to it. So back in the command-line you can now add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So you should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>.\r\n\r\nTo give you an idea though, you can set remote titles to push to different remotes once you know how it works. If it we\'re a staging site with a remote repo you might specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\n<h3>Bam!</h3>\r\nSo the basic steps for setting up Remotes are to:\r\n<ol>\r\n	<li>Setup local Git repo</li>\r\n	<li>Setup remote Git repo (this is the hard part)</li>\r\n	<li>Add remote to local Git repo</li>\r\n	<li>Push to your changes to your remote repo</li>\r\n</ol>\r\nI know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. But this shows you how it really works and how you can define as many remotes per project that you see fit.\r\n\r\nI love using tools like Git with Rails. But I\'ve even used this understanding of remotes to add repos on my Digital Ocean servers for Wordpress sites to Railsify my WP workflow as well.\r\n\r\nLet me know if you have any questions about remotes, there are a lot of different things you can do with them.', 'A beginners guide to the what, why & how of Git remotes', '', 'publish', 'open', 'open', '', 'a-beginners-guide-to-the-what-why-how-of-git-remotes', '', '', '2014-08-26 16:23:59', '2014-08-26 21:23:59', '', 0, 'http://dev.dorails.com/?p=188', 0, 'post', '', 0),
(189, 1, '2014-08-26 14:10:09', '2014-08-26 19:10:09', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you some time putzing around on your own.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a remote location than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But pushing to Heroku is just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> command work. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it\'s done it\'s easy. You may have done a few of these things before, but I want to challenge you to think about it differently. For those that learn best by doing, start <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">here</a>. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Viewing your remotes</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project and type the following command:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n(make any change)\r\n$ cd add .\r\n$ cd commit .\r\n\r\n$ git remote -v\r\n</pre>\r\nYou will likely see nothing, because you haven\'t setup any remotes yet.\r\nThe quickest, easiest way to add a remote is with Github\r\n<h4>Adding a remote</h4>\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. So to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 14:10:09', '2014-08-26 19:10:09', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(190, 1, '2014-08-26 15:14:03', '2014-08-26 20:14:03', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you some time putzing around on your own.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a remote location than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But pushing to Heroku is just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> command work. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:14:03', '2014-08-26 20:14:03', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(191, 1, '2014-08-26 15:15:06', '2014-08-26 20:15:06', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a remote location than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But pushing to Heroku is just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> command work. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:15:06', '2014-08-26 20:15:06', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(192, 1, '2014-08-26 15:16:32', '2014-08-26 20:16:32', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a remote <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But pushing to Heroku is just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> command work. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:16:32', '2014-08-26 20:16:32', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(193, 1, '2014-08-26 16:19:18', '2014-08-26 21:19:18', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\n<h3>What is a Git remote?</h3>\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\n\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\n\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\n\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\n<h3>Why do you need remotes?</h3>\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\n<h3>How do you use remotes?</h3>\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\n<h4>Attempt to Push</h4>\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\n<pre>$ cd ~/Desktop\n$ mkdir new_project\n$ cd new_project\n$ cd git init  # create new git repo\n$ touch fancyfile.rb  # create any file\n$ git add .\n$ git commit -am "Created a fancy file"\n$ git push \n</pre>\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\n<pre>fatal: No configured push destination.</pre>\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\n<h4>View your remotes</h4>\nTo see a list of all of your remotes enter this command:\n<pre>$ git remote -v</pre>\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\n<h4>Adding a remote</h4>\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\n<h4>Setup remote repo</h4>\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\n<ol>\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\n</ol>\n<h4>Add Remote (for real this time)</h4>\nSo we\'ve got our remote repo ready, we just need to push our project to it. So back in the command-line you can now add the remote like we tried above:\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\n<h4>Try pushing again</h4>\nOkay so our remote repo url has been added to our local repo! Woohoo. So you should just be able to push right to it now, right?\n<pre>$ git push</pre>\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\n<h4>Set Default Remote</h4>\nSo go ahead and define exactly where you want your default push command to go by entering\n<pre>git push --set-upstream origin master</pre>\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>.\n\nTo give you an idea though, you can set remote titles to push to different remotes once you know how it works. If it we\'re a staging site with a remote repo you might specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc, etc.\n\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\n<pre>$ git add .\n$ git commit -am "More Changes"\n$ git push \n</pre>\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. But this shows you how it really works and how you can define as many remotes per project that you see fit.\n\nSo the basic steps are to:\n<ol>\n	<li>Setup local Git repo</li>\n	<li>Setup remote Git repo</li>\n	<li>Add remote to local Git repo</li>\n	<li>Push to</li>\n</ol>\nI love using tools like Git with Rails. But I\'ve even used this understanding of remotes to add repos on my Digital Ocean servers for Wordpress sites to Railsify my WP workflow as well. Let me know if you have any questions about remotes, there are a lot of different things you can do with them.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-autosave-v1', '', '', '2014-08-26 16:19:18', '2014-08-26 21:19:18', '', 188, 'http://dev.dorails.com/railsvitamins/188-autosave-v1/', 0, 'revision', '', 0),
(194, 1, '2014-08-26 15:19:15', '2014-08-26 20:19:15', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> command work. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:19:15', '2014-08-26 20:19:15', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(195, 1, '2014-08-26 15:28:55', '2014-08-26 20:28:55', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n(Photo of local repo fanning out to github, heroku, other servers)\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:28:55', '2014-08-26 20:28:55', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(196, 1, '2014-08-26 15:44:25', '2014-08-26 20:44:25', '', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', 'git-remotes', '', '', '2014-08-26 15:44:25', '2014-08-26 20:44:25', '', 188, 'http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg', 0, 'attachment', 'image/jpeg', 0),
(197, 1, '2014-08-26 15:45:52', '2014-08-26 20:45:52', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter size-medium wp-image-196" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes-271x300.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="271" height="300" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:45:52', '2014-08-26 20:45:52', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(198, 1, '2014-08-26 15:46:21', '2014-08-26 20:46:21', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="size-medium wp-image-196 aligncenter" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes-271x300.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="271" height="300" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:46:21', '2014-08-26 20:46:21', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(199, 1, '2014-08-26 15:47:29', '2014-08-26 20:47:29', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this and try to so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nNow once you have a project with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:47:29', '2014-08-26 20:47:29', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(200, 1, '2014-08-26 15:54:59', '2014-08-26 20:54:59', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A ground total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:54:59', '2014-08-26 20:54:59', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(201, 1, '2014-08-26 15:56:20', '2014-08-26 20:56:20', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd /path/to/project/\r\n$ cd git init # if you haven\'t already\r\n$ touch fancyfile.rb # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of none. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:56:20', '2014-08-26 20:56:20', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(202, 1, '2014-08-26 15:59:39', '2014-08-26 20:59:39', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github\r\nLike a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 15:59:39', '2014-08-26 20:59:39', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(203, 1, '2014-08-26 16:03:24', '2014-08-26 21:03:24', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help with starting Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 16:03:24', '2014-08-26 21:03:24', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(204, 1, '2014-08-26 16:03:56', '2014-08-26 21:03:56', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\nNow you can add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 16:03:56', '2014-08-26 21:03:56', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(205, 1, '2014-08-26 16:08:06', '2014-08-26 21:08:06', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\n<h4>Add Remote (for real this time)</h4>\r\nSo we\'ve got our remote repo ready, we just need to push our project to it. So back in the command-line you can now add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So you should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>. If it we\'re a staging site with a remote repo you could specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\nBam! I know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. It\'s more like error driven development. But this shows you how it really works and how you can define as many remotes per project that you see fit.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 16:08:06', '2014-08-26 21:08:06', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(206, 1, '2014-08-26 16:20:36', '2014-08-26 21:20:36', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\n<h4>Add Remote (for real this time)</h4>\r\nSo we\'ve got our remote repo ready, we just need to push our project to it. So back in the command-line you can now add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So you should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>.\r\n\r\nTo give you an idea though, you can set remote titles to push to different remotes once you know how it works. If it we\'re a staging site with a remote repo you might specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\n<h3>Bam!</h3>\r\nSo the basic steps for setting up Remotes are to:\r\n<ol>\r\n	<li>Setup local Git repo</li>\r\n	<li>Setup remote Git repo</li>\r\n	<li>Add remote to local Git repo</li>\r\n	<li>Push to your changes to your remote repo</li>\r\n</ol>\r\nI know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. But this shows you how it really works and how you can define as many remotes per project that you see fit.\r\n\r\nI love using tools like Git with Rails. But I\'ve even used this understanding of remotes to add repos on my Digital Ocean servers for Wordpress sites to Railsify my WP workflow as well.\r\n\r\nLet me know if you have any questions about remotes, there are a lot of different things you can do with them.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 16:20:36', '2014-08-26 21:20:36', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(207, 1, '2014-08-26 16:23:59', '2014-08-26 21:23:59', 'Git remotes we\'re confusing to me at first. What are Git remotes? Why do I need them? And how do I use them? It took me awhile to figure this out so I\'m hoping this will get you up to speed and save you from putzing around on your own like I did.\r\n<h3>What is a Git remote?</h3>\r\nA git <em>remote</em> is a remote repository or repo in another location. I feel like they could\'ve just called them <em>remote repos</em> instead. As I\'ve gotten further along with Git I\'ve gathered that a git remote is <strong>any</strong> other repo besides your current local repo that you can push to. At first I thought that a remote would actually <em>control</em> my code like a TV remote control or something. Turns out, it\'s much more practical to think of it as the TV that is being controlled – it\'s more of a <strong>remote</strong> <strong>location</strong> than a tool for controlling.\r\n\r\nFor example: If you have a local Git repo, setting up that repo to push to Github is just a quick everyday example of setting up a <em>remote </em>(or remote repo) for your project.  Github is the <em>remote </em>or remote repo. If you haven\'t done that checkout my tutorials on how to setup <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">Git</a> &amp; <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">Github</a>. Github is nothing more than a fancy collection of remote repos. Heroku is another example. Heroku is a "platform as a service" that does the heavy lifting for configuring a live server. But by pushing to Heroku you are just pushing to another <em>remote</em> (repo).\r\n\r\nThis picture says it best. You\'re local repo pushes out to any remotes that you tell it to. Github, Staging Server, Production Server (like Heroku)\r\n\r\n<a href="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg"><img class="aligncenter img-responsive wp-image-196 size-full" src="http://dev.dorails.com/wp-content/uploads/2014/08/git-remotes.jpg" alt="A beginners guide to the what, why &amp; how of Git remotes" width="600" height="663" /></a>\r\n<h3>Why do you need remotes?</h3>\r\nRemotes are what makes the <code>$ git push</code> and  <code>$ git pull</code> commands possible. You\'d have nowhere to push without setting up remotes. Remotes have a lot of different purposes so I\'ll tell you why I need them. I need to setup my local Git repos to have multiple remotes so that I can push my source code to a unified place (like Github). This helps me access my code from anywhere and lets me collaborate more easily. I also need remotes setup so I can easily push to development servers for collaborating. I need to push code to staging sites to show clients work once it\'s ready to show off. And lastly I use remotes to easily push code changes to live websites and apps. This way you don\'t have to deal with the many perils of FTP, overwriting files, and *yikes* making changes on a live server. I just type $ git push heroku and my changes are live in a few seconds – no thinking required.\r\n<h3>How do you use remotes?</h3>\r\nIt\'s tricky at first, but once you see how it works it\'s easy. I\'m going to show you a kind of backwards way of doing remotes so you can get an idea of the ins-and-outs. You may have done a few of these things before, but I want to challenge you to try this a different way so you can think about it differently. If you haven\'t setup Git and setup a local repo on a project go ahead and <a title="Get going with Git" href="http://dev.dorails.com/railsvitamins/get-going-with-git/">do that now</a>. I\'ll wait :)\r\n<h4>Attempt to Push</h4>\r\nLet\'s start with the goal. We have a project that we want to push to a remote repo. Now once you have a new project folder with a git repo on it open up command-line, <code>cd</code> (change directory) into your project, add a new file (anything) and then try to push the changes:\r\n<pre>$ cd ~/Desktop\r\n$ mkdir new_project\r\n$ cd new_project\r\n$ cd git init  # create new git repo\r\n$ touch fancyfile.rb  # create any file\r\n$ git add .\r\n$ git commit -am "Created a fancy file"\r\n$ git push \r\n</pre>\r\nWell, you tried and you can\'t push! You\'ll notice that command line is yelling at you now. It probably says something like:\r\n<pre>fatal: No configured push destination.</pre>\r\nAnd git is nice enough to give you some instructions on what to do. Which we will ignore for now :). The reason you can\'t push is because you don\'t have a remote (repo) setup to push to.\r\n<h4>View your remotes</h4>\r\nTo see a list of all of your remotes enter this command:\r\n<pre>$ git remote -v</pre>\r\nThis shows you the remote repos that you can push to. A grand total of <strong>none</strong>. You should see no response in command-line as if you\'ve done nothing. That\'s okay we already knew that we don\'t have a remote yet.\r\n<h4>Adding a remote</h4>\r\nSo how do we add a remote? The quickest, easiest way to add a remote is with Github. Like a said earlier, a Github repo is just a <em>remote</em> repo. To add a remote you will go into command-line and enter\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nYou probably don\'t know your Github URL yet because you haven\'t set it up on Github, that means you will need to setup an empty repo on Github.\r\n<h4>Setup remote repo</h4>\r\nSo to setup the remote, signup for Github if you haven\'t already. If you need help starting with Github, go <a title="Hop on the Github bandwagon" href="http://dev.dorails.com/railsvitamins/hop-on-the-github-bandwagon/">here</a>. But assuming you have a Github account already, log in and do this:\r\n<ol>\r\n	<li>Click on the <code>+</code> sign dropdown in the top right, then click <code>New Repository</code></li>\r\n	<li>On the next page, enter <code>fancy_name</code> for your repo name, select <code>Public</code>, then click <code>Create Repo</code>. (You don\'t have to have description)</li>\r\n	<li>Believe it or not your remote repo (Github repo) has been created it\'s just empty</li>\r\n</ol>\r\n<h4>Add Remote (for real this time)</h4>\r\nSo we\'ve got our remote repo ready, we just need to push our project to it. So back in the command-line you can now add the remote like we tried above:\r\n<pre>$ git remote add origin https://github.com/UserName/repo_name.git</pre>\r\nIt\'s good to know that the <code>origin</code> is interchangeable with any title. This is the title of your remote. I\'ve used titles like "live", "stage", and "dev". But it doesn\'t really matter so long as it makes sense. Origin is a nice term for Github though because it is supposed to be your authoritative source code.\r\n<h4>Try pushing again</h4>\r\nOkay so our remote repo url has been added to our local repo! Woohoo. So you should just be able to push right to it now, right?\r\n<pre>$ git push</pre>\r\nWrong. Ugh.. If you entered this command you probably saw the message saying that the current branch has no upstream. What the heck is an upstream and why do I need to define one? Well, basically it defines the default remote (repo) and branch that you will be pushing to when you enter <code>$ git push</code>. This makes more sense once you start pushing to multiple remotes: dev repos, staging repos, live repos (like Heroku). You say "push" and Git asks "Which repo and which branch in that repo do you want to push to?".\r\n<h4>Set Default Remote</h4>\r\nSo go ahead and define exactly where you want your default push command to go by entering\r\n<pre>git push --set-upstream origin master</pre>\r\nThis is telling Git to set the default push destination to be your "origin" remote (your new github repo) and specifies that it should be pushed to the master branch of that repo. More on branches later. This sets the default and pushes your changes back to back. All changes from now on can be added, committed and then you just run <code>$ git push</code>.\r\n\r\nTo give you an idea though, you can set remote titles to push to different remotes once you know how it works. If it we\'re a staging site with a remote repo you might specify by doing <code>$ git push staging master </code>, and for pushing live <code>$ git push live master</code>, etc, etc.\r\n\r\nAnother way around the upstream thing would be to just not define a default remote &amp; branch and specify <strong>every</strong> single time you push like so, <code>$ git push origin my_branch</code>. But thats no fun. Less is more.\r\n<h4>Okay okay okay can I push <strong>now</strong>?</h4>\r\nAlas, push that fantastic code over to your new remote now. Make another quick change and make sure it works.\r\n<pre>$ git add .\r\n$ git commit -am "More Changes"\r\n$ git push \r\n</pre>\r\n<h3>Bam!</h3>\r\nSo the basic steps for setting up Remotes are to:\r\n<ol>\r\n	<li>Setup local Git repo</li>\r\n	<li>Setup remote Git repo (this is the hard part)</li>\r\n	<li>Add remote to local Git repo</li>\r\n	<li>Push to your changes to your remote repo</li>\r\n</ol>\r\nI know this was a backasswards way of showing you remotes and you\'ve likely setup a Github repo before. But this shows you how it really works and how you can define as many remotes per project that you see fit.\r\n\r\nI love using tools like Git with Rails. But I\'ve even used this understanding of remotes to add repos on my Digital Ocean servers for Wordpress sites to Railsify my WP workflow as well.\r\n\r\nLet me know if you have any questions about remotes, there are a lot of different things you can do with them.', 'A beginners guide to the what, why & how of Git remotes', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2014-08-26 16:23:59', '2014-08-26 21:23:59', '', 188, 'http://dev.dorails.com/railsvitamins/188-revision-v1/', 0, 'revision', '', 0),
(208, 1, '2014-08-31 20:11:39', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2014-08-31 20:11:39', '0000-00-00 00:00:00', '', 0, 'http://dev.dorails.com/?p=208', 0, 'post', '', 0),
(209, 1, '2014-09-01 21:21:13', '2014-09-02 02:21:13', ' ', '', '', 'publish', 'open', 'open', '', '209', '', '', '2014-09-01 21:22:01', '2014-09-02 02:22:01', '', 0, 'http://dev.dorails.com/?p=209', 4, 'nav_menu_item', '', 0),
(210, 1, '2014-09-01 21:20:27', '0000-00-00 00:00:00', '', 'More', '', 'draft', 'open', 'open', '', '', '', '', '2014-09-01 21:20:27', '0000-00-00 00:00:00', '', 0, 'http://dev.dorails.com/?p=210', 1, 'nav_menu_item', '', 0),
(211, 1, '2014-09-01 21:21:39', '2014-09-02 02:21:39', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other people don\'t have to go through all the heartache that I did to learn Ruby on Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'publish', 'closed', 'closed', '', 'about', '', '', '2014-09-02 13:31:21', '2014-09-02 18:31:21', '', 0, 'http://dev.dorails.com/?page_id=211', 0, 'page', '', 0),
(212, 1, '2014-09-01 21:21:39', '2014-09-02 02:21:39', '', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-01 21:21:39', '2014-09-02 02:21:39', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(213, 1, '2014-09-01 21:22:01', '2014-09-02 02:22:01', ' ', '', '', 'publish', 'open', 'open', '', '213', '', '', '2014-09-01 21:22:01', '2014-09-02 02:22:01', '', 0, 'http://dev.dorails.com/?p=213', 1, 'nav_menu_item', '', 0),
(214, 1, '2014-09-02 10:59:01', '2014-09-02 15:59:01', '<h1>About</h1>\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\n<div>\n\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\n\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other developers don\'t have to go through all the heartache that I did to learn Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. If I waste 10 hours on a , I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\n\nBy the way, I\'ve got a new course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\n\nCheers,\nTy\n\nMaybe you have questions about something you\'re stuck on in Rails, front-end, back-end, design, managing time, hourly rates, client problems, invoicing/propsals, you name it...\n\n</div>\n<div>\n\nFeel free to keep it short if you\'re busy, but I\'d still love to hear from you. I read and reply to every email that comes my way. Thanks again for joining, and I hope you\'re having an awesome day.\n\nCheers,\nTy\n\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-autosave-v1', '', '', '2014-09-02 10:59:01', '2014-09-02 15:59:01', '', 211, 'http://dev.dorails.com/railsvitamins/211-autosave-v1/', 0, 'revision', '', 0),
(215, 1, '2014-09-02 10:31:32', '2014-09-02 15:31:32', '<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m am a full-stack developer and "tweener" as they say because I do design &amp; development. In 2003 I started freelancing as a web developer &amp; designer. I officially started my web &amp; mobile app development biz back in 2011 and kept growing from there. I started with PHP &amp; Wordpress sites and slowly worked my way to web &amp; mobile apps. Now we\'ve got clients all over the US and a small team of remote developers &amp; designers. You can learn about Paradox <a href="http://paradoxcreative.com/" target="_blank">here</a>.</div>\r\n<div>\r\n\r\nI have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle projects, clients, and a team, along with the day-to-day business admin stuff. Here\'s my chance to pay it forward to other freelancers and make sure you don\'t run into all the problems I have.\r\n\r\nBy the way, I\'ve got a new course I am releasing called Rails Curve that helps speed up the learning curve for Ruby on Rails. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>.\r\n\r\nMaybe you have questions about something you\'re stuck on in Rails, front-end, back-end, design, managing time, hourly rates, client problems, invoicing/propsals, you name it...\r\n\r\n</div>\r\n<div>\r\n\r\nFeel free to keep it short if you\'re busy, but I\'d still love to hear from you. I read and reply to every email that comes my way. Thanks again for joining, and I hope you\'re having an awesome day.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About do_rails', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 10:31:32', '2014-09-02 15:31:32', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(216, 1, '2014-09-02 10:32:48', '2014-09-02 15:32:48', '<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m am a full-stack developer and "tweener" as they say because I do design &amp; development. In 2003 I started freelancing as a web developer &amp; designer. I officially started my web &amp; mobile app development biz back in 2011 and kept growing from there. I started with PHP &amp; Wordpress sites and slowly worked my way to web &amp; mobile apps. Now we\'ve got clients all over the US and a small team of remote developers &amp; designers. You can learn about Paradox <a href="http://paradoxcreative.com/" target="_blank">here</a>.</div>\r\n<div>\r\n\r\nI have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle projects, clients, and a team, along with the day-to-day business admin stuff. Here\'s my chance to pay it forward to other freelancers and make sure you don\'t run into all the problems I have.\r\n\r\nBy the way, I\'ve got a new course I am releasing called Rails Curve that helps speed up the learning curve for Ruby on Rails. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>.\r\n\r\nMaybe you have questions about something you\'re stuck on in Rails, front-end, back-end, design, managing time, hourly rates, client problems, invoicing/propsals, you name it...\r\n\r\n</div>\r\n<div>\r\n\r\nFeel free to keep it short if you\'re busy, but I\'d still love to hear from you. I read and reply to every email that comes my way. Thanks again for joining, and I hope you\'re having an awesome day.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 10:32:48', '2014-09-02 15:32:48', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(217, 1, '2014-09-02 10:32:59', '2014-09-02 15:32:59', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m am a full-stack developer and "tweener" as they say because I do design &amp; development. In 2003 I started freelancing as a web developer &amp; designer. I officially started my web &amp; mobile app development biz back in 2011 and kept growing from there. I started with PHP &amp; Wordpress sites and slowly worked my way to web &amp; mobile apps. Now we\'ve got clients all over the US and a small team of remote developers &amp; designers. You can learn about Paradox <a href="http://paradoxcreative.com/" target="_blank">here</a>.</div>\r\n<div>\r\n\r\nI have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle projects, clients, and a team, along with the day-to-day business admin stuff. Here\'s my chance to pay it forward to other freelancers and make sure you don\'t run into all the problems I have.\r\n\r\nBy the way, I\'ve got a new course I am releasing called Rails Curve that helps speed up the learning curve for Ruby on Rails. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>.\r\n\r\nMaybe you have questions about something you\'re stuck on in Rails, front-end, back-end, design, managing time, hourly rates, client problems, invoicing/propsals, you name it...\r\n\r\n</div>\r\n<div>\r\n\r\nFeel free to keep it short if you\'re busy, but I\'d still love to hear from you. I read and reply to every email that comes my way. Thanks again for joining, and I hope you\'re having an awesome day.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 10:32:59', '2014-09-02 15:32:59', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(218, 1, '2014-09-02 11:00:40', '2014-09-02 16:00:40', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other developers don\'t have to go through all the heartache that I did to learn Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:00:40', '2014-09-02 16:00:40', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(219, 1, '2014-09-02 11:03:00', '2014-09-02 16:03:00', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<h2>Hello</h2>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other developers don\'t have to go through all the heartache that I did to learn Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:03:00', '2014-09-02 16:03:00', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(220, 1, '2014-09-02 11:07:25', '2014-09-02 16:07:25', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other developers don\'t have to go through all the heartache that I did to learn Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:07:25', '2014-09-02 16:07:25', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(221, 1, '2014-09-02 11:09:33', '2014-09-02 16:09:33', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other people don\'t have to go through all the heartache that I did to learn Ruby on Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:09:33', '2014-09-02 16:09:33', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(222, 1, '2014-09-02 11:27:37', '2014-09-02 16:27:37', '', 'Ty Richards', '', 'inherit', 'open', 'open', '', 'tyrichards', '', '', '2014-09-02 11:27:37', '2014-09-02 16:27:37', '', 211, 'http://dev.dorails.com/wp-content/uploads/2014/09/TyRichards.jpg', 0, 'attachment', 'image/jpeg', 0),
(223, 1, '2014-09-02 11:43:16', '2014-09-02 16:43:16', '<h1>About</h1>\r\n<div><a href="http://dev.dorails.com/wp-content/uploads/2014/09/TyRichards.jpg"><img class="size-medium wp-image-222 alignleft" src="http://dev.dorails.com/wp-content/uploads/2014/09/TyRichards-300x300.jpg" alt="Ty Richards - do_rails" width="300" height="300" /></a>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other people don\'t have to go through all the heartache that I did to learn Ruby on Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:43:16', '2014-09-02 16:43:16', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(224, 1, '2014-09-02 11:43:52', '2014-09-02 16:43:52', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle   projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other people don\'t have to go through all the heartache that I did to learn Ruby on Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 11:43:52', '2014-09-02 16:43:52', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(225, 1, '2014-09-02 11:47:51', '2014-09-02 16:47:51', '', 'About Sidebar', '', 'publish', 'closed', 'closed', '', 'about-sidebar', '', '', '2014-09-02 11:58:33', '2014-09-02 16:58:33', '', 0, 'http://dev.dorails.com/?post_type=sidebar&#038;p=225', 0, 'sidebar', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(226, 1, '2014-09-02 13:31:21', '2014-09-02 18:31:21', '<h1>About</h1>\r\n<div>I\'ll start by introducing myself. My name is Ty. I\'m passionate about building digital things, writing/recording music, and traveling. I\'m a full-stack Rails developer and "tweener" (design <strong>and</strong> programming). I have a design degree but zero formal education in Computer Science. I run a web &amp; mobile shop called <a href="http://paradoxcreative.com" target="_blank">Paradox</a>. I started with PHP/Wordpress sites and slowly worked my way to Ruby on Rails web apps &amp; mobile apps. Now I\'ve got clients all over the US and a small team of remote developers &amp; designers.</div>\r\n<div>\r\n\r\nThat being said, I have screwed up so many things along the way (and still do), and learned a <strong>lot</strong> of things the hard way. I juggle projects, clients, and a team, along with the day-to-day business admin stuff. I daily hack my way through UI Designs, UX, database admin, security, front-end dev, backend-dev, server configurations, etc, etc. As a n0n-computer-science guy, learning programming was a huge struggle for me because most of the Rails resources out there are geared for "engineers". Here\'s my chance to pay it forward to other Rails developers and entrepreneurs and make sure you don\'t run into all the problems I have.\r\n<h2>Why do_rails?</h2>\r\nI created <a title="Home" href="http://dev.dorails.com/">do_rails</a> so that other people don\'t have to go through all the heartache that I did to learn Ruby on Rails. I also want to fill the void in education for people who don\'t have Computer Science degrees. I learn best by doing, and think a lot of people learn this way too, so do_rails is geared towards this learning style. I figured it took me about a year to learn the basics of Ruby on Rails, but I could show someone what I learned in a matter of days. Also, if I waste 10 hours on a problem, I\'m sure I\'m not the first - so I\'ll post it here and hopefully save you the trouble.\r\n\r\nThat\'s it in a nutshell. By the way, I\'ve got a new crash course called Rails Curve that helps you build a Ruby on Rails app in 30 days. You can learn more about it <a href="http://dorails.com/railscurve" target="_blank">here</a>. And you can see my weekly posts on the blog <a title="Rails Vitamins" href="http://dev.dorails.com/railsvitamins/" target="_blank">here</a>.\r\n\r\nCheers,\r\nTy\r\n\r\n</div>', 'About', '', 'inherit', 'open', 'open', '', '211-revision-v1', '', '', '2014-09-02 13:31:21', '2014-09-02 18:31:21', '', 211, 'http://dev.dorails.com/railsvitamins/211-revision-v1/', 0, 'revision', '', 0),
(227, 1, '2014-09-03 11:00:05', '2014-09-03 16:00:05', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When you\'re done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes when you see the prompt <code>Save modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?</code>. Then the screen will say <code>File Name to Write: readme.md</code>. You could change the name of the file here but you don\'t want to so press enter. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want in there, and then press <code>cmd-S</code> to save and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'publish', 'open', 'open', '', 'getting-started-with-command-line', '', '', '2014-09-03 14:32:27', '2014-09-03 19:32:27', '', 0, 'http://dev.dorails.com/?p=227', 0, 'post', '', 0),
(228, 1, '2014-09-03 08:44:06', '2014-09-03 13:44:06', 'If you aren\'t familiar with command-line, it can be intimidating at first. I want to encourage you to dive in though! Checkout this quick crash course for command-line, and you will have it down in no time.\r\n\r\n&nbsp;\r\n<h3>Navigating</h3>\r\n$ cd ~/Desktop\r\n\r\n$ pwd\r\n\r\n$ ls\r\n<h3>Creating Folders</h3>\r\n$ mkdir Test\r\n\r\n$ ls\r\n\r\n$ mv Test \'Test Folder\'\r\n\r\n$ cp \'Test Folder\' \'Test Folder Copy\'\r\n\r\n$ cd \'Test Folder Copy\'\r\n\r\n(use tab)\r\n<h3>Creating &amp; Editing Files</h3>\r\n$ touch readme.md\r\n\r\n$ nano readme.md (use tab)\r\n\r\n$ Add some text (Hello World!)\r\n\r\nctrl-X to exit, then press Y to agree to save changes\r\n\r\nOr use $ cat readme.md\r\n\r\nYou can also type $ open readme.md to open in your default text editor\r\n<h3>Custom Command-Line Tools</h3>\r\nI use Sublime Text, so I\'ve setup a custom command-line tools that allow me to open files and even entire directories within Sublime. I highly recommend doing this. It takes a minute to setup, but it\'s worth it.\r\n<h3>Tips</h3>\r\nWeen yourself off using Finder Windows to navigate your files.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with command-line', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 08:44:06', '2014-09-03 13:44:06', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(229, 1, '2014-09-03 08:56:05', '2014-09-03 13:56:05', 'If you aren\'t familiar with command-line, it can be intimidating at first. I want to encourage you to dive in though! Checkout this quick crash course for command-line, and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nOpen Terminal\r\n\r\n$ ls\r\n\r\n$ cd ~/Desktop\r\n\r\n$ pwd\r\n\r\n$ ls\r\n<h3>Creating Folders</h3>\r\n$ mkdir Test\r\n\r\n$ ls\r\n\r\n$ mv Test \'Test Folder\'\r\n\r\n$ cp \'Test Folder\' \'Test Folder Copy\'\r\n\r\n$ cd \'Test Folder Copy\'\r\n\r\n(use tab)\r\n<h3>Creating &amp; Editing Files</h3>\r\n$ touch readme.md\r\n\r\n$ nano readme.md (use tab)\r\n\r\n$ Add some text (Hello World!)\r\n\r\nctrl-X to exit, then press Y to agree to save changes\r\n\r\nOr use $ cat readme.md\r\n\r\nYou can also type $ open readme.md to open in your default text editor\r\n<h3>Custom Command-Line Tools</h3>\r\nI use Sublime Text, so I\'ve setup a custom command-line tools that allow me to open files and even entire directories within Sublime. I highly recommend doing this. It takes a minute to setup, but it\'s worth it.\r\n\r\nFirst create a "symbolic link" in your /bin folder by entering the command below\r\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\r\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. Once this is working open a new terminal window, <code>cd</code> to your <code>\'~/Desktop/Test Folder\' and then type:\r\n\r\n<pre>$ subl readme.md</pre>\r\n\r\n<h3>Tips</h3>\r\nWeen yourself off using Finder Windows to navigate your files.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with command-line', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 08:56:05', '2014-09-03 13:56:05', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(230, 1, '2014-09-03 12:16:55', '2014-09-03 17:16:55', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\n\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\n<h3>Getting around</h3>\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\n\nOnce Terminal is open type:\n<pre>$ pwd</pre>\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\n\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\n<pre>$ ls</pre>\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\n\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\n<pre>$ cd Desktop</pre>\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\n<h3>Creating Folders</h3>\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\n<pre>$ mkdir Test</pre>\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\n\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\n<pre>$ mv Test \'My Awesome Project\'</pre>\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\n\nTo copy the folder you can just use the <code>$ cp</code> command:\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\n\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\n<h3>Creating &amp; Editing Files</h3>\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\n<pre>$ cd \'My Awesome Project\'</pre>\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\n<pre>$ touch readme.md</pre>\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\n\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\n<h4>Edit files right from Terminal</h4>\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\n<pre>$ nano readme.md</pre>\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When you\'re done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes when you see the prompt <code>Save modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?</code>. Then the screen will say <code>File Name to Write: readme.md</code>. You should now be back to your regular screen.\n\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\n<h4>Edit files in a text editor</h4>\nThe fastest way to open files in a text editor from the command line would be to type the following:\n<pre>$ open readme.md</pre>\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\n<h3>Sanity Check</h3>\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\n<h3>Recap of Commands</h3>\n<ul>\n	<li><code>$ pwd</code> = print working directory</li>\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\n	<li><code>$ rm filename</code> = remove (delete) file</li>\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\n	<li><code>$ touch filename</code> = create file with filename</li>\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\n	<li><code>$ cat filename</code> = display contents of file</li>\n</ul>\n<h3>Tools</h3>\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\n\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\n<ul>\n<ul>\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\n	<li>you can easily browse files within it</li>\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\n</ul>\n</ul>\n<h3>Tips</h3>\n<ul>\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\n</ul>\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-autosave-v1', '', '', '2014-09-03 12:16:55', '2014-09-03 17:16:55', '', 227, 'http://dev.dorails.com/railsvitamins/227-autosave-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(231, 1, '2014-09-03 09:22:59', '2014-09-03 14:22:59', 'If you aren\'t familiar with command-line, it can be intimidating at first. I want to encourage you to dive in though! Checkout this quick crash course for command-line, and you will have it down in no time.\r\n\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal. You may want to drag this to your dock for easy access.\r\n\r\nOnce Terminal is open type:\r\n\r\n<pre>$ pwd</pre>\r\n\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n\r\n<pre>$ ls</pre>\r\n\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktopType the command:\r\n\r\n<pre>$ cd ~/Desktop</pre>\r\n\r\n$ pwd\r\n\r\n$ ls\r\n<h3>Creating Folders</h3>\r\n$ mkdir Test\r\n\r\n$ ls\r\n\r\n$ mv Test \'Test Folder\'\r\n\r\n$ cp \'Test Folder\' \'Test Folder Copy\'\r\n\r\n$ cd \'Test Folder Copy\'\r\n\r\n(use tab)\r\n<h3>Creating &amp; Editing Files</h3>\r\n$ touch readme.md\r\n\r\n$ nano readme.md (use tab)\r\n\r\n$ Add some text (Hello World!)\r\n\r\nctrl-X to exit, then press Y to agree to save changes\r\n\r\nOr use $ cat readme.md\r\n\r\n$ clear\r\n\r\nYou can also type $ open readme.md to open in your default text editor\r\n<h3>Custom Command-Line Tools</h3>\r\nI use Sublime Text, so I\'ve setup a custom command-line tools that allow me to open files and even entire directories within Sublime. I highly recommend doing this. It takes a minute to setup, but it\'s worth it.\r\n\r\nFirst create a "symbolic link" in your /bin folder by entering the command below\r\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\r\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. Once this is run, open a new terminal window and <code>cd</code> to your <code>\'~/Desktop/Test Folder\'</code> and then type:\r\n<pre>$ subl readme.md</pre>\r\nAlso try to open the entire folder with:\r\n<pre>$ subl .</pre>\r\nYou should now see the folder and all files in it. There\'s just one file in there now, but you can imagine how useful this would be if you had entire Rails project open and you could easily navigate through the files &amp; folders this way.\r\n\r\n<h3>Tools</h3>\r\nLike I said I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<li>you can browse files within it</li>\r\n<li>you can open files directly from the command-line</li>\r\n<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\n<h3>Tips</h3>\r\nWean yourself off using Finder windows to navigate your files.\r\nCreate a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this here.\r\n \r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with command-line', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 09:22:59', '2014-09-03 14:22:59', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(232, 1, '2014-09-03 11:07:08', '2014-09-03 16:07:08', 'If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. I want to encourage you to dive in though! Checkout this quick crash-course for command-line, and you will have it down in no time.\r\n\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal. You may want to drag this to your dock for easy access. Keep in mind every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n\r\n<pre>$ mkdir Test</pre>\r\n\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\n\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now. \r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\n\r\nThis command copies your <code>My Awesome Project</code folder within the same directory with a new name <code>My Awesome Folder Copy</code>. <code>$ ls</code> to see the results. \r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n\r\n<h3>Creating &amp; Editing Files</h3>\r\n\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:  \r\n\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\n\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n\r\n<pre>$ touch readme.md</pre>\r\n\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there. \r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n\r\n<h4>Edit files in terminal</h4>\r\n\r\nTo make a quick addition in terminal use the <code>$ nano</code> command.\r\n\r\n<pre>$ nano readme.md</pre>\r\n\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen. \r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n\r\n<h4>Edit files in a text editor</h4>\r\n\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n\r\n<pre>$ open readme.md</pre>\r\n\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n\r\n<h3>Sanity Check</h3>\r\n\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. \r\n\r\n<h3>Tools</h3>\r\nLike I said I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you can browse files within it</li>\r\n	<li>you can open files directly from the command-line</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n<h3>Tips</h3>\r\n$ clear\r\nWean yourself off using Finder windows to navigate your files.\r\nCreate a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this here.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:07:08', '2014-09-03 16:07:08', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(233, 1, '2014-09-03 11:30:23', '2014-09-03 16:30:23', 'I use Sublime Text 2, so I\'ve setup a custom command-line tool that allows me to open files and even entire project directories within Sublime with the command <code>$ subl .</code>. I highly recommend doing this. It takes a minute to setup, but it\'s worth it because it allows you to fly in and out of projects quickly.\r\n\r\nFirst create a "symbolic link" in your /bin folder by entering the command below\r\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\r\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. You may also need to create a <code>~/bin</code> folder in your home directory if there isn\'t one there.\r\n\r\nOnce this is run, open a new terminal window and <code>cd</code> to your project to open a file:\r\n<pre>$ cd /your/project/directory\r\n$ subl filename</pre>\r\nOr crack open the entire project folder with:\r\n<pre>$ subl .</pre>\r\nBam, you are setup to navigate through your projects at lightning speed.', 'The best way to open Rails projects from the command-line', '', 'publish', 'open', 'open', '', 'the-best-way-to-open-rails-projects-from-the-command-line', '', '', '2014-09-03 14:31:46', '2014-09-03 19:31:46', '', 0, 'http://dev.dorails.com/?p=233', 0, 'post', '', 0),
(234, 1, '2014-09-03 11:08:23', '2014-09-03 16:08:23', 'I use Sublime Text, so I\'ve setup a custom command-line tools that allow me to open files and even entire directories within Sublime. I highly recommend doing this. It takes a minute to setup, but it\'s worth it.\r\n\r\nFirst create a "symbolic link" in your /bin folder by entering the command below\r\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\r\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. Once this is run, open a new terminal window and <code>cd</code> to your <code>\'~/Desktop/Test Folder\'</code> and then type:\r\n<pre>$ subl readme.md</pre>\r\nAlso try to open the entire folder with:\r\n<pre>$ subl .</pre>\r\nYou should now see the folder and all files in it. There\'s just one file in there now, but you can imagine how useful this would be if you had entire Rails project open and you could easily navigate through the files &amp; folders this way.', 'How to setup Sublime with the command-line', '', 'inherit', 'open', 'open', '', '233-revision-v1', '', '', '2014-09-03 11:08:23', '2014-09-03 16:08:23', '', 233, 'http://dev.dorails.com/railsvitamins/233-revision-v1/', 0, 'revision', '', 0),
(235, 1, '2014-09-03 11:10:45', '2014-09-03 16:10:45', 'If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. I want to encourage you to dive in though! Checkout this quick crash-course for command-line, and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal. You may want to drag this to your dock for easy access. Keep in mind every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line.\r\n<h3>Tools</h3>\r\nLike I said I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects - learn how to set this up in another post here.</li>\r\n	<li>you can browse files within it</li>\r\n	<li>you can open files directly from the command-line</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n<h3>Tips</h3>\r\n$ clear\r\nWean yourself off using Finder windows to navigate your files.\r\nCreate a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this here.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:10:45', '2014-09-03 16:10:45', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(236, 1, '2014-09-03 11:28:22', '2014-09-03 16:28:22', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc. \r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line.\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n        <li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n        <li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly.\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this here.</li>\r\n</ul>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:28:22', '2014-09-03 16:28:22', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(237, 1, '2014-09-03 11:29:13', '2014-09-03 16:29:13', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line.\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this here.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:29:13', '2014-09-03 16:29:13', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(238, 1, '2014-09-03 12:00:01', '2014-09-03 17:00:01', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails\'\r\n</pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nOnce you save this file you will need to open a new terminal window for the changes to take effect.\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time typing with .bash_profile aliases', '', 'publish', 'open', 'open', '', 'save-a-ton-of-time-typing-with-bash_profile-aliases', '', '', '2014-09-03 14:37:26', '2014-09-03 19:37:26', '', 0, 'http://dev.dorails.com/?p=238', 0, 'post', '', 0),
(239, 1, '2014-09-03 11:32:01', '2014-09-03 16:32:01', '', 'Save a ton of time with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 11:32:01', '2014-09-03 16:32:01', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0),
(240, 1, '2014-09-03 11:35:44', '2014-09-03 16:35:44', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:35:44', '2014-09-03 16:35:44', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(241, 1, '2014-09-03 11:56:30', '2014-09-03 16:56:30', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (Learn how to setup here)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n&nbsp;\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:56:30', '2014-09-03 16:56:30', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(242, 1, '2014-09-03 11:57:48', '2014-09-03 16:57:48', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n&nbsp;\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:57:48', '2014-09-03 16:57:48', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(243, 1, '2014-09-03 11:58:30', '2014-09-03 16:58:30', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s say want to rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 11:58:30', '2014-09-03 16:58:30', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(244, 1, '2014-09-03 12:01:05', '2014-09-03 17:01:05', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command copies your <code>My Awesome ProjectMy Awesome Folder Copy</code>. <code>$ ls</code> to see the results.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:01:05', '2014-09-03 17:01:05', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(245, 1, '2014-09-03 12:07:35', '2014-09-03 17:07:35', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. You need to add the <code>-r</code> when you are copying folders so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:07:35', '2014-09-03 17:07:35', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(246, 1, '2014-09-03 12:11:10', '2014-09-03 17:11:10', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want a thousand copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:11:10', '2014-09-03 17:11:10', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(247, 1, '2014-09-03 12:11:30', '2014-09-03 17:11:30', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for every file/folder. The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:11:30', '2014-09-03 17:11:30', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(248, 1, '2014-09-03 12:12:40', '2014-09-03 17:12:40', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When your done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:12:40', '2014-09-03 17:12:40', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(249, 1, '2014-09-03 12:14:52', '2014-09-03 17:14:52', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When you\'re done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:14:52', '2014-09-03 17:14:52', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(250, 1, '2014-09-03 12:17:21', '2014-09-03 17:17:21', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When you\'re done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes when you see the prompt <code>Save modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?</code>. Then the screen will say <code>File Name to Write: readme.md</code>. You could change the name of the file here but you don\'t want to so press enter. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want, press <code>cmd-S</code> and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:17:21', '2014-09-03 17:17:21', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(251, 1, '2014-09-03 12:18:42', '2014-09-03 17:18:42', 'The command-line is an absolutely vital tool for any Rails developer. If you aren\'t familiar with command-line (aka Terminal), it can be intimidating at first. It was confusing and seemed unnecessary to me when I first started using it. But once you start really digging into it, you will see how powerful it is. Rails devs use the command-line to enter commands for Rails, Git, Heroku, SQL, Linux, etc, etc.\r\n\r\nBut let\'s walk before we run. Here\'s a quick crash-course for command-line basics. Run through this quick exercise and you will have it down in no time.\r\n<h3>Getting around</h3>\r\nFirst, go to your Applications folder and open Terminal (or download iTerm). You may want to drag this to your dock for easy access. Keep in mind, every time you type a command you shouldn\'t type the <code>$</code> sign. This is just something that lets you know that this a terminal command.\r\n\r\nOnce Terminal is open type:\r\n<pre>$ pwd</pre>\r\nThis stands for Print Working Directory. This is telling you what directory you are currently inside of. You should see Terminal return something like <code>/Users/tyrichards</code> as a response.\r\n\r\nOkay you can see you are in your home directory, but what\'s inside of this directory? Where can you go from here? Type this command:\r\n<pre>$ ls</pre>\r\n<code>$ ls</code> is a command that lists everything within the current directory. This will show you all the files and folder that live in the current directory.\r\n\r\nSo what happens when you want to move to one of these directories? Okay let\'s travel to our desktop. To do this type the command:\r\n<pre>$ cd Desktop</pre>\r\nYou have now moved to your desktop. The <code>$ cd</code> command allows you to "change directory" to the following path. Type the command <code>$ pwd</code> to verify that you are there. And you can even type <code>$ ls</code> to see what files and folders live there.\r\n<h3>Creating Folders</h3>\r\nOkay let\'s say we want to create a new folder on our desktop with Terminal. To do this, type the command:\r\n<pre>$ mkdir Test</pre>\r\nThis will make a new directory with the name Test. Type the <code>$ ls</code> command to see that it\'s been created.\r\n\r\nBut let\'s rename it to something that is more descriptive. We could create a new folder but how would we rename the folder? You can do this by using the <code>$ mv</code> command like so:\r\n<pre>$ mv Test \'My Awesome Project\'</pre>\r\nThe <code>$ mv</code> command will rename the <code>Test</code> folder to <code>My Awesome Project</code>. Enter <code>$ ls</code> to make sure it worked. And as you could probably guess the <code>$ mv</code> command stands for "move". You can use this to move a file to a different directory as well with <code>$ mv /current/path /new/path</code>. But we won\'t go to deep into that right now.\r\n\r\nTo copy the folder you can just use the <code>$ cp</code> command:\r\n<pre>$ cp -r \'My Awesome Project\' \'My Awesome Folder Copy\'</pre>\r\nThis command creates a copy of your <code>My Awesome Project</code> folder and names it . <code>$ ls</code> to see the results. When you are copying files you can get away with just typing <code>$ mv filename</code>, but with files you need to add the <code>-r</code> so that you will also "recursively" copy the files inside.\r\n\r\nBut we really don\'t want any copies of this folder so let\'s go ahead and delete the copy with this command:\r\n<pre>$ rm -rf \'My Awesome Project Copy\'</pre>\r\n<code>$ rm</code> as you could probably guess "removes" or deletes the folder. The <code>r</code> in <code>-rf</code> means "recursive", which is a fancy word for "every file/folder within". The <code>f</code> in <code>-rf</code> means to force - this basically means you won\'t have to manually approve every file you want to delete within that folder. Put it all together and you can see that the command <code>$ rm -rf foldername</code> removes a folder and all files within it. Enter <code>$ ls</code> to see that the folder copy is deleted.\r\n<h3>Creating &amp; Editing Files</h3>\r\nOkay let\'s create a file now with command-line. Let\'s <code>$ cd</code> into our new folder and create a new file. Notice that you can press the <code>Tab</code> key after typing a few characters and terminal will auto-complete the file name for you. In Terminal, type:\r\n<pre>$ cd \'My Awesome Project\'</pre>\r\nIf you run <code>$ ls</code>, then you will see that our project is empty. To create a new file enter:\r\n<pre>$ touch readme.md</pre>\r\nYou now have an empty readme file! <code>$ touch</code> creates a new file with the name of your choice. Type <code>$ ls</code> to verify that it\'s there.\r\n\r\nOkay we have a file but it\'s pretty useless right now, so what\'s the best way to edit this? Well that depends... I\'ll show show you a few ways I edit files for different cases.\r\n<h4>Edit files right from Terminal</h4>\r\nTo make a quick addition right from terminal use the <code>$ nano</code> command.\r\n<pre>$ nano readme.md</pre>\r\nAfter you enter the command you should see a blank screen because your file is empty. Type <code>Hello World!</code> into your new file. When you\'re done, press <code>ctrl-X</code> to exit the file and press <code>Y</code> to agree to save changes when you see the prompt <code>Save modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?</code>. Then the screen will say <code>File Name to Write: readme.md</code>. You could change the name of the file here but you don\'t want to so press enter. You should now be back to your regular screen.\r\n\r\nYou can type <code>$ cat readme.md</code> to show you the contents of the file. Viola!\r\n<h4>Edit files in a text editor</h4>\r\nThe fastest way to open files in a text editor from the command line would be to type the following:\r\n<pre>$ open readme.md</pre>\r\nThis will automatically open the file in your default text editor. You can make any changes you want in there, and then press <code>cmd-S</code> to save and you are good to go.\r\n<h3>Sanity Check</h3>\r\nFeel free to open up the folder and the file from your Finder window for a sanity check. And there you go! You\'ve successfully learned to navigate your machine, create, edit and delete files and folders with the command-line. You can do a million other things with it but you gotta start somewhere!\r\n<h3>Recap of Commands</h3>\r\n<ul>\r\n	<li><code>$ pwd</code> = print working directory</li>\r\n	<li><code>$ ls</code> = list all files and folders within current directory</li>\r\n	<li><code>$ cd foldername</code> = change directory (go to) to foldername</li>\r\n	<li><code>$ mkdir foldername</code> = make directory (create folder) with name</li>\r\n	<li><code>$ mv foldername to newfoldername</code> = Rename old folder to new name (Or move folder to new directory with new name)</li>\r\n	<li><code>$ cp foldername to foldernamecopy</code> = copy folder to the current directory with a new foldername</li>\r\n	<li><code>$ rm filename</code> = remove (delete) file</li>\r\n	<li><code>$ rm -rf filename</code> = remove (delete) folder recursively (r) with no approval (f)</li>\r\n	<li><code>$ touch filename</code> = create file with filename</li>\r\n	<li><code>$ nano filename</code> = open and edit file within terminal (ctrl-X to close)</li>\r\n	<li><code>$ open filename</code> = open and edit file within your default text editor</li>\r\n	<li><code>$ subl .</code> = open entire folder in Sublime (<a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/">Learn how to set this up</a>)</li>\r\n	<li><code>$ cat filename</code> = display contents of file</li>\r\n</ul>\r\n<h3>Tools</h3>\r\nFor the command-line, I use iTerm instead of the stock Terminal app that comes with OSX. Consider using this. I use it mainly because I can quickly press <code>cmd-spacebar</code> anytime I need to get to the terminal (which is a lot). Also I set it to be large halfscreen drop window on the top instead of the usual floating windows, so I don\'t have to mess around with moving and sizing them.\r\n\r\nLike I said above, I use Sublime Text 2 for my text editor. I highly recommend it because:\r\n<ul>\r\n<ul>\r\n	<li>you crack open entire projects with the <code>subl .</code> command (learn how to set this up in another post <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>)</li>\r\n	<li>you can easily browse files within it</li>\r\n	<li>it has a package installer that allows you to add any type of language syntax or auto-complete you could ever imagine</li>\r\n	<li>also if you set it up, you can run Rails tests from within Sublime (super handy)</li>\r\n</ul>\r\n</ul>\r\n<h3>Tips</h3>\r\n<ul>\r\n	<li>When things start to get cluttered in your terminal window. Use <code>$ clear</code> to go to a blank screen. But don\'t be alarmed you can scroll up to see your previous commands</li>\r\n	<li>If you need to run a longer command that you recently entered. Press the up/down keys to toggle through all your most recent entries.</li>\r\n	<li>Wean yourself off using Finder windows to navigate your files.</li>\r\n	<li>Setup Sublime Text 2 to work with <code>subl .</code> so you can easily open projects from terminal on the fly. Learn how to do that <a title="How to setup Sublime with the command-line" href="http://dev.dorails.com/railsvitamins/how-to-setup-sublime-with-the-command-line/" target="_blank">here</a>.</li>\r\n	<li>Create a <code>.bash_profile</code> for yourself so you can make shortcut commands. I have a separate post about this <a title="Save a ton of time with .bash_profile aliases" href="http://dev.dorails.com/railsvitamins/save-a-ton-of-time-with-bash_profile-aliases/" target="_blank">here</a>.</li>\r\n</ul>\r\nThat\'s all for now. Let me know if you have any questions or other topics you want me to cover.', 'Getting started with the command-line?', '', 'inherit', 'open', 'open', '', '227-revision-v1', '', '', '2014-09-03 12:18:42', '2014-09-03 17:18:42', '', 227, 'http://dev.dorails.com/railsvitamins/227-revision-v1/', 0, 'revision', '', 0),
(252, 1, '2014-09-03 12:29:21', '2014-09-03 17:29:21', 'I use Sublime Text 2, so I\'ve setup a custom command-line tool that allows me to open files and even entire project directories within Sublime with the command <code>$ subl .</code>. I highly recommend doing this. It takes a minute to setup, but it\'s worth it because it allows you to fly in and out of projects quickly.\n\nFirst create a "symbolic link" in your /bin folder by entering the command below\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. You may need to create a\n\nOnce this is run, open a new terminal window and <code>cd</code> to your project to open a file:\n<pre>$ cd /your/project/directory\n$ subl filename</pre>\nOr crack open the entire project folder with:\n<pre>$ subl .</pre>\nBam, you are setup to navigate through your projects at lightning speed.', 'The best way to open Rails projects from the command-line', '', 'inherit', 'open', 'open', '', '233-autosave-v1', '', '', '2014-09-03 12:29:21', '2014-09-03 17:29:21', '', 233, 'http://dev.dorails.com/railsvitamins/233-autosave-v1/', 0, 'revision', '', 0),
(253, 1, '2014-09-03 12:30:30', '2014-09-03 17:30:30', 'I use Sublime Text 2, so I\'ve setup a custom command-line tool that allows me to open files and even entire project directories within Sublime with the command <code>$ subl .</code>. I highly recommend doing this. It takes a minute to setup, but it\'s worth it because it allows you to fly in and out of projects quickly.\r\n\r\nFirst create a "symbolic link" in your /bin folder by entering the command below\r\n<pre>$ ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</pre>\r\nThis command creates a "sym link" in your /bin folder that links to the code within the Sublime Text app. You may also need to create a <code>~/bin</code> folder in your home directory if there isn\'t one there.\r\n\r\nOnce this is run, open a new terminal window and <code>cd</code> to your project to open a file:\r\n<pre>$ cd /your/project/directory\r\n$ subl filename</pre>\r\nOr crack open the entire project folder with:\r\n<pre>$ subl .</pre>\r\nBam, you are setup to navigate through your projects at lightning speed.', 'The best way to open Rails projects from the command-line', '', 'inherit', 'open', 'open', '', '233-revision-v1', '', '', '2014-09-03 12:30:30', '2014-09-03 17:30:30', '', 233, 'http://dev.dorails.com/railsvitamins/233-revision-v1/', 0, 'revision', '', 0),
(254, 1, '2014-09-03 12:51:11', '2014-09-03 17:51:11', 'If you find yourself wasting a ton of time typing things in command-line like: \n\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\n\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\n\nTo do so open Terminal, and find and open your .bash_profile file\n\n<pre>$ open ~/.bash_profile</pre>\n\nIf the file doesn\'t exist go ahead and create it\n\n<pre>\n$ touch ~/.bash_profile\n$ open ~/.bash_profile\n</pre>\n\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\n\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\n<pre>\nalias sites=\'cd Sites\'\nalias dr=\'cd ~/Sites/do_rails/\'\n<pre>\n\nIt\'s also good if you are tired of typing the same ssh commands over and over.\n<pre>\nalias sshdorails=\'ssh root@555.555.55.5\'\n</pre>\n\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\n<pre>\nalias add=\'git add .\'\nalias commit=\'git commit -am\'\nalias push=\'git push\'\nalias pull=\'git pull\'\nalias log=\'git log --oneline\'\nalias diff=\'git diff\'\nalias pull=\'git pull\'\nalias preco=\'rake assets:precompile\'\nalias st=\'git status\'\nalias remove=\'git rm --cached\'\n</pre>\n\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\n\nHuzzah! Hacktastic!', 'Save a ton of time with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-autosave-v1', '', '', '2014-09-03 12:51:11', '2014-09-03 17:51:11', '', 238, 'http://dev.dorails.com/railsvitamins/238-autosave-v1/', 0, 'revision', '', 0),
(255, 1, '2014-09-03 12:51:12', '2014-09-03 17:51:12', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails/\'\r\n<pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 12:51:12', '2014-09-03 17:51:12', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0),
(256, 1, '2014-09-03 12:51:44', '2014-09-03 17:51:44', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails/\'\r\n<pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time typing with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 12:51:44', '2014-09-03 17:51:44', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(257, 1, '2014-09-03 14:34:54', '2014-09-03 19:34:54', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails\'\r\n<pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time typing with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 14:34:54', '2014-09-03 19:34:54', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0),
(258, 1, '2014-09-03 14:35:41', '2014-09-03 19:35:41', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails\'\r\n</pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time typing with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 14:35:41', '2014-09-03 19:35:41', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0),
(259, 1, '2014-09-03 14:37:26', '2014-09-03 19:37:26', 'If you find yourself wasting a ton of time typing things in command-line like: \r\n\r\n<pre>$ cd /forever/long/project/directory/path/that/goes/on/forever/and/ever/and/ever</pre>\r\n\r\nor you just want to shorten common commands like these to make your life easier. Then I recommend setting up some quick .bash_profile <i>aliases</i>.\r\n\r\nTo do so open Terminal, and find and open your .bash_profile file\r\n\r\n<pre>$ open ~/.bash_profile</pre>\r\n\r\nIf the file doesn\'t exist go ahead and create it\r\n\r\n<pre>\r\n$ touch ~/.bash_profile\r\n$ open ~/.bash_profile\r\n</pre>\r\n\r\nNow add the following aliases to your file. These allow you to make your own custom commands that are shorter.\r\n\r\nFor example, I can type <code>$ sites</code> to jump to my sites directory. Or I type <code>$dr</code> to jump straight to my Do Rails project folder.\r\n<pre>\r\nalias sites=\'cd Sites\'\r\nalias dr=\'cd ~/Sites/do_rails\'\r\n</pre>\r\n\r\nIt\'s also good if you are tired of typing the same ssh commands over and over.\r\n<pre>\r\nalias sshdorails=\'ssh root@555.555.55.5\'\r\n</pre>\r\n\r\nI especially love it for shortening git commands though. I almost always type <code>$ git add .</code> to add all my changes. So I\'ve shortened that to <code>$ add</code> to make my life that much simpler. I haven\'t typed out "git" in months...\r\n<pre>\r\nalias add=\'git add .\'\r\nalias commit=\'git commit -am\'\r\nalias push=\'git push\'\r\nalias pull=\'git pull\'\r\nalias log=\'git log --oneline\'\r\nalias diff=\'git diff\'\r\nalias pull=\'git pull\'\r\nalias preco=\'rake assets:precompile\'\r\nalias st=\'git status\'\r\nalias remove=\'git rm --cached\'\r\n</pre>\r\n\r\nLast but not least, make yourself a quick alias to get back to your .bash_profile so you can add aliases on the fly for new projects, etc.\r\n<pre>alias editbash=\'subl ~/.bash_profile\'</pre>\r\n\r\nOnce you save this file you will need to open a new terminal window for the changes to take effect.\r\n\r\nHuzzah! Hacktastic!', 'Save a ton of time typing with .bash_profile aliases', '', 'inherit', 'open', 'open', '', '238-revision-v1', '', '', '2014-09-03 14:37:26', '2014-09-03 19:37:26', '', 238, 'http://dev.dorails.com/railsvitamins/238-revision-v1/', 0, 'revision', '', 0),
(260, 1, '2014-09-03 15:23:22', '2014-09-03 20:23:22', '<h1 style="text-align: center;">Enjoy!</h1>\r\n\r\n<hr />\r\n\r\nMore Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'publish', 'closed', 'open', '', 'thanks', '', '', '2014-09-03 15:46:00', '2014-09-03 20:46:00', '', 111, 'http://dev.dorails.com/?page_id=260', 0, 'page', '', 0),
(261, 1, '2014-09-03 15:20:27', '2014-09-03 20:20:27', '<h1>Thanks :)</h1>\r\nThanks for joining Ruby Vitamins. Stay tuned for the latest Ruby on Rails tips &amp; tricks. In the mean time you can read more articles &lt;a href="/railsvitamins"&gt;here&lt;/a&gt;.', 'Thanks', '', 'inherit', 'open', 'open', '', '260-revision-v1', '', '', '2014-09-03 15:20:27', '2014-09-03 20:20:27', '', 260, 'http://dev.dorails.com/railsvitamins/260-revision-v1/', 0, 'revision', '', 0),
(262, 1, '2014-09-03 15:20:59', '2014-09-03 20:20:59', '<h1>Thanks :)</h1>\r\nThanks for joining Ruby Vitamins. Stay tuned for the latest Ruby on Rails tips &amp; tricks. In the mean time you can read more articles <a href="/railsvitamins">here</a>', 'Thanks', '', 'inherit', 'open', 'open', '', '260-revision-v1', '', '', '2014-09-03 15:20:59', '2014-09-03 20:20:59', '', 260, 'http://dev.dorails.com/railsvitamins/260-revision-v1/', 0, 'revision', '', 0),
(263, 1, '2014-09-03 15:23:23', '2014-09-03 20:23:23', '<h1>Enjoy!</h1>\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\nMore Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '260-revision-v1', '', '', '2014-09-03 15:23:23', '2014-09-03 20:23:23', '', 260, 'http://dev.dorails.com/railsvitamins/260-revision-v1/', 0, 'revision', '', 0),
(264, 1, '2014-09-03 15:24:15', '2014-09-03 20:24:15', '<h1 style="text-align: center;">I\'ll keep you posted</h1>\r\n\r\n<hr />\r\n\r\nThanks for your interest on <em>Rails Curve</em>.  I\'ll shoot all the latest news to your inbox. Until then, you can read Rails Vitamins <a href="/railsvitamins">here</a>.', 'Thanks', '', 'publish', 'closed', 'open', '', 'thanks', '', '', '2014-09-03 15:45:41', '2014-09-03 20:45:41', '', 105, 'http://dev.dorails.com/?page_id=264', 0, 'page', '', 0),
(265, 1, '2014-09-03 15:24:15', '2014-09-03 20:24:15', '<h1 style="text-align: center;">Enjoy!</h1>\r\n\r\n<hr />\r\n\r\nMore Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '264-revision-v1', '', '', '2014-09-03 15:24:15', '2014-09-03 20:24:15', '', 264, 'http://dev.dorails.com/railsvitamins/264-revision-v1/', 0, 'revision', '', 0),
(266, 1, '2014-09-03 15:25:17', '2014-09-03 20:25:17', '<h1 style="text-align: center;">I\'ll keep you posted</h1>\n\n<hr />\n\nThanks for your interest on <em>Rails Curve</em>.  More Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '264-autosave-v1', '', '', '2014-09-03 15:25:17', '2014-09-03 20:25:17', '', 264, 'http://dev.dorails.com/railsvitamins/264-autosave-v1/', 0, 'revision', '', 0),
(267, 1, '2014-09-03 15:26:04', '2014-09-03 20:26:04', '<h1 style="text-align: center;">I\'ll keep you posted</h1>\r\n\r\n<hr />\r\n\r\nThanks for your interest on <em>Rails Curve</em>.  I\'ll shoot all the latest news to your inbox. Until then, you can read Rails Vitamins <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '264-revision-v1', '', '', '2014-09-03 15:26:04', '2014-09-03 20:26:04', '', 264, 'http://dev.dorails.com/railsvitamins/264-revision-v1/', 0, 'revision', '', 0),
(268, 1, '2014-09-03 15:26:43', '2014-09-03 20:26:43', '<h1 style="text-align: center;">Enjoy!</h1>\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\nMore Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '260-revision-v1', '', '', '2014-09-03 15:26:43', '2014-09-03 20:26:43', '', 260, 'http://dev.dorails.com/railsvitamins/260-revision-v1/', 0, 'revision', '', 0),
(269, 1, '2014-09-03 15:46:00', '2014-09-03 20:46:00', '<h1 style="text-align: center;">Enjoy!</h1>\r\n\r\n<hr />\r\n\r\nMore Ruby on Rails tips &amp; tricks will be coming soon to your inbox. Until then, you can read more articles <a href="/railsvitamins">here</a>.', 'Thanks', '', 'inherit', 'open', 'open', '', '260-revision-v1', '', '', '2014-09-03 15:46:00', '2014-09-03 20:46:00', '', 260, 'http://dev.dorails.com/railsvitamins/260-revision-v1/', 0, 'revision', '', 0),
(270, 1, '2014-09-03 19:53:32', '2014-09-04 00:53:32', '<h1 style="text-align: center;">Terms of Use</h1>\r\n\r\n<hr />\r\n\r\n<h2 id="toc0">Legal Notices</h2>\r\nWe, the Operators of this Website, provide it as a public service to our users.\r\n\r\nPlease carefully review the following basic rules that govern your use of the Website. Please note that your use of the Website constitutes your unconditional agreement to follow and be bound by these Terms and Conditions of Use. If you (the "User") do not agree to them, do not use the Website, provide any materials to the Website or download any materials from them.\r\n\r\nThe Operators reserve the right to update or modify these Terms and Conditions at any time without prior notice to User. Your use of the Website following any such change constitutes your unconditional agreement to follow and be bound by these Terms and Conditions as changed. For this reason, we encourage you to review these Terms and Conditions of Use whenever you use the Website.\r\n\r\nThese Terms and Conditions of Use apply to the use of the Website and do not extend to any linked third party sites. These Terms and Conditions and our <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a>, which are hereby incorporated by reference, contain the entire agreement (the “Agreement”) between you and the Operators with respect to the Website. Any rights not expressly granted herein are reserved.\r\n<h2 id="toc1">Permitted and Prohibited Uses</h2>\r\nYou may use the the Website for the sole purpose of sharing and exchanging ideas with other Users. You may not use the the Website to violate any applicable local, state, national, or international law, including without limitation any applicable laws relating to antitrust or other illegal trade or business practices, federal and state securities laws, regulations promulgated by the U.S. Securities and Exchange Commission, any rules of any national or other securities exchange, and any U.S. laws, rules, and regulations governing the export and re-export of commodities or technical data.\r\n\r\nYou may not upload or transmit any material that infringes or misappropriates any person\'s copyright, patent, trademark, or trade secret, or disclose via the the Website any information the disclosure of which would constitute a violation of any confidentiality obligations you may have.\r\n\r\nYou may not upload any viruses, worms, Trojan horses, or other forms of harmful computer code, nor subject the Website\'s network or servers to unreasonable traffic loads, or otherwise engage in conduct deemed disruptive to the ordinary operation of the Website.\r\n\r\nYou are strictly prohibited from communicating on or through the Website any unlawful, harmful, offensive, threatening, abusive, libelous, harassing, defamatory, vulgar, obscene, profane, hateful, fraudulent, sexually explicit, racially, ethnically, or otherwise objectionable material of any sort, including, but not limited to, any material that encourages conduct that would constitute a criminal offense, give rise to civil liability, or otherwise violate any applicable local, state, national, or international law.\r\n\r\nYou are expressly prohibited from compiling and using other Users\' personal information, including addresses, telephone numbers, fax numbers, email addresses or other contact information that may appear on the Website, for the purpose of creating or compiling marketing and/or mailing lists and from sending other Users unsolicited marketing materials, whether by facsimile, email, or other technological means.\r\n\r\nYou also are expressly prohibited from distributing Users\' personal information to third-party parties for marketing purposes. The Operators shall deem the compiling of marketing and mailing lists using Users\' personal information, the sending of unsolicited marketing materials to Users, or the distribution of Users\' personal information to third parties for marketing purposes as a material breach of these Terms and Conditions of Use, and the Operators reserve the right to terminate or suspend your access to and use of the Website and to suspend or revoke your membership in the consortium without refund of any membership dues paid.\r\n\r\nThe Operators note that unauthorized use of Users\' personal information in connection with unsolicited marketing correspondence also may constitute violations of various state and federal anti-spam statutes. The Operators reserve the right to report the abuse of Users\' personal information to the appropriate law enforcement and government authorities, and the Operators will fully cooperate with any authorities investigating violations of these laws.\r\n<h2 id="toc2">User Submissions</h2>\r\nThe Operators do not want to receive confidential or proprietary information from you through the Website. Any material, information, or other communication you transmit or post ("Contributions") to the Website will be considered non-confidential.\r\n\r\nAll contributions to this site are licensed by you under the MIT License to anyone who wishes to use them, including the Operators.\r\n\r\nIf you work for a company or at a University, it\'s likely that you\'re not the copyright holder of anything you make, even in your free time. Before making contributions to this site, get written permission from your employer.\r\n<h2 id="toc3">User Discussion Lists and Forums</h2>\r\nThe Operators may, but are not obligated to, monitor or review any areas on the Website where users transmit or post communications or communicate solely with each other, including but not limited to user forums and email lists, and the content of any such communications. The Operators, however, will have no liability related to the content of any such communications, whether or not arising under the laws of copyright, libel, privacy, obscenity, or otherwise. The Operators may edit or remove content on the the Website at their discretion at any time.\r\n<h2 id="toc4">Use of Personally Identifiable Information</h2>\r\nInformation submitted to the Website is governed according to the Operators’s current <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a> and the stated license of this website.\r\n\r\nYou agree to provide true, accurate, current, and complete information when registering with the Website. It is your responsibility to maintain and promptly update this account information to keep it true, accurate, current, and complete. If you provides any information that is fraudulent, untrue, inaccurate, incomplete, or not current, or we have reasonable grounds to suspect that such information is fraudulent, untrue, inaccurate, incomplete, or not current, we reserve the right to suspend or terminate your account without notice and to refuse any and all current and future use of the Website.\r\n\r\nAlthough sections of the Website may be viewed simply by visiting the Website, in order to access some Content and/or additional features offered at the Website, you may need to sign on as a guest or register as a member. If you create an account on the Website, you may be asked to supply your name, address, a User ID and password. You are responsible for maintaining the confidentiality of the password and account and are fully responsible for all activities that occur in connection with your password or account. You agree to immediately notify us of any unauthorized use of either your password or account or any other breach of security. You further agree that you will not permit others, including those whose accounts have been terminated, to access the Website using your account or User ID. You grant the Operators and all other persons or entities involved in the operation of the Website the right to transmit, monitor, retrieve, store, and use your information in connection with the operation of the Website and in the provision of services to you. The Operators cannot and do not assume any responsibility or liability for any information you submit, or your or third parties’ use or misuse of information transmitted or received using website. To learn more about how we protect the privacy of the personal information in your account, please visit our <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a>.\r\n<h2 id="toc5">Indemnification</h2>\r\nYou agree to defend, indemnify and hold harmless the Operators, agents, vendors or suppliers from and against any and all claims, damages, costs and expenses, including reasonable attorneys\' fees, arising from or related to your use or misuse of the Website, including, without limitation, your violation of these Terms and Conditions, the infringement by you, or any other subscriber or user of your account, of any intellectual property right or other right of any person or entity.\r\n<h2 id="toc6">Termination</h2>\r\nThese Terms and Conditions of Use are effective until terminated by either party. If you no longer agree to be bound by these Terms and Conditions, you must cease use of the Website. If you are dissatisfied with the Website, their content, or any of these terms, conditions, and policies, your sole legal remedy is to discontinue using the Website. The Operators reserve the right to terminate or suspend your access to and use of the Website, or parts of the Website, without notice, if we believe, in our sole discretion, that such use (i) is in violation of any applicable law; (ii) is harmful to our interests or the interests, including intellectual property or other rights, of another person or entity; or (iii) where the Operators have reason to believe that you are in violation of these Terms and Conditions of Use.\r\n<h2 id="toc7">WARRANTY DISCLAIMER</h2>\r\nTHE WEBSITE AND ASSOCIATED MATERIALS ARE PROVIDED ON AN "AS IS" AND "AS AVAILABLE" BASIS. TO THE FULL EXTENT PERMISSIBLE BY APPLICABLE LAW, THE OPERATORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENTOF INTELLECTUAL PROPERTY. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTY THAT THE WEBSITE WILL MEET YOUR REQUIREMENTS, OR THAT YOUR USE OF THE WEBSITE WILL BE UNINTERRUPTED, TIMELY, SECURE, OR ERROR FREE; NOR DO THE OPERATORS MAKE ANY REPRESENTATION OR WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE WEBSITE. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THE WEBSITE OR THE INFORMATION, CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THE WEBSITE.\r\n\r\nIN NO EVENT SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF INFORMATION) ARISING OUT OF THE USE, MISUSE OF OR INABILITY TO USE THE WEBSITE, EVEN IF THE OPERATORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THIS DISCLAIMER CONSTITUTES AN ESSENTIAL PART OF THIS AGREEMENT. BECAUSE SOME JURISDICTIONS PROHIBIT THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\r\n\r\nYOU UNDERSTAND AND AGREE THAT ANY CONTENT DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE WEBSITE IS AT YOUR OWN DISCRETION AND RISK AND THAT YOU WILL BE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR LOSS OF DATA OR BUSINESS INTERRUPTION THAT RESULTS FROM THE DOWNLOAD OF CONTENT. THE OPERATORS SHALL NOT BE RESPONSIBLE FOR ANY LOSS OR DAMAGE CAUSED, OR ALLEGED TO HAVE BEEN CAUSED, DIRECTLY OR INDIRECTLY, BY THE INFORMATION OR IDEAS CONTAINED, SUGGESTED OR REFERENCED IN OR APPEARING ON THE WEBSITE. YOUR PARTICIPATION IN THE WEBSITE IS SOLELY AT YOUR OWN RISK. NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THE OPERATORS OR THROUGH THE OPERATORS, THEIR EMPLOYEES, OR THIRD PARTIES SHALL CREATE ANY WARRANTY NOT EXPRESSLY MADE HEREIN. YOU ACKNOWLEDGE, BY YOUR USE OF THE THE WEBSITE, THAT YOUR USE OF THE WEBSITE IS AT YOUR SOLE RISK.\r\n\r\nLIABILITY LIMITATION. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL OR EQUITABLE THEORY, WHETHER IN TORT, CONTRACT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE TO USER OR TO ANY OTHER PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY NATURE ARISING OUT OF OR IN CONNECTION WITH THE USE OF OR INABILITY TO USE THE THE WEBSITE OR FOR ANY BREACH OF SECURITY ASSOCIATED WITH THE TRANSMISSION OF SENSITIVE INFORMATION THROUGH THE WEBSITE OR FOR ANY INFORMATION OBTAINED THROUGH THE WEBSITE, INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, LOSS OR CORRUPTION OF DATA, WORK STOPPAGE, ACCURACY OF RESULTS, OR COMPUTER FAILURE OR MALFUNCTION, EVEN IF AN AUTHORIZED REPRESENTATIVE OF THE OPERATORS HAS BEEN ADVISED OF OR SHOULD HAVE KNOWN OF THE POSSIBILITY OF SUCH DAMAGES.\r\n\r\nTHE OPERATORS\'S TOTAL CUMULATIVE LIABILITY FOR ANY AND ALL CLAIMS IN CONNECTION WITH THE WEBSITE WILL NOT EXCEED FIVE U.S. DOLLARS ($5.00). USER AGREES AND ACKNOWLEDGES THAT THE FOREGOING LIMITATIONS ON LIABILITY ARE AN ESSENTIAL BASIS OF THE BARGAIN AND THAT THE OPERATORS WOULD NOT PROVIDE THE WEBSITE ABSENT SUCH LIMITATION.\r\n<h2 id="toc8">General</h2>\r\nThe Website is hosted in the United States. The Operators make no claims that the Content on the Website is appropriate or may be downloaded outside of the United States. Access to the Content may not be legal by certain persons or in certain countries. If you access the Website from outside the United States, you do so at your own risk and are responsible for compliance with the laws of your jurisdiction. The provisions of the UN Convention on Contracts for the International Sale of Goods will not apply to these Terms. A party may give notice to the other party only in writing at that party\'s principal place of business, attention of that party\'s principal legal officer, or at such other address or by such other method as the party shall specify in writing. Notice shall be deemed given upon personal delivery or facsimile, or, if sent by certified mail with postage prepaid, 5 business days after the date of mailing, or, if sent by international overnight courier with postage prepaid, 7 business days after the date of mailing. If any provision herein is held to be unenforceable, the remaining provisions will continue in full force without being affected in any way. Further, the parties agree to replace such unenforceable provision with an enforceable provision that most closely approximates the intent and economic effect of the unenforceable provision. Section headings are for reference purposes only and do not define, limit, construe or describe the scope or extent of such section. The failure of the Operators to act with respect to a breach of this Agreement by you or others does not constitute a waiver and shall not limit the Operators\' rights with respect to such breach or any subsequent breaches. Any action or proceeding arising out of or related to this Agreement or User\'s use of the Website must be brought in the courts of Belgium, and you consent to the exclusive personal jurisdiction and venue of such courts. Any cause of action you may have with respect to your use of the Website must be commenced within one (1) year after the claim or cause of action arises. These Terms set forth the entire understanding and agreement of the parties, and supersedes any and all oral or written agreements or understandings between the parties, as to their subject matter. The waiver of a breach of any provision of this Agreement shall not be construed as a waiver of any other or subsequent breach.\r\n<h2 id="toc9">Links to Other Materials</h2>\r\nThe Website may contain links to sites owned or operated by independent third parties. These links are provided for your convenience and reference only. We do not control such sites and, therefore, we are not responsible for any content posted on these sites. The fact that the Operators offer such links should not be construed in any way as an endorsement, authorization, or sponsorship of that site, its content or the companies or products referenced therein, and the Operators reserve the right to note its lack of affiliation, sponsorship, or endorsement on the Website. If you decide to access any of the third party sites linked to by the Website, you do this entirely at your own risk. Because some sites employ automated search results or otherwise link you to sites containing information that may be deemed inappropriate or offensive, the Operators cannot be held responsible for the accuracy, copyright compliance, legality, or decency of material contained in third party sites, and you hereby irrevocably waive any claim against us with respect to such sites.\r\n<h2 id="toc10">Notification Of Possible Copyright Infringement</h2>\r\nIn the event you believe that material or content published on the Website may infringe on your copyright or that of another, please <a title="Contact Us" href="http://dev.dorails.com/contact/">contact</a> us.', 'Terms of Use', '', 'publish', 'closed', 'closed', '', 'terms-of-use', '', '', '2014-09-03 20:00:26', '2014-09-04 01:00:26', '', 0, 'http://dev.dorails.com/?page_id=270', 0, 'page', '', 0),
(271, 1, '2014-09-03 19:53:32', '2014-09-04 00:53:32', '<h1 style="text-align: center;">Terms of Use</h1>\r\n\r\n<hr />\r\n\r\n<h2 id="toc0">Legal Notices</h2>\r\nWe, the Operators of this Website, provide it as a public service to our users.\r\n\r\nPlease carefully review the following basic rules that govern your use of the Website. Please note that your use of the Website constitutes your unconditional agreement to follow and be bound by these Terms and Conditions of Use. If you (the "User") do not agree to them, do not use the Website, provide any materials to the Website or download any materials from them.\r\n\r\nThe Operators reserve the right to update or modify these Terms and Conditions at any time without prior notice to User. Your use of the Website following any such change constitutes your unconditional agreement to follow and be bound by these Terms and Conditions as changed. For this reason, we encourage you to review these Terms and Conditions of Use whenever you use the Website.\r\n\r\nThese Terms and Conditions of Use apply to the use of the Website and do not extend to any linked third party sites. These Terms and Conditions and our <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a>, which are hereby incorporated by reference, contain the entire agreement (the “Agreement”) between you and the Operators with respect to the Website. Any rights not expressly granted herein are reserved.\r\n<h2 id="toc1">Permitted and Prohibited Uses</h2>\r\nYou may use the the Website for the sole purpose of sharing and exchanging ideas with other Users. You may not use the the Website to violate any applicable local, state, national, or international law, including without limitation any applicable laws relating to antitrust or other illegal trade or business practices, federal and state securities laws, regulations promulgated by the U.S. Securities and Exchange Commission, any rules of any national or other securities exchange, and any U.S. laws, rules, and regulations governing the export and re-export of commodities or technical data.\r\n\r\nYou may not upload or transmit any material that infringes or misappropriates any person\'s copyright, patent, trademark, or trade secret, or disclose via the the Website any information the disclosure of which would constitute a violation of any confidentiality obligations you may have.\r\n\r\nYou may not upload any viruses, worms, Trojan horses, or other forms of harmful computer code, nor subject the Website\'s network or servers to unreasonable traffic loads, or otherwise engage in conduct deemed disruptive to the ordinary operation of the Website.\r\n\r\nYou are strictly prohibited from communicating on or through the Website any unlawful, harmful, offensive, threatening, abusive, libelous, harassing, defamatory, vulgar, obscene, profane, hateful, fraudulent, sexually explicit, racially, ethnically, or otherwise objectionable material of any sort, including, but not limited to, any material that encourages conduct that would constitute a criminal offense, give rise to civil liability, or otherwise violate any applicable local, state, national, or international law.\r\n\r\nYou are expressly prohibited from compiling and using other Users\' personal information, including addresses, telephone numbers, fax numbers, email addresses or other contact information that may appear on the Website, for the purpose of creating or compiling marketing and/or mailing lists and from sending other Users unsolicited marketing materials, whether by facsimile, email, or other technological means.\r\n\r\nYou also are expressly prohibited from distributing Users\' personal information to third-party parties for marketing purposes. The Operators shall deem the compiling of marketing and mailing lists using Users\' personal information, the sending of unsolicited marketing materials to Users, or the distribution of Users\' personal information to third parties for marketing purposes as a material breach of these Terms and Conditions of Use, and the Operators reserve the right to terminate or suspend your access to and use of the Website and to suspend or revoke your membership in the consortium without refund of any membership dues paid.\r\n\r\nThe Operators note that unauthorized use of Users\' personal information in connection with unsolicited marketing correspondence also may constitute violations of various state and federal anti-spam statutes. The Operators reserve the right to report the abuse of Users\' personal information to the appropriate law enforcement and government authorities, and the Operators will fully cooperate with any authorities investigating violations of these laws.\r\n<h2 id="toc2">User Submissions</h2>\r\nThe Operators do not want to receive confidential or proprietary information from you through the Website. Any material, information, or other communication you transmit or post ("Contributions") to the Website will be considered non-confidential.\r\n\r\nAll contributions to this site are licensed by you under the MIT License to anyone who wishes to use them, including the Operators.\r\n\r\nIf you work for a company or at a University, it\'s likely that you\'re not the copyright holder of anything you make, even in your free time. Before making contributions to this site, get written permission from your employer.\r\n<h2 id="toc3">User Discussion Lists and Forums</h2>\r\nThe Operators may, but are not obligated to, monitor or review any areas on the Website where users transmit or post communications or communicate solely with each other, including but not limited to user forums and email lists, and the content of any such communications. The Operators, however, will have no liability related to the content of any such communications, whether or not arising under the laws of copyright, libel, privacy, obscenity, or otherwise. The Operators may edit or remove content on the the Website at their discretion at any time.\r\n<h2 id="toc4">Use of Personally Identifiable Information</h2>\r\nInformation submitted to the Website is governed according to the Operators’s current <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a> and the stated license of this website.\r\n\r\nYou agree to provide true, accurate, current, and complete information when registering with the Website. It is your responsibility to maintain and promptly update this account information to keep it true, accurate, current, and complete. If you provides any information that is fraudulent, untrue, inaccurate, incomplete, or not current, or we have reasonable grounds to suspect that such information is fraudulent, untrue, inaccurate, incomplete, or not current, we reserve the right to suspend or terminate your account without notice and to refuse any and all current and future use of the Website.\r\n\r\nAlthough sections of the Website may be viewed simply by visiting the Website, in order to access some Content and/or additional features offered at the Website, you may need to sign on as a guest or register as a member. If you create an account on the Website, you may be asked to supply your name, address, a User ID and password. You are responsible for maintaining the confidentiality of the password and account and are fully responsible for all activities that occur in connection with your password or account. You agree to immediately notify us of any unauthorized use of either your password or account or any other breach of security. You further agree that you will not permit others, including those whose accounts have been terminated, to access the Website using your account or User ID. You grant the Operators and all other persons or entities involved in the operation of the Website the right to transmit, monitor, retrieve, store, and use your information in connection with the operation of the Website and in the provision of services to you. The Operators cannot and do not assume any responsibility or liability for any information you submit, or your or third parties’ use or misuse of information transmitted or received using website. To learn more about how we protect the privacy of the personal information in your account, please visit our <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a>.\r\n<h2 id="toc5">Indemnification</h2>\r\nYou agree to defend, indemnify and hold harmless the Operators, agents, vendors or suppliers from and against any and all claims, damages, costs and expenses, including reasonable attorneys\' fees, arising from or related to your use or misuse of the Website, including, without limitation, your violation of these Terms and Conditions, the infringement by you, or any other subscriber or user of your account, of any intellectual property right or other right of any person or entity.\r\n<h2 id="toc6">Termination</h2>\r\nThese Terms and Conditions of Use are effective until terminated by either party. If you no longer agree to be bound by these Terms and Conditions, you must cease use of the Website. If you are dissatisfied with the Website, their content, or any of these terms, conditions, and policies, your sole legal remedy is to discontinue using the Website. The Operators reserve the right to terminate or suspend your access to and use of the Website, or parts of the Website, without notice, if we believe, in our sole discretion, that such use (i) is in violation of any applicable law; (ii) is harmful to our interests or the interests, including intellectual property or other rights, of another person or entity; or (iii) where the Operators have reason to believe that you are in violation of these Terms and Conditions of Use.\r\n<h2 id="toc7">WARRANTY DISCLAIMER</h2>\r\nTHE WEBSITE AND ASSOCIATED MATERIALS ARE PROVIDED ON AN "AS IS" AND "AS AVAILABLE" BASIS. TO THE FULL EXTENT PERMISSIBLE BY APPLICABLE LAW, THE OPERATORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENTOF INTELLECTUAL PROPERTY. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTY THAT THE WEBSITE WILL MEET YOUR REQUIREMENTS, OR THAT YOUR USE OF THE WEBSITE WILL BE UNINTERRUPTED, TIMELY, SECURE, OR ERROR FREE; NOR DO THE OPERATORS MAKE ANY REPRESENTATION OR WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE WEBSITE. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THE WEBSITE OR THE INFORMATION, CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THE WEBSITE.\r\n\r\nIN NO EVENT SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF INFORMATION) ARISING OUT OF THE USE, MISUSE OF OR INABILITY TO USE THE WEBSITE, EVEN IF THE OPERATORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THIS DISCLAIMER CONSTITUTES AN ESSENTIAL PART OF THIS AGREEMENT. BECAUSE SOME JURISDICTIONS PROHIBIT THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\r\n\r\nYOU UNDERSTAND AND AGREE THAT ANY CONTENT DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE WEBSITE IS AT YOUR OWN DISCRETION AND RISK AND THAT YOU WILL BE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR LOSS OF DATA OR BUSINESS INTERRUPTION THAT RESULTS FROM THE DOWNLOAD OF CONTENT. THE OPERATORS SHALL NOT BE RESPONSIBLE FOR ANY LOSS OR DAMAGE CAUSED, OR ALLEGED TO HAVE BEEN CAUSED, DIRECTLY OR INDIRECTLY, BY THE INFORMATION OR IDEAS CONTAINED, SUGGESTED OR REFERENCED IN OR APPEARING ON THE WEBSITE. YOUR PARTICIPATION IN THE WEBSITE IS SOLELY AT YOUR OWN RISK. NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THE OPERATORS OR THROUGH THE OPERATORS, THEIR EMPLOYEES, OR THIRD PARTIES SHALL CREATE ANY WARRANTY NOT EXPRESSLY MADE HEREIN. YOU ACKNOWLEDGE, BY YOUR USE OF THE THE WEBSITE, THAT YOUR USE OF THE WEBSITE IS AT YOUR SOLE RISK.\r\n\r\nLIABILITY LIMITATION. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL OR EQUITABLE THEORY, WHETHER IN TORT, CONTRACT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE TO USER OR TO ANY OTHER PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY NATURE ARISING OUT OF OR IN CONNECTION WITH THE USE OF OR INABILITY TO USE THE THE WEBSITE OR FOR ANY BREACH OF SECURITY ASSOCIATED WITH THE TRANSMISSION OF SENSITIVE INFORMATION THROUGH THE WEBSITE OR FOR ANY INFORMATION OBTAINED THROUGH THE WEBSITE, INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, LOSS OR CORRUPTION OF DATA, WORK STOPPAGE, ACCURACY OF RESULTS, OR COMPUTER FAILURE OR MALFUNCTION, EVEN IF AN AUTHORIZED REPRESENTATIVE OF THE OPERATORS HAS BEEN ADVISED OF OR SHOULD HAVE KNOWN OF THE POSSIBILITY OF SUCH DAMAGES.\r\n\r\nTHE OPERATORS\'S TOTAL CUMULATIVE LIABILITY FOR ANY AND ALL CLAIMS IN CONNECTION WITH THE WEBSITE WILL NOT EXCEED FIVE U.S. DOLLARS ($5.00). USER AGREES AND ACKNOWLEDGES THAT THE FOREGOING LIMITATIONS ON LIABILITY ARE AN ESSENTIAL BASIS OF THE BARGAIN AND THAT THE OPERATORS WOULD NOT PROVIDE THE WEBSITE ABSENT SUCH LIMITATION.\r\n<h2 id="toc8">General</h2>\r\nThe Website is hosted in the United States. The Operators make no claims that the Content on the Website is appropriate or may be downloaded outside of the United States. Access to the Content may not be legal by certain persons or in certain countries. If you access the Website from outside the United States, you do so at your own risk and are responsible for compliance with the laws of your jurisdiction. The provisions of the UN Convention on Contracts for the International Sale of Goods will not apply to these Terms. A party may give notice to the other party only in writing at that party\'s principal place of business, attention of that party\'s principal legal officer, or at such other address or by such other method as the party shall specify in writing. Notice shall be deemed given upon personal delivery or facsimile, or, if sent by certified mail with postage prepaid, 5 business days after the date of mailing, or, if sent by international overnight courier with postage prepaid, 7 business days after the date of mailing. If any provision herein is held to be unenforceable, the remaining provisions will continue in full force without being affected in any way. Further, the parties agree to replace such unenforceable provision with an enforceable provision that most closely approximates the intent and economic effect of the unenforceable provision. Section headings are for reference purposes only and do not define, limit, construe or describe the scope or extent of such section. The failure of the Operators to act with respect to a breach of this Agreement by you or others does not constitute a waiver and shall not limit the Operators\' rights with respect to such breach or any subsequent breaches. Any action or proceeding arising out of or related to this Agreement or User\'s use of the Website must be brought in the courts of Belgium, and you consent to the exclusive personal jurisdiction and venue of such courts. Any cause of action you may have with respect to your use of the Website must be commenced within one (1) year after the claim or cause of action arises. These Terms set forth the entire understanding and agreement of the parties, and supersedes any and all oral or written agreements or understandings between the parties, as to their subject matter. The waiver of a breach of any provision of this Agreement shall not be construed as a waiver of any other or subsequent breach.\r\n<h2 id="toc9">Links to Other Materials</h2>\r\nThe Website may contain links to sites owned or operated by independent third parties. These links are provided for your convenience and reference only. We do not control such sites and, therefore, we are not responsible for any content posted on these sites. The fact that the Operators offer such links should not be construed in any way as an endorsement, authorization, or sponsorship of that site, its content or the companies or products referenced therein, and the Operators reserve the right to note its lack of affiliation, sponsorship, or endorsement on the Website. If you decide to access any of the third party sites linked to by the Website, you do this entirely at your own risk. Because some sites employ automated search results or otherwise link you to sites containing information that may be deemed inappropriate or offensive, the Operators cannot be held responsible for the accuracy, copyright compliance, legality, or decency of material contained in third party sites, and you hereby irrevocably waive any claim against us with respect to such sites.\r\n<h2 id="toc10">Notification Of Possible Copyright Infringement</h2>\r\nIn the event you believe that material or content published on the Website may infringe on your copyright or that of another, please<a href="http://default-template.wikidot.com/contact">contact</a> us.', 'Terms of Use', '', 'inherit', 'open', 'open', '', '270-revision-v1', '', '', '2014-09-03 19:53:32', '2014-09-04 00:53:32', '', 270, 'http://dev.dorails.com/railsvitamins/270-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(272, 1, '2014-09-03 19:54:39', '2014-09-04 00:54:39', '<h1 style="text-align: center;">Terms of Use</h1>\n\n<hr />\n\n<h2 id="toc0">Legal Notices</h2>\nWe, the Operators of this Website, provide it as a public service to our users.\n\nPlease carefully review the following basic rules that govern your use of the Website. Please note that your use of the Website constitutes your unconditional agreement to follow and be bound by these Terms and Conditions of Use. If you (the "User") do not agree to them, do not use the Website, provide any materials to the Website or download any materials from them.\n\nThe Operators reserve the right to update or modify these Terms and Conditions at any time without prior notice to User. Your use of the Website following any such change constitutes your unconditional agreement to follow and be bound by these Terms and Conditions as changed. For this reason, we encourage you to review these Terms and Conditions of Use whenever you use the Website.\n\nThese Terms and Conditions of Use apply to the use of the Website and do not extend to any linked third party sites. These Terms and Conditions and our <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a>, which are hereby incorporated by reference, contain the entire agreement (the “Agreement”) between you and the Operators with respect to the Website. Any rights not expressly granted herein are reserved.\n<h2 id="toc1">Permitted and Prohibited Uses</h2>\nYou may use the the Website for the sole purpose of sharing and exchanging ideas with other Users. You may not use the the Website to violate any applicable local, state, national, or international law, including without limitation any applicable laws relating to antitrust or other illegal trade or business practices, federal and state securities laws, regulations promulgated by the U.S. Securities and Exchange Commission, any rules of any national or other securities exchange, and any U.S. laws, rules, and regulations governing the export and re-export of commodities or technical data.\n\nYou may not upload or transmit any material that infringes or misappropriates any person\'s copyright, patent, trademark, or trade secret, or disclose via the the Website any information the disclosure of which would constitute a violation of any confidentiality obligations you may have.\n\nYou may not upload any viruses, worms, Trojan horses, or other forms of harmful computer code, nor subject the Website\'s network or servers to unreasonable traffic loads, or otherwise engage in conduct deemed disruptive to the ordinary operation of the Website.\n\nYou are strictly prohibited from communicating on or through the Website any unlawful, harmful, offensive, threatening, abusive, libelous, harassing, defamatory, vulgar, obscene, profane, hateful, fraudulent, sexually explicit, racially, ethnically, or otherwise objectionable material of any sort, including, but not limited to, any material that encourages conduct that would constitute a criminal offense, give rise to civil liability, or otherwise violate any applicable local, state, national, or international law.\n\nYou are expressly prohibited from compiling and using other Users\' personal information, including addresses, telephone numbers, fax numbers, email addresses or other contact information that may appear on the Website, for the purpose of creating or compiling marketing and/or mailing lists and from sending other Users unsolicited marketing materials, whether by facsimile, email, or other technological means.\n\nYou also are expressly prohibited from distributing Users\' personal information to third-party parties for marketing purposes. The Operators shall deem the compiling of marketing and mailing lists using Users\' personal information, the sending of unsolicited marketing materials to Users, or the distribution of Users\' personal information to third parties for marketing purposes as a material breach of these Terms and Conditions of Use, and the Operators reserve the right to terminate or suspend your access to and use of the Website and to suspend or revoke your membership in the consortium without refund of any membership dues paid.\n\nThe Operators note that unauthorized use of Users\' personal information in connection with unsolicited marketing correspondence also may constitute violations of various state and federal anti-spam statutes. The Operators reserve the right to report the abuse of Users\' personal information to the appropriate law enforcement and government authorities, and the Operators will fully cooperate with any authorities investigating violations of these laws.\n<h2 id="toc2">User Submissions</h2>\nThe Operators do not want to receive confidential or proprietary information from you through the Website. Any material, information, or other communication you transmit or post ("Contributions") to the Website will be considered non-confidential.\n\nAll contributions to this site are licensed by you under the MIT License to anyone who wishes to use them, including the Operators.\n\nIf you work for a company or at a University, it\'s likely that you\'re not the copyright holder of anything you make, even in your free time. Before making contributions to this site, get written permission from your employer.\n<h2 id="toc3">User Discussion Lists and Forums</h2>\nThe Operators may, but are not obligated to, monitor or review any areas on the Website where users transmit or post communications or communicate solely with each other, including but not limited to user forums and email lists, and the content of any such communications. The Operators, however, will have no liability related to the content of any such communications, whether or not arising under the laws of copyright, libel, privacy, obscenity, or otherwise. The Operators may edit or remove content on the the Website at their discretion at any time.\n<h2 id="toc4">Use of Personally Identifiable Information</h2>\nInformation submitted to the Website is governed according to the Operators’s current <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a> and the stated license of this website.\n\nYou agree to provide true, accurate, current, and complete information when registering with the Website. It is your responsibility to maintain and promptly update this account information to keep it true, accurate, current, and complete. If you provides any information that is fraudulent, untrue, inaccurate, incomplete, or not current, or we have reasonable grounds to suspect that such information is fraudulent, untrue, inaccurate, incomplete, or not current, we reserve the right to suspend or terminate your account without notice and to refuse any and all current and future use of the Website.\n\nAlthough sections of the Website may be viewed simply by visiting the Website, in order to access some Content and/or additional features offered at the Website, you may need to sign on as a guest or register as a member. If you create an account on the Website, you may be asked to supply your name, address, a User ID and password. You are responsible for maintaining the confidentiality of the password and account and are fully responsible for all activities that occur in connection with your password or account. You agree to immediately notify us of any unauthorized use of either your password or account or any other breach of security. You further agree that you will not permit others, including those whose accounts have been terminated, to access the Website using your account or User ID. You grant the Operators and all other persons or entities involved in the operation of the Website the right to transmit, monitor, retrieve, store, and use your information in connection with the operation of the Website and in the provision of services to you. The Operators cannot and do not assume any responsibility or liability for any information you submit, or your or third parties’ use or misuse of information transmitted or received using website. To learn more about how we protect the privacy of the personal information in your account, please visit our <a href="http://default-template.wikidot.com/legal:privacy-policy">Privacy Policy</a>.\n<h2 id="toc5">Indemnification</h2>\nYou agree to defend, indemnify and hold harmless the Operators, agents, vendors or suppliers from and against any and all claims, damages, costs and expenses, including reasonable attorneys\' fees, arising from or related to your use or misuse of the Website, including, without limitation, your violation of these Terms and Conditions, the infringement by you, or any other subscriber or user of your account, of any intellectual property right or other right of any person or entity.\n<h2 id="toc6">Termination</h2>\nThese Terms and Conditions of Use are effective until terminated by either party. If you no longer agree to be bound by these Terms and Conditions, you must cease use of the Website. If you are dissatisfied with the Website, their content, or any of these terms, conditions, and policies, your sole legal remedy is to discontinue using the Website. The Operators reserve the right to terminate or suspend your access to and use of the Website, or parts of the Website, without notice, if we believe, in our sole discretion, that such use (i) is in violation of any applicable law; (ii) is harmful to our interests or the interests, including intellectual property or other rights, of another person or entity; or (iii) where the Operators have reason to believe that you are in violation of these Terms and Conditions of Use.\n<h2 id="toc7">WARRANTY DISCLAIMER</h2>\nTHE WEBSITE AND ASSOCIATED MATERIALS ARE PROVIDED ON AN "AS IS" AND "AS AVAILABLE" BASIS. TO THE FULL EXTENT PERMISSIBLE BY APPLICABLE LAW, THE OPERATORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENTOF INTELLECTUAL PROPERTY. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTY THAT THE WEBSITE WILL MEET YOUR REQUIREMENTS, OR THAT YOUR USE OF THE WEBSITE WILL BE UNINTERRUPTED, TIMELY, SECURE, OR ERROR FREE; NOR DO THE OPERATORS MAKE ANY REPRESENTATION OR WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE WEBSITE. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THE WEBSITE OR THE INFORMATION, CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THE WEBSITE.\n\nIN NO EVENT SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF INFORMATION) ARISING OUT OF THE USE, MISUSE OF OR INABILITY TO USE THE WEBSITE, EVEN IF THE OPERATORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THIS DISCLAIMER CONSTITUTES AN ESSENTIAL PART OF THIS AGREEMENT. BECAUSE SOME JURISDICTIONS PROHIBIT THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\n\nYOU UNDERSTAND AND AGREE THAT ANY CONTENT DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE WEBSITE IS AT YOUR OWN DISCRETION AND RISK AND THAT YOU WILL BE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR LOSS OF DATA OR BUSINESS INTERRUPTION THAT RESULTS FROM THE DOWNLOAD OF CONTENT. THE OPERATORS SHALL NOT BE RESPONSIBLE FOR ANY LOSS OR DAMAGE CAUSED, OR ALLEGED TO HAVE BEEN CAUSED, DIRECTLY OR INDIRECTLY, BY THE INFORMATION OR IDEAS CONTAINED, SUGGESTED OR REFERENCED IN OR APPEARING ON THE WEBSITE. YOUR PARTICIPATION IN THE WEBSITE IS SOLELY AT YOUR OWN RISK. NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THE OPERATORS OR THROUGH THE OPERATORS, THEIR EMPLOYEES, OR THIRD PARTIES SHALL CREATE ANY WARRANTY NOT EXPRESSLY MADE HEREIN. YOU ACKNOWLEDGE, BY YOUR USE OF THE THE WEBSITE, THAT YOUR USE OF THE WEBSITE IS AT YOUR SOLE RISK.\n\nLIABILITY LIMITATION. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL OR EQUITABLE THEORY, WHETHER IN TORT, CONTRACT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE TO USER OR TO ANY OTHER PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY NATURE ARISING OUT OF OR IN CONNECTION WITH THE USE OF OR INABILITY TO USE THE THE WEBSITE OR FOR ANY BREACH OF SECURITY ASSOCIATED WITH THE TRANSMISSION OF SENSITIVE INFORMATION THROUGH THE WEBSITE OR FOR ANY INFORMATION OBTAINED THROUGH THE WEBSITE, INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, LOSS OR CORRUPTION OF DATA, WORK STOPPAGE, ACCURACY OF RESULTS, OR COMPUTER FAILURE OR MALFUNCTION, EVEN IF AN AUTHORIZED REPRESENTATIVE OF THE OPERATORS HAS BEEN ADVISED OF OR SHOULD HAVE KNOWN OF THE POSSIBILITY OF SUCH DAMAGES.\n\nTHE OPERATORS\'S TOTAL CUMULATIVE LIABILITY FOR ANY AND ALL CLAIMS IN CONNECTION WITH THE WEBSITE WILL NOT EXCEED FIVE U.S. DOLLARS ($5.00). USER AGREES AND ACKNOWLEDGES THAT THE FOREGOING LIMITATIONS ON LIABILITY ARE AN ESSENTIAL BASIS OF THE BARGAIN AND THAT THE OPERATORS WOULD NOT PROVIDE THE WEBSITE ABSENT SUCH LIMITATION.\n<h2 id="toc8">General</h2>\nThe Website is hosted in the United States. The Operators make no claims that the Content on the Website is appropriate or may be downloaded outside of the United States. Access to the Content may not be legal by certain persons or in certain countries. If you access the Website from outside the United States, you do so at your own risk and are responsible for compliance with the laws of your jurisdiction. The provisions of the UN Convention on Contracts for the International Sale of Goods will not apply to these Terms. A party may give notice to the other party only in writing at that party\'s principal place of business, attention of that party\'s principal legal officer, or at such other address or by such other method as the party shall specify in writing. Notice shall be deemed given upon personal delivery or facsimile, or, if sent by certified mail with postage prepaid, 5 business days after the date of mailing, or, if sent by international overnight courier with postage prepaid, 7 business days after the date of mailing. If any provision herein is held to be unenforceable, the remaining provisions will continue in full force without being affected in any way. Further, the parties agree to replace such unenforceable provision with an enforceable provision that most closely approximates the intent and economic effect of the unenforceable provision. Section headings are for reference purposes only and do not define, limit, construe or describe the scope or extent of such section. The failure of the Operators to act with respect to a breach of this Agreement by you or others does not constitute a waiver and shall not limit the Operators\' rights with respect to such breach or any subsequent breaches. Any action or proceeding arising out of or related to this Agreement or User\'s use of the Website must be brought in the courts of Belgium, and you consent to the exclusive personal jurisdiction and venue of such courts. Any cause of action you may have with respect to your use of the Website must be commenced within one (1) year after the claim or cause of action arises. These Terms set forth the entire understanding and agreement of the parties, and supersedes any and all oral or written agreements or understandings between the parties, as to their subject matter. The waiver of a breach of any provision of this Agreement shall not be construed as a waiver of any other or subsequent breach.\n<h2 id="toc9">Links to Other Materials</h2>\nThe Website may contain links to sites owned or operated by independent third parties. These links are provided for your convenience and reference only. We do not control such sites and, therefore, we are not responsible for any content posted on these sites. The fact that the Operators offer such links should not be construed in any way as an endorsement, authorization, or sponsorship of that site, its content or the companies or products referenced therein, and the Operators reserve the right to note its lack of affiliation, sponsorship, or endorsement on the Website. If you decide to access any of the third party sites linked to by the Website, you do this entirely at your own risk. Because some sites employ automated search results or otherwise link you to sites containing information that may be deemed inappropriate or offensive, the Operators cannot be held responsible for the accuracy, copyright compliance, legality, or decency of material contained in third party sites, and you hereby irrevocably waive any claim against us with respect to such sites.\n<h2 id="toc10">Notification Of Possible Copyright Infringement</h2>\nIn the event you believe that material or content published on the Website may infringe on your copyright or that of another, please <a href="http://default-template.wikidot.com/contact">contact</a> us.', 'Terms of Use', '', 'inherit', 'open', 'open', '', '270-autosave-v1', '', '', '2014-09-03 19:54:39', '2014-09-04 00:54:39', '', 270, 'http://dev.dorails.com/railsvitamins/270-autosave-v1/', 0, 'revision', '', 0),
(273, 1, '2014-09-03 19:56:28', '2014-09-04 00:56:28', '<h1 style="text-align: center;">Terms of Use</h1>\r\n\r\n<hr />\r\n\r\n<h2 id="toc0">Legal Notices</h2>\r\nWe, the Operators of this Website, provide it as a public service to our users.\r\n\r\nPlease carefully review the following basic rules that govern your use of the Website. Please note that your use of the Website constitutes your unconditional agreement to follow and be bound by these Terms and Conditions of Use. If you (the "User") do not agree to them, do not use the Website, provide any materials to the Website or download any materials from them.\r\n\r\nThe Operators reserve the right to update or modify these Terms and Conditions at any time without prior notice to User. Your use of the Website following any such change constitutes your unconditional agreement to follow and be bound by these Terms and Conditions as changed. For this reason, we encourage you to review these Terms and Conditions of Use whenever you use the Website.\r\n\r\nThese Terms and Conditions of Use apply to the use of the Website and do not extend to any linked third party sites. These Terms and Conditions and our <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a>, which are hereby incorporated by reference, contain the entire agreement (the “Agreement”) between you and the Operators with respect to the Website. Any rights not expressly granted herein are reserved.\r\n<h2 id="toc1">Permitted and Prohibited Uses</h2>\r\nYou may use the the Website for the sole purpose of sharing and exchanging ideas with other Users. You may not use the the Website to violate any applicable local, state, national, or international law, including without limitation any applicable laws relating to antitrust or other illegal trade or business practices, federal and state securities laws, regulations promulgated by the U.S. Securities and Exchange Commission, any rules of any national or other securities exchange, and any U.S. laws, rules, and regulations governing the export and re-export of commodities or technical data.\r\n\r\nYou may not upload or transmit any material that infringes or misappropriates any person\'s copyright, patent, trademark, or trade secret, or disclose via the the Website any information the disclosure of which would constitute a violation of any confidentiality obligations you may have.\r\n\r\nYou may not upload any viruses, worms, Trojan horses, or other forms of harmful computer code, nor subject the Website\'s network or servers to unreasonable traffic loads, or otherwise engage in conduct deemed disruptive to the ordinary operation of the Website.\r\n\r\nYou are strictly prohibited from communicating on or through the Website any unlawful, harmful, offensive, threatening, abusive, libelous, harassing, defamatory, vulgar, obscene, profane, hateful, fraudulent, sexually explicit, racially, ethnically, or otherwise objectionable material of any sort, including, but not limited to, any material that encourages conduct that would constitute a criminal offense, give rise to civil liability, or otherwise violate any applicable local, state, national, or international law.\r\n\r\nYou are expressly prohibited from compiling and using other Users\' personal information, including addresses, telephone numbers, fax numbers, email addresses or other contact information that may appear on the Website, for the purpose of creating or compiling marketing and/or mailing lists and from sending other Users unsolicited marketing materials, whether by facsimile, email, or other technological means.\r\n\r\nYou also are expressly prohibited from distributing Users\' personal information to third-party parties for marketing purposes. The Operators shall deem the compiling of marketing and mailing lists using Users\' personal information, the sending of unsolicited marketing materials to Users, or the distribution of Users\' personal information to third parties for marketing purposes as a material breach of these Terms and Conditions of Use, and the Operators reserve the right to terminate or suspend your access to and use of the Website and to suspend or revoke your membership in the consortium without refund of any membership dues paid.\r\n\r\nThe Operators note that unauthorized use of Users\' personal information in connection with unsolicited marketing correspondence also may constitute violations of various state and federal anti-spam statutes. The Operators reserve the right to report the abuse of Users\' personal information to the appropriate law enforcement and government authorities, and the Operators will fully cooperate with any authorities investigating violations of these laws.\r\n<h2 id="toc2">User Submissions</h2>\r\nThe Operators do not want to receive confidential or proprietary information from you through the Website. Any material, information, or other communication you transmit or post ("Contributions") to the Website will be considered non-confidential.\r\n\r\nAll contributions to this site are licensed by you under the MIT License to anyone who wishes to use them, including the Operators.\r\n\r\nIf you work for a company or at a University, it\'s likely that you\'re not the copyright holder of anything you make, even in your free time. Before making contributions to this site, get written permission from your employer.\r\n<h2 id="toc3">User Discussion Lists and Forums</h2>\r\nThe Operators may, but are not obligated to, monitor or review any areas on the Website where users transmit or post communications or communicate solely with each other, including but not limited to user forums and email lists, and the content of any such communications. The Operators, however, will have no liability related to the content of any such communications, whether or not arising under the laws of copyright, libel, privacy, obscenity, or otherwise. The Operators may edit or remove content on the the Website at their discretion at any time.\r\n<h2 id="toc4">Use of Personally Identifiable Information</h2>\r\nInformation submitted to the Website is governed according to the Operators’s current <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a> and the stated license of this website.\r\n\r\nYou agree to provide true, accurate, current, and complete information when registering with the Website. It is your responsibility to maintain and promptly update this account information to keep it true, accurate, current, and complete. If you provides any information that is fraudulent, untrue, inaccurate, incomplete, or not current, or we have reasonable grounds to suspect that such information is fraudulent, untrue, inaccurate, incomplete, or not current, we reserve the right to suspend or terminate your account without notice and to refuse any and all current and future use of the Website.\r\n\r\nAlthough sections of the Website may be viewed simply by visiting the Website, in order to access some Content and/or additional features offered at the Website, you may need to sign on as a guest or register as a member. If you create an account on the Website, you may be asked to supply your name, address, a User ID and password. You are responsible for maintaining the confidentiality of the password and account and are fully responsible for all activities that occur in connection with your password or account. You agree to immediately notify us of any unauthorized use of either your password or account or any other breach of security. You further agree that you will not permit others, including those whose accounts have been terminated, to access the Website using your account or User ID. You grant the Operators and all other persons or entities involved in the operation of the Website the right to transmit, monitor, retrieve, store, and use your information in connection with the operation of the Website and in the provision of services to you. The Operators cannot and do not assume any responsibility or liability for any information you submit, or your or third parties’ use or misuse of information transmitted or received using website. To learn more about how we protect the privacy of the personal information in your account, please visit our <a title="Privacy Policy" href="http://dev.dorails.com/privacy/">Privacy Policy</a>.\r\n<h2 id="toc5">Indemnification</h2>\r\nYou agree to defend, indemnify and hold harmless the Operators, agents, vendors or suppliers from and against any and all claims, damages, costs and expenses, including reasonable attorneys\' fees, arising from or related to your use or misuse of the Website, including, without limitation, your violation of these Terms and Conditions, the infringement by you, or any other subscriber or user of your account, of any intellectual property right or other right of any person or entity.\r\n<h2 id="toc6">Termination</h2>\r\nThese Terms and Conditions of Use are effective until terminated by either party. If you no longer agree to be bound by these Terms and Conditions, you must cease use of the Website. If you are dissatisfied with the Website, their content, or any of these terms, conditions, and policies, your sole legal remedy is to discontinue using the Website. The Operators reserve the right to terminate or suspend your access to and use of the Website, or parts of the Website, without notice, if we believe, in our sole discretion, that such use (i) is in violation of any applicable law; (ii) is harmful to our interests or the interests, including intellectual property or other rights, of another person or entity; or (iii) where the Operators have reason to believe that you are in violation of these Terms and Conditions of Use.\r\n<h2 id="toc7">WARRANTY DISCLAIMER</h2>\r\nTHE WEBSITE AND ASSOCIATED MATERIALS ARE PROVIDED ON AN "AS IS" AND "AS AVAILABLE" BASIS. TO THE FULL EXTENT PERMISSIBLE BY APPLICABLE LAW, THE OPERATORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENTOF INTELLECTUAL PROPERTY. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTY THAT THE WEBSITE WILL MEET YOUR REQUIREMENTS, OR THAT YOUR USE OF THE WEBSITE WILL BE UNINTERRUPTED, TIMELY, SECURE, OR ERROR FREE; NOR DO THE OPERATORS MAKE ANY REPRESENTATION OR WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE WEBSITE. THE OPERATORS MAKE NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THE WEBSITE OR THE INFORMATION, CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THE WEBSITE.\r\n\r\nIN NO EVENT SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF INFORMATION) ARISING OUT OF THE USE, MISUSE OF OR INABILITY TO USE THE WEBSITE, EVEN IF THE OPERATORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THIS DISCLAIMER CONSTITUTES AN ESSENTIAL PART OF THIS AGREEMENT. BECAUSE SOME JURISDICTIONS PROHIBIT THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\r\n\r\nYOU UNDERSTAND AND AGREE THAT ANY CONTENT DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE WEBSITE IS AT YOUR OWN DISCRETION AND RISK AND THAT YOU WILL BE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR LOSS OF DATA OR BUSINESS INTERRUPTION THAT RESULTS FROM THE DOWNLOAD OF CONTENT. THE OPERATORS SHALL NOT BE RESPONSIBLE FOR ANY LOSS OR DAMAGE CAUSED, OR ALLEGED TO HAVE BEEN CAUSED, DIRECTLY OR INDIRECTLY, BY THE INFORMATION OR IDEAS CONTAINED, SUGGESTED OR REFERENCED IN OR APPEARING ON THE WEBSITE. YOUR PARTICIPATION IN THE WEBSITE IS SOLELY AT YOUR OWN RISK. NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THE OPERATORS OR THROUGH THE OPERATORS, THEIR EMPLOYEES, OR THIRD PARTIES SHALL CREATE ANY WARRANTY NOT EXPRESSLY MADE HEREIN. YOU ACKNOWLEDGE, BY YOUR USE OF THE THE WEBSITE, THAT YOUR USE OF THE WEBSITE IS AT YOUR SOLE RISK.\r\n\r\nLIABILITY LIMITATION. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL OR EQUITABLE THEORY, WHETHER IN TORT, CONTRACT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, SHALL THE OPERATORS OR ANY OF THEIR AGENTS, VENDORS OR SUPPLIERS BE LIABLE TO USER OR TO ANY OTHER PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY NATURE ARISING OUT OF OR IN CONNECTION WITH THE USE OF OR INABILITY TO USE THE THE WEBSITE OR FOR ANY BREACH OF SECURITY ASSOCIATED WITH THE TRANSMISSION OF SENSITIVE INFORMATION THROUGH THE WEBSITE OR FOR ANY INFORMATION OBTAINED THROUGH THE WEBSITE, INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, LOSS OR CORRUPTION OF DATA, WORK STOPPAGE, ACCURACY OF RESULTS, OR COMPUTER FAILURE OR MALFUNCTION, EVEN IF AN AUTHORIZED REPRESENTATIVE OF THE OPERATORS HAS BEEN ADVISED OF OR SHOULD HAVE KNOWN OF THE POSSIBILITY OF SUCH DAMAGES.\r\n\r\nTHE OPERATORS\'S TOTAL CUMULATIVE LIABILITY FOR ANY AND ALL CLAIMS IN CONNECTION WITH THE WEBSITE WILL NOT EXCEED FIVE U.S. DOLLARS ($5.00). USER AGREES AND ACKNOWLEDGES THAT THE FOREGOING LIMITATIONS ON LIABILITY ARE AN ESSENTIAL BASIS OF THE BARGAIN AND THAT THE OPERATORS WOULD NOT PROVIDE THE WEBSITE ABSENT SUCH LIMITATION.\r\n<h2 id="toc8">General</h2>\r\nThe Website is hosted in the United States. The Operators make no claims that the Content on the Website is appropriate or may be downloaded outside of the United States. Access to the Content may not be legal by certain persons or in certain countries. If you access the Website from outside the United States, you do so at your own risk and are responsible for compliance with the laws of your jurisdiction. The provisions of the UN Convention on Contracts for the International Sale of Goods will not apply to these Terms. A party may give notice to the other party only in writing at that party\'s principal place of business, attention of that party\'s principal legal officer, or at such other address or by such other method as the party shall specify in writing. Notice shall be deemed given upon personal delivery or facsimile, or, if sent by certified mail with postage prepaid, 5 business days after the date of mailing, or, if sent by international overnight courier with postage prepaid, 7 business days after the date of mailing. If any provision herein is held to be unenforceable, the remaining provisions will continue in full force without being affected in any way. Further, the parties agree to replace such unenforceable provision with an enforceable provision that most closely approximates the intent and economic effect of the unenforceable provision. Section headings are for reference purposes only and do not define, limit, construe or describe the scope or extent of such section. The failure of the Operators to act with respect to a breach of this Agreement by you or others does not constitute a waiver and shall not limit the Operators\' rights with respect to such breach or any subsequent breaches. Any action or proceeding arising out of or related to this Agreement or User\'s use of the Website must be brought in the courts of Belgium, and you consent to the exclusive personal jurisdiction and venue of such courts. Any cause of action you may have with respect to your use of the Website must be commenced within one (1) year after the claim or cause of action arises. These Terms set forth the entire understanding and agreement of the parties, and supersedes any and all oral or written agreements or understandings between the parties, as to their subject matter. The waiver of a breach of any provision of this Agreement shall not be construed as a waiver of any other or subsequent breach.\r\n<h2 id="toc9">Links to Other Materials</h2>\r\nThe Website may contain links to sites owned or operated by independent third parties. These links are provided for your convenience and reference only. We do not control such sites and, therefore, we are not responsible for any content posted on these sites. The fact that the Operators offer such links should not be construed in any way as an endorsement, authorization, or sponsorship of that site, its content or the companies or products referenced therein, and the Operators reserve the right to note its lack of affiliation, sponsorship, or endorsement on the Website. If you decide to access any of the third party sites linked to by the Website, you do this entirely at your own risk. Because some sites employ automated search results or otherwise link you to sites containing information that may be deemed inappropriate or offensive, the Operators cannot be held responsible for the accuracy, copyright compliance, legality, or decency of material contained in third party sites, and you hereby irrevocably waive any claim against us with respect to such sites.\r\n<h2 id="toc10">Notification Of Possible Copyright Infringement</h2>\r\nIn the event you believe that material or content published on the Website may infringe on your copyright or that of another, please <a title="Contact Us" href="http://dev.dorails.com/contact/">contact</a> us.', 'Terms of Use', '', 'inherit', 'open', 'open', '', '270-revision-v1', '', '', '2014-09-03 19:56:28', '2014-09-04 00:56:28', '', 270, 'http://dev.dorails.com/railsvitamins/270-revision-v1/', 0, 'revision', '', 0),
(274, 1, '2014-09-03 19:59:20', '2014-09-04 00:59:20', '', 'Terms', '', 'publish', 'open', 'open', '', 'terms', '', '', '2014-09-03 19:59:52', '2014-09-04 00:59:52', '', 0, 'http://dev.dorails.com/?p=274', 2, 'nav_menu_item', '', 0),
(275, 1, '2014-09-03 20:04:07', '2014-09-04 01:04:07', '<h1 style="text-align: center;">Privacy Policy</h1>\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<h3>What information do we collect?</h3>\r\nWe collect information from you when you register on our site, place an order, subscribe to our newsletter, respond to a survey, fill out a form or send band information.\r\n\r\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your: name, e-mail address, mailing address or phone number. You may, however, visit our site anonymously.\r\n<h3>What do we use your information for?</h3>\r\nAny of the information we collect from you may be used in one of the following ways:\r\n\r\n; To personalize your experience\r\n(your information helps us to better respond to your individual needs)\r\n\r\n; To improve our website\r\n(we continually strive to improve our website offerings based on the information and feedback we receive from you)\r\n\r\n; To improve customer service\r\n(your information helps us to more effectively respond to your customer service requests and support needs)\r\n\r\n; To administer a contest, promotion, survey or other site feature\r\n\r\n; To send periodic emails\r\n<blockquote>The email address you provide for order processing, may be used to send you information and updates pertaining to your order, in addition to receiving occasional company news, updates, related product or service information, etc.</blockquote>\r\nNote: If at any time you would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at the bottom of each email.\r\n<h3>How do we protect your information?</h3>\r\nWe implement a variety of security measures to maintain the safety of your personal information when you place an order or enter, submit, or access your personal information.\r\n\r\nWe offer the use of a secure server. All supplied sensitive/credit information is transmitted via Secure Socket Layer (SSL) technology and then encrypted into our Payment gateway providers database only to be accessible by those authorized with special access rights to such systems, and are required to?keep the information confidential.\r\n\r\nAfter a transaction, your private information (credit cards, social security numbers, financials, etc.) will not be stored on our servers.\r\n<h3>Do we use cookies?</h3>\r\nYes (Cookies are small files that a site or its service provider transfers to your computers hard drive through your Web browser (if you allow) that enables the sites or service providers systems to recognize your browser and capture and remember certain information\r\n\r\nWe use cookies to understand and save your preferences for future visits, keep track of advertisements and compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future. We may contract with third-party service providers to assist us in better understanding our site visitors. These service providers are not permitted to use the information collected on our behalf except to help us conduct and improve our business.\r\n\r\nIf you prefer, you can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies via your browser settings. Like most websites, if you turn your cookies off, some of our services may not function properly. However, you can still place orders over the telephone or by contacting customer service.\r\n<h3>Do we disclose any information to outside parties?</h3>\r\nWe do not sell, trade, or otherwise transfer to outside parties your personally identifiable information. This does not include trusted third parties who assist us in operating our website, conducting our business, or servicing you, so long as those parties agree to keep this information confidential. We may also release your information when we believe release is appropriate to comply with the law, enforce our site policies, or protect ours or others rights, property, or safety. However, non-personally identifiable visitor information may be provided to other parties for marketing, advertising, or other uses.\r\n<h3>Third party links</h3>\r\nOccasionally, at our discretion, we may include or offer third party products or services on our website. These third party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\r\n<h3>California Online Privacy Protection Act Compliance</h3>\r\nBecause we value your privacy we have taken the necessary precautions to be in compliance with the California Online Privacy Protection Act. We therefore will not distribute your personal information to outside parties without your consent.\r\n<h3>Childrens Online Privacy Protection Act Compliance</h3>\r\nWe are in compliance with the requirements of COPPA (Childrens Online Privacy Protection Act), we do not collect any information from anyone under 13 years of age. Our website, products and services are all directed to people who are at least 13 years old or older.\r\n<h3>Online Privacy Policy Only</h3>\r\nThis online privacy policy applies only to information collected through our website and not to information collected offline.\r\n<h3>Your Consent</h3>\r\nBy using our site, you consent to our web site privacy policy.\r\n<h3>Changes to our Privacy Policy</h3>\r\nIf we decide to change our privacy policy, we will post those changes on this page, and/or update the Privacy Policy modification date below.\r\n\r\nThis policy was last modified on 6/30/2014\r\n<h3>Contacting Us</h3>\r\nIf there are any questions regarding this privacy policy you may contact us using the information below.\r\n\r\nhttp://dev.dorails.com\r\n\r\nParadox\r\ninfo@paradoxsites.com', 'Privacy Policy', '', 'inherit', 'open', 'open', '', '5-revision-v1', '', '', '2014-09-03 20:04:07', '2014-09-04 01:04:07', '', 5, 'http://dev.dorails.com/railsvitamins/5-revision-v1/', 0, 'revision', '', 0),
(276, 1, '2014-09-03 20:06:17', '2014-09-04 01:06:17', '<h1>Contact Us</h1>\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\n[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-09-03 20:06:17', '2014-09-04 01:06:17', '', 15, 'http://dev.dorails.com/railsvitamins/15-revision-v1/', 0, 'revision', '', 0),
(277, 1, '2014-09-03 20:06:25', '2014-09-04 01:06:25', '<h1>Contact Us</h1>\r\n\r\n<hr />\r\n\r\n[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-09-03 20:06:25', '2014-09-04 01:06:25', '', 15, 'http://dev.dorails.com/railsvitamins/15-revision-v1/', 0, 'revision', '', 0),
(278, 1, '2014-09-03 20:07:03', '2014-09-04 01:07:03', '<h1 style="text-align: center;">Contact Us</h1>\r\n\r\n<hr />\r\n\r\n[gravityform id="2" name="Contact Us" ajax="true"]', 'Contact Us', '', 'inherit', 'open', 'open', '', '15-revision-v1', '', '', '2014-09-03 20:07:03', '2014-09-04 01:07:03', '', 15, 'http://dev.dorails.com/railsvitamins/15-revision-v1/', 0, 'revision', '', 0),
(279, 1, '2014-09-03 20:07:20', '2014-09-04 01:07:20', '<h1 style="text-align: center;">Privacy Policy</h1>\r\n\r\n<hr />\r\n\r\n<h3> What information do we collect?</h3>\r\nWe collect information from you when you register on our site, place an order, subscribe to our newsletter, respond to a survey, fill out a form or send band information.\r\n\r\nWhen ordering or registering on our site, as appropriate, you may be asked to enter your: name, e-mail address, mailing address or phone number. You may, however, visit our site anonymously.\r\n<h3>What do we use your information for?</h3>\r\nAny of the information we collect from you may be used in one of the following ways:\r\n\r\n; To personalize your experience\r\n(your information helps us to better respond to your individual needs)\r\n\r\n; To improve our website\r\n(we continually strive to improve our website offerings based on the information and feedback we receive from you)\r\n\r\n; To improve customer service\r\n(your information helps us to more effectively respond to your customer service requests and support needs)\r\n\r\n; To administer a contest, promotion, survey or other site feature\r\n\r\n; To send periodic emails\r\n<blockquote>The email address you provide for order processing, may be used to send you information and updates pertaining to your order, in addition to receiving occasional company news, updates, related product or service information, etc.</blockquote>\r\nNote: If at any time you would like to unsubscribe from receiving future emails, we include detailed unsubscribe instructions at the bottom of each email.\r\n<h3>How do we protect your information?</h3>\r\nWe implement a variety of security measures to maintain the safety of your personal information when you place an order or enter, submit, or access your personal information.\r\n\r\nWe offer the use of a secure server. All supplied sensitive/credit information is transmitted via Secure Socket Layer (SSL) technology and then encrypted into our Payment gateway providers database only to be accessible by those authorized with special access rights to such systems, and are required to?keep the information confidential.\r\n\r\nAfter a transaction, your private information (credit cards, social security numbers, financials, etc.) will not be stored on our servers.\r\n<h3>Do we use cookies?</h3>\r\nYes (Cookies are small files that a site or its service provider transfers to your computers hard drive through your Web browser (if you allow) that enables the sites or service providers systems to recognize your browser and capture and remember certain information\r\n\r\nWe use cookies to understand and save your preferences for future visits, keep track of advertisements and compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future. We may contract with third-party service providers to assist us in better understanding our site visitors. These service providers are not permitted to use the information collected on our behalf except to help us conduct and improve our business.\r\n\r\nIf you prefer, you can choose to have your computer warn you each time a cookie is being sent, or you can choose to turn off all cookies via your browser settings. Like most websites, if you turn your cookies off, some of our services may not function properly. However, you can still place orders over the telephone or by contacting customer service.\r\n<h3>Do we disclose any information to outside parties?</h3>\r\nWe do not sell, trade, or otherwise transfer to outside parties your personally identifiable information. This does not include trusted third parties who assist us in operating our website, conducting our business, or servicing you, so long as those parties agree to keep this information confidential. We may also release your information when we believe release is appropriate to comply with the law, enforce our site policies, or protect ours or others rights, property, or safety. However, non-personally identifiable visitor information may be provided to other parties for marketing, advertising, or other uses.\r\n<h3>Third party links</h3>\r\nOccasionally, at our discretion, we may include or offer third party products or services on our website. These third party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\r\n<h3>California Online Privacy Protection Act Compliance</h3>\r\nBecause we value your privacy we have taken the necessary precautions to be in compliance with the California Online Privacy Protection Act. We therefore will not distribute your personal information to outside parties without your consent.\r\n<h3>Childrens Online Privacy Protection Act Compliance</h3>\r\nWe are in compliance with the requirements of COPPA (Childrens Online Privacy Protection Act), we do not collect any information from anyone under 13 years of age. Our website, products and services are all directed to people who are at least 13 years old or older.\r\n<h3>Online Privacy Policy Only</h3>\r\nThis online privacy policy applies only to information collected through our website and not to information collected offline.\r\n<h3>Your Consent</h3>\r\nBy using our site, you consent to our web site privacy policy.\r\n<h3>Changes to our Privacy Policy</h3>\r\nIf we decide to change our privacy policy, we will post those changes on this page, and/or update the Privacy Policy modification date below.\r\n\r\nThis policy was last modified on 6/30/2014\r\n<h3>Contacting Us</h3>\r\nIf there are any questions regarding this privacy policy you may contact us using the information below.\r\n\r\nhttp://dev.dorails.com\r\n\r\nParadox\r\ninfo@paradoxsites.com', 'Privacy Policy', '', 'inherit', 'open', 'open', '', '5-revision-v1', '', '', '2014-09-03 20:07:20', '2014-09-04 01:07:20', '', 5, 'http://dev.dorails.com/railsvitamins/5-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(280, 1, '2014-09-04 11:49:30', '2014-09-04 16:49:30', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”\r\n“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”\r\n"If I wasn’t forced to learn so many things at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nContrary to the hype. Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build. But guess what, it doesn’t have to be that hard.\r\n\r\nFIX\r\n\r\nWhat it took me years to figure out:\r\n\r\nLearning Rails <em>doesn\'t</em> have to be this hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal getting an app done.\r\n\r\n<span style="color: #3b3a3c;">I learned the hard way. It took me a long time to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you had a fast track, you could save months (or in my case - years) of wasted time. Not to mention you could avoid a ton of unnecessary pain and heartache.</span>\r\n\r\n<span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span>\r\n\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether. I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong><em> one</em>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract</em> concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <strong>together</strong>.</h4>\r\nAnd no dull copy/pasting is necessary, you will simply write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like...</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>But no amount of skills or tools will wipe out the possibility of <strong>error messages</strong>.</h3>\r\nSo with <em>Rails Curve</em> will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhether you are short on time, cash or have no formal education in programming, you will learn how to move the needle no matter what the circumstances. You will learn to make a production plan for yourself that keeps you moving forward. You will experience what it’s like to go from start to finish with a Rails app.\r\n\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own app and build their career with great success and without stalling out.\r\n<h2>Join other makers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet <em>Rails Curve</em> take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 11:49:30', '2014-09-04 16:49:30', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(281, 1, '2014-09-04 12:03:59', '2014-09-04 17:03:59', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”\r\n“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”\r\n"If I wasn’t forced to learn so many things at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', 'Rails Curve', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:03:59', '2014-09-04 17:03:59', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(282, 1, '2014-09-04 12:07:57', '2014-09-04 17:07:57', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”\r\n“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”\r\n"If I wasn’t forced to learn so many things at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails App', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:07:57', '2014-09-04 17:07:57', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(283, 1, '2014-09-04 12:08:33', '2014-09-04 17:08:33', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”\r\n“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”\r\n"If I wasn’t forced to learn so many things at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:08:33', '2014-09-04 17:08:33', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(284, 1, '2014-09-04 12:15:55', '2014-09-04 17:15:55', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n\r\n<strong>“If I would’ve got that Computer Science degree, I could do this…”</strong>\r\n\r\n<strong>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</strong>\r\n\r\n<strong>"If I wasn’t forced to learn so many things at once...”</strong>\r\n\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:15:55', '2014-09-04 17:15:55', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(285, 1, '2014-09-04 12:17:17', '2014-09-04 17:17:17', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h5>“If I would’ve got that Computer Science degree, I could do this…”</h5>\r\n<h5>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h5>\r\n<h5>"If I wasn’t forced to learn so many things at once...”</h5>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:17:17', '2014-09-04 17:17:17', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(286, 1, '2014-09-04 12:17:52', '2014-09-04 17:17:52', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many things at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:17:52', '2014-09-04 17:17:52', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(287, 1, '2014-09-04 12:18:19', '2014-09-04 17:18:19', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3><span style="color: #3b3a3c;">With my Rails Curve course you will build and deploy a live Rails app in 30 days.</span></h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:18:19', '2014-09-04 17:18:19', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0) ;
INSERT INTO `wp_posts` ( `ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(288, 1, '2014-09-04 12:22:14', '2014-09-04 17:22:14', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4><span style="color: #3b3a3c;">I learned the hard way</span></h4>\r\n<span style="color: #3b3a3c;">It took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a <em>ton</em> of unnecessary pain and heartache.</span>\r\n<h3>With my <em>Rails Curve</em> course you will build and deploy a live Rails app in 30 days.</h3>\r\n<span style="color: #3b3a3c;">Bypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.</span>\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:22:14', '2014-09-04 17:22:14', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(289, 1, '2014-09-04 12:23:25', '2014-09-04 17:23:25', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4>Don\'t learned the hard way</h4>\r\nIt took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a ton of unnecessary pain and heartache.\r\n<h3>With my <em>Rails Curve</em> course you will build and deploy a live Rails app in 30 days.</h3>\r\nBypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>Rails Curve</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>Rails Curve</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>Rails Curve</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>Rails Curve</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> Rails Curve </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>Rails Curve</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>Rails Curve</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>Rails Curve</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>Rails Curve</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <em>Rails Curve</em> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <em>Rails Curve</em> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>Rails Curve </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 12:23:25', '2014-09-04 17:23:25', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(291, 1, '2014-09-04 13:20:48', '2014-09-04 18:20:48', 'You’re halfway through your third Ruby on Rails book and you feel like you\'ve hit a wall. It’s 1 o’clock in the morning and your shoulders are feeling heavy. You\'re ready to quit for the night, but for months you\'ve kept telling yourself:\r\n<h3>“If I just finish this last Rails course, <strong>then</strong> I\'ll be ready to start building my Rails app”.</h3>\r\nYou decide to power through and do yet another Ruby exercise on lambda’s and hashes. An hour later, your eyes are glazed over with confusion and exhaustion.\r\n<h4>You feel more like a transcriptionist <em>monkey</em> than a developer.</h4>\r\nYou now have <em>one more</em> refactoring technique swirling around in your brain with no way to use it. You’re officially fried.\r\n\r\nThat’s when you see the next section has an <em>example</em>. "Woohoo!” You can actually <strong>apply</strong> your knowledge!\r\n<h4>But right off the bat you get stuck with another<em> lovely</em> error message.</h4>\r\nUgggh! After an hour and a half of putzing around to get past that, you slam your laptop shut. Now your eyes are wide open and bloodshot. You’re face is turning red. You throw the book across the room into the trash can. Kobe! With teeth clenched you say to yourself,\r\n<h3>"It should <em>not</em> be <strong>THIS</strong> hard!”</h3>\r\nEveryone told you that Rails was <em>easy</em>. But you’ve learned nothing. You’ve accomplished nothing. At this rate you will <strong>never</strong> get your app built.\r\n\r\nYou’re mind is racing as you lay in bed. You’re flailing to find <em>some</em> way to make this work.\r\n<h4>“If I would’ve got that Computer Science degree, I could do this…”</h4>\r\n<h4>“I should\'ve picked the right Rails courses, then I wouldn’t have wasted the last 9 months”</h4>\r\n<h4>"If I wasn’t forced to learn so many concepts at once...”</h4>\r\nOn and on.\r\n\r\nAt this point so many concepts have been thrown at you, but you have <strong>no clue</strong> about how to put them all together.\r\n<h4>You understand HTML &amp; CSS but this is a different monster.</h4>\r\nWhat the hell is MVC? Should you tackle front-end styling first? or back-end database stuff? Should you learn Ruby first before Rails? How do you configure a server for Rails? You can feel your dream slowly being crushed by the load.\r\n\r\nYou click off the light and close your eyes. Now you feel like your sinking into the bed.\r\n<h4>This is not your fault.</h4>\r\nThe learning curve is just too steep. The resources out there are too advanced. Maybe apps are not your thing. Maybe you should just stick to what you know best. You could just go back to making plain \'ol websites and forget all about building apps. So much time and effort would be wasted if you quit now, but maybe it would be best to cut your losses. As dawn breaks, you drift off to sleep.\r\n<h3>But what would it be like if you <em><strong>could</strong></em> build a finished Rails app?</h3>\r\nWhat if you could get it done and live in a matter of <em>days</em>. Seriously, I know it sounds crazy. Imagine there\'s no learning curve. Just you and the code. Doing and learning all at once.\r\n\r\nYou could finally understand the big picture of how it all works together. If you had a clear plan, you could learn each part of Rails in exactly the right order. You could even cut through error messages like they were butter. What if nothing stood in the way of you learning Rails and getting your app shipped?\r\n<h3>Then the dream of building and launching your Rails app could finally come true.</h3>\r\nBut contrary to the hype, Ruby on Rails does have a crazy difficult learning curve. Rails apps take months and months to build.\r\n<h4>What it took me years to figure out:</h4>\r\nLearning Rails <em>doesn\'t</em> have to be <strong>this</strong> hard. You don’t have to have a CS degree. You don’t have to understand every detail about the Ruby language to build a Rails app. Learn by doing! The best way to learn Ruby on Rails more many is to actually build a Rails app one piece at a time. It’s all about stacking up quick wins that work toward the goal of getting a Rails app finished.\r\n<h4>Don\'t learned the hard way</h4>\r\nIt took me a <em>long time</em> to wrap my head around Rails. Let me give you a shortcut so you can save a lot of heartache. If you have a fast track, you will save months (or in my case - years) of wasted time. Not to mention you would avoid a ton of unnecessary pain and heartache.\r\n<h3>With my <em>30-Day Rails</em> course you will build and deploy a live Rails app in 30 days.</h3>\r\nBypass the learning curve altogether! I will walk you through how to build a web app from start to finish. And you will grow all the skills you need to make your own apps moving forward. In four weeks you’ll get experience with all the tools, concepts and skills that you need to – plan, design, develop and (most importantly) ship a web app.\r\n<h4>Learn by doing</h4>\r\nYou will learn <strong>your</strong> way – by <strong>doing</strong>. After all, you decided to learn Rails so you could <em>build</em> an app – so why not learn by <strong>actually building</strong> <strong>one</strong>?\r\n<h4 style="text-align: left;">By following the method of building <strong>AND</strong> learning at the same time you will...</h4>\r\n<ul>\r\n	<li>Understand the big picture <strong>faster</strong></li>\r\n	<li>Pick up complex skills and concepts <strong>faster</strong></li>\r\n	<li>Avoid getting paralyzed by the tiny details</li>\r\n	<li>Avoid the pain of wasting months studying in-depth concepts</li>\r\n	<li>Punch perfectionism <em>in the face</em></li>\r\n</ul>\r\nInstead of spinning your wheels on learning <em>abstract </em>one-off concepts, <em>30-Day Rails</em> will give you:\r\n<h4>a clear <strong>day-by-day plan</strong> for how to build a robust Rails app from <strong>start to finish</strong>.</h4>\r\nEach lesson will include bite-sized video screencasts that will walk you through <strong>exactly</strong> what to do, in plain english. <em>30-Day Rails</em> gives you a solid path of <em>exactly</em> what to learn in <em>exactly</em> the right order. You will quickly move step by step through the process and pick up skills in each lesson until you have a completed (live) web app and the skills you need to dive into even more advanced material.\r\n<h4>As you move through each lesson, you will get a solid foundation of the key concepts and get <strong>first-hand experience</strong> on how they all work <em><strong>together</strong></em>.</h4>\r\nAnd no dull copy/pasting is necessary, you will write code yourself and learn the what, why and how as you go. Plus, everything is based on Rails 4 so you’ll have the latest and greatest training for Rails.\r\n<h4 style="text-align: left;"><em>30-Day Rails</em> will <strong>jump-start</strong> your understanding of key elements like:</h4>\r\n<div class="row">\r\n<ul class="col-md-6">\r\n	<li>Ruby</li>\r\n	<li>Gems</li>\r\n	<li>Ruby on Rails Framework</li>\r\n	<li>Command Line (Terminal)</li>\r\n	<li>MVC pattern (Model View Controller)</li>\r\n	<li>Object-Oriented Programming</li>\r\n	<li>Active Record</li>\r\n	<li>Databases</li>\r\n	<li>HTML &amp; ERB</li>\r\n	<li>CSS and Sass</li>\r\n	<li>Javascript and CoffeeScript</li>\r\n</ul>\r\n<ul class="col-md-6">\r\n	<li>Front-end Frameworks</li>\r\n	<li>Deployment</li>\r\n	<li>Version Control</li>\r\n	<li>Validation</li>\r\n	<li>User Authentication</li>\r\n	<li>UI Design</li>\r\n	<li>UX Design</li>\r\n	<li>Project Management</li>\r\n	<li>and more...</li>\r\n</ul>\r\n</div>\r\n<h3>You can’t build an app without the right tools</h3>\r\nSo you will get hands-on experience with all of the standard tools like the command-line (Terminal), a text editor (like <em>Sublime</em> Text), <em>Git</em>, <em>Github</em>, <em>Heroku</em>, <em>Twitter Bootstrap</em>, <em>Devise</em>, and more. You will learn the ins-and-outs of all the tools you <em>gotta have</em> in your Rails toolbelt.\r\n<h4>With <em>30-Day Rails</em> you will learn <strong>exactly</strong> how to do things like ...</h4>\r\n<ul>\r\n	<li>use the command-line to create a new blank-slate app</li>\r\n	<li>use a single command to create a rails server on your computer</li>\r\n	<li>use <em>Git</em> to manage your source code and push it to an online repo at <em>Github</em></li>\r\n	<li>use the command-line to generate the pages and elements of your app on the fly</li>\r\n	<li>use the command-line to manage your database</li>\r\n	<li>use the command-line to push your app to a live server on <em>Heroku</em></li>\r\n	<li>use <em>Twitter Bootstrap</em> to rapidly style your app - with <strong>no</strong> design experience needed.</li>\r\n	<li>use the <em>Devise</em> gem to create user sign-up and sign-in in a matter of minutes.</li>\r\n	<li>and a lot more</li>\r\n</ul>\r\n<h3>Learn to deal with <strong>error messages</strong>.</h3>\r\nThe<em> 30-Day Rails </em>course will teach you how to <strong>eliminate</strong> "getting stuck" forever. You’ll get <strong>real-world experience</strong> troubleshooting error messages for yourself <em>quickly</em> so you never have to slam on the breaks again. You will master the art of ...\r\n<ul>\r\n	<li>Reading error messages to get clues about what part of your app needs fixing</li>\r\n	<li>Googling and searching online dev communities to get past any error <em>in minutes</em></li>\r\n	<li>checking <em>Rails</em> and <em>Heroku</em> error logs using your trusty command line</li>\r\n</ul>\r\n<h3>By the time you finish <em>30-Day Rails</em> you will have...</h3>\r\n<ul>\r\n	<li>seen how to make a solid plan you can follow</li>\r\n	<li>created all the key features needed for the app</li>\r\n	<li>sketched &amp; styled a beautiful UI on the front-end of the app</li>\r\n	<li>created a solid database back-end for the app</li>\r\n	<li>implemented a user authentication system for users to sign in and sign out</li>\r\n	<li>deployed your app to a live server</li>\r\n	<li>grown a slew of foundational web development skills in the process</li>\r\n</ul>\r\n<h3>You can <em>finally</em> get the <strong>traction</strong> you need</h3>\r\nWhen you complete <em>30-Day Rails</em> you’ll feel confident that you can build apps from start to finish on your own. You’ll be totally certain that you can get past any error or issue. Your excitement won’t diminish because you’ll have a solid plan that moves you to progress. You will be relieved that you don’t have to spend thousands of dollars and months of time to learn Rails. And you can finally feel in control because you will understand what each line of code does.\r\n<h3>So, fast forward 30 days and you have finished with <em>30-Day Rails</em>. <strong>Now what?</strong></h3>\r\nBack to the obscure world of not knowing what’s next? <strong><em>No way</em>.</strong> When you complete the lessons you will definitely want to transition into building your own app idea. So <em>30-Day Rails</em> includes outro lessons that will walk you through how to <strong>create your own plan</strong> for <em>your</em> app. This will leave you with a solid action plan that you can follow from start to finish. If you have unique issues or you need a push in the right direction, I also offer <a href="mailto:me@tyrichards.com">Rails coaching</a>. My goal is to see everyone who goes through <i>30-Day Rails</i> build and launch their own apps and build their business or career with great success and without burning out.\r\n<h2>Join other developers who learn by doing</h2>\r\nWith <i>30-Day Rails</i> you will build a <em>real</em> Rails app from start to finish and get all the skills you need to move forward and build your own app.\r\n\r\nLet my <em>30-Day Rails</em><em> </em>course take away the agony of learning Ruby on Rails.', '30-Day Rails', '', 'inherit', 'open', 'open', '', '105-revision-v1', '', '', '2014-09-04 13:20:48', '2014-09-04 18:20:48', '', 105, 'http://dev.dorails.com/railsvitamins/105-revision-v1/', 0, 'revision', '', 0),
(292, 1, '2014-09-04 13:27:20', '2014-09-04 18:27:20', 'Are you spinning your wheels with Rails? Buried in error messages? Wasting a load of time trying to figure out the essentials of Ruby on Rails? Do you learn by doing? Well imagine you could get all of the key Rails skills and <strong>build</strong> an app at the same time.\r\n\r\nMy <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">upcoming course</a> can give you the foundational skills you need to build <b>AND </b>ship Rails apps. Whether it\'s to level up your career or start your own business, I think it can help you get launched. I\'d go on but I\'ve already said it <a title="30-Day Rails" href="http://dev.dorails.com/30dayrails/" target="_blank">here</a>. If you\'re stuck and need a leg up with Ruby on Rails, check it out by clicking below.\r\n\r\n<a class="btn btn-primary" title="30-Day Rails" href="http://dev.dorails.com/30dayrails/">Learn more</a>', 'Speed up the learning curve for Ruby on Rails', '', 'inherit', 'open', 'open', '', '137-revision-v1', '', '', '2014-09-04 13:27:20', '2014-09-04 18:27:20', '', 137, 'http://dev.dorails.com/railsvitamins/137-revision-v1/', 0, 'revision', '', 0) ;

#
# End of data contents of table `wp_posts`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_form`
#

DROP TABLE IF EXISTS `wp_rg_form`;


#
# Table structure of table `wp_rg_form`
#

CREATE TABLE `wp_rg_form` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(150) NOT NULL,
  `date_created` datetime NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `is_trash` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_form`
#
INSERT INTO `wp_rg_form` ( `id`, `title`, `date_created`, `is_active`, `is_trash`) VALUES
(1, 'Don\'t miss out on my next post.', '2014-06-16 21:58:59', 1, 0),
(2, 'Send a message', '2014-06-17 20:47:59', 1, 0),
(3, 'Notify me when <i>30-Day Rails</i> is released', '2014-08-23 20:42:52', 1, 0),
(4, 'Pre-order Rails Curve yearly access for only <del>$99</del> $49', '2014-08-24 09:56:59', 1, 0) ;

#
# End of data contents of table `wp_rg_form`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_form_meta`
#

DROP TABLE IF EXISTS `wp_rg_form_meta`;


#
# Table structure of table `wp_rg_form_meta`
#

CREATE TABLE `wp_rg_form_meta` (
  `form_id` mediumint(8) unsigned NOT NULL,
  `display_meta` longtext,
  `entries_grid_meta` longtext,
  `confirmations` longtext,
  `notifications` longtext,
  PRIMARY KEY (`form_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_form_meta`
#
INSERT INTO `wp_rg_form_meta` ( `form_id`, `display_meta`, `entries_grid_meta`, `confirmations`, `notifications`) VALUES
(1, '{"title":"Don\'t miss out on my next post.","description":"Sign up to receive more Rails tips & tricks right to your inbox.","labelPlacement":"top_label","descriptionPlacement":"below","button":{"type":"text","text":"Sign Up","imageUrl":""},"fields":[{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":4,"inputName":"","isRequired":true,"label":"First Name","noDuplicates":"","size":"large","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":1,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"Don\'t forget your email","id":3,"inputName":"","isRequired":true,"label":"Email","noDuplicates":false,"size":"large","type":"email","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":1,"descriptionPlacement":"below"}],"id":1,"useCurrentUserAsAuthor":true,"postContentTemplateEnabled":false,"postTitleTemplateEnabled":false,"postTitleTemplate":"","postContentTemplate":"","lastPageButton":null,"pagination":null,"firstPageCssClass":null,"cssClass":"gplaceholder","enableHoneypot":"","enableAnimation":"","limitEntries":"","limitEntriesCount":"","limitEntriesPeriod":"","limitEntriesMessage":"","scheduleForm":"","scheduleStart":"","scheduleStartHour":"","scheduleStartMinute":"","scheduleStartAmpm":"","scheduleEnd":"","scheduleEndHour":"","scheduleEndMinute":"","scheduleEndAmpm":"","schedulePendingMessage":"","scheduleMessage":"","requireLogin":"","requireLoginMessage":""}', '', '{"539f68a36e35d":{"id":"539f68a36e35d","name":"Default Confirmation","isDefault":"1","type":"page","message":"","url":"","pageId":"260","queryString":"","disableAutoformat":"","conditionalLogic":[]}}', '{"539f68a36dc50":{"id":"539f68a36dc50","to":"{admin_email}","name":"Admin Notification","event":"form_submission","toType":"email","subject":"New submission from {form_title}","message":"{all_fields}"},"53f90293deebd":{"isActive":true,"id":"53f90293deebd","name":"User Autoresponse","event":"form_submission","to":"3","toType":"field","bcc":"","subject":"Nice to meet you :)","message":"<h1 style=\\"color: #202020;\\">Nice to meet you :)<\\/h1>\\r\\n<div style=\\"color: #202020;\\"><\\/div>\\r\\n<div style=\\"color: #202020;\\">Hey\\u00a0{First Name:4}!<\\/div>\\r\\n<div style=\\"color: #202020;\\"><\\/div>\\r\\n<div style=\\"color: #202020;\\">Thanks for joining my little newsletter, Rails Vitamins. I will talk about all things Ruby on Rails including\\u00a0development, design,\\u00a0and bootstrapping.\\u00a0I hope you\'ll stick around, and please don\'t be afraid to reach out to me whenever you\'d like.<\\/div>\\r\\n<div style=\\"color: #202020;\\">\\r\\n\\r\\nI guess I should introduce myself\\u00a0and tell you a bit about who I am and why I am offering regular advice for Rails developers (or aspiring devs). Then I want to know\\u00a0<strong>one thing that annoys you about Rails or freelancing<\\/strong>.\\r\\n\\r\\nMy name is Ty. I\'m passionate\\u00a0about building products that make the world a better place, writing music, and traveling.\\u00a0In 2003 I started freelancing as a\\u00a0web developer &amp; designer. I officially\\u00a0started my web &amp; mobile app development biz back in 2011 and kept growing from there. Now we\'ve got clients all over the US and a small team of remote developers &amp;\\u00a0designers. You can learn about us\\u00a0<a style=\\"color: #ee4343;\\" href=\\"http:\\/\\/paradoxcreative.com\\/\\" target=\\"_blank\\">here<\\/a>.\\r\\n\\r\\nI have screwed up\\u00a0<em>so<\\/em>\\u00a0many things along the way (and still do), and learned a lot of things the hard\\u00a0way.\\u00a0I\\u00a0have\\u00a0juggled\\u00a0projects,\\u00a0clients, and teams, along with the\\u00a0day-to-day\\u00a0business admin stuff.\\u00a0<em>Here\'s my chance to pay it forward to other freelancers and make sure you don\'t run into all the problems I have<\\/em>.\\r\\n\\r\\nBy the way, I have a new course\\u00a0called 30-Day Rails that helps you bypass the learning curve for Ruby on Rails. You can learn more about it <a title=\\"30-Day Rails\\" href=\\"http:\\/\\/dev.dorails.com\\/30dayrails\\/\\" target=\\"_blank\\">here<\\/a>.\\r\\n<h3>First, though, some homework. (I know, right? We\\u00a0<em>just<\\/em>\\u00a0met.)\\u00a0I\'d love if you would hit reply to this email and tell me about yourself.<\\/h3>\\r\\n<ul>\\r\\n\\t<li>Who are you?<\\/li>\\r\\n\\t<li>What do you do?<\\/li>\\r\\n\\t<li>What are you passionate about?<\\/li>\\r\\n\\t<li><span style=\\"font-family: arial, \'helvetica neue\', helvetica, sans-serif;\\">Consider yourself a beginner or advanced?<\\/span><\\/li>\\r\\n\\t<li><strong>What is one thing that annoys you about\\u00a0Rails or freelancing?<\\/strong><\\/li>\\r\\n<\\/ul>\\r\\nMaybe you have questions about something you\'re stuck on in Rails, front-end, back-end, design, managing time, hourly rates, client problems, invoicing\\/propsals, you name it...\\r\\n\\r\\n<\\/div>\\r\\n<div style=\\"color: #202020;\\">\\r\\n\\r\\nFeel free to keep it short if you\'re busy, but I\'d still love to hear from you.\\u00a0I read and reply to every email that comes my way.\\u00a0Thanks again for joining, and I hope you\'re having an awesome day.\\r\\n\\r\\nTake care,\\r\\nTy\\r\\n\\r\\nP.S. See all the articles I wrote for Rails devs on\\u00a0the blog.\\u00a0<a style=\\"color: #ee4343;\\" href=\\"http:\\/\\/railsvitamins.com\\/\\" target=\\"_blank\\">Check them out if you haven\'t yet<\\/a>. Also follow us on twitter @RailsVitamins\\r\\n\\r\\n<\\/div>","from":"ty@railsvitamins.com","fromName":"Rails Vitamins","replyTo":"ty@railsvitamins.com","routing":null,"conditionalLogic":null,"disableAutoformat":""}}'),
(2, '{"title":"Send a message","description":"Stuck on a project ? Have an idea for the next Rails Vitamin? Or just want to give us a shout? Complete the form or email us at <a href=\\"mailto:ty@dorails.com\\">ty@dorails.com<\\/a> and we\'ll get back with you shortly.","labelPlacement":"top_label","descriptionPlacement":"below","button":{"type":"text","text":"Send","imageUrl":""},"fields":[{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":1,"inputName":"","isRequired":true,"label":"First Name","noDuplicates":"","size":"medium","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":2,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":2,"inputName":"","isRequired":true,"label":"Last Name","noDuplicates":"","size":"medium","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":2,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":3,"inputName":"","isRequired":true,"label":"Email","noDuplicates":"","size":"medium","type":"email","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":2,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":"","defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":4,"inputName":"","isRequired":false,"label":"Phone","noDuplicates":"","size":"medium","type":"phone","postCustomFieldName":"","displayAllCategories":"","displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"standard","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","formId":2,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"gf_full","errorMessage":"","id":5,"inputName":"","isRequired":true,"label":"Message","noDuplicates":"","size":"medium","type":"textarea","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":2,"descriptionPlacement":"below"},{"id":6,"label":"Opt In","adminLabel":"","type":"checkbox","isRequired":false,"size":"medium","errorMessage":"","choices":[{"text":"I want to recieve Rails Vitamins newsletter","value":"I want to recieve Rails Vitamins newsletter","isSelected":false,"price":""}],"inputs":[{"id":"6.1","label":"I want to recieve Rails Vitamins newsletter","name":""}],"multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"displayAllCategories":false,"inputMask":false,"inputMaskValue":"","allowsPrepopulate":false}],"id":2,"useCurrentUserAsAuthor":true,"postContentTemplateEnabled":false,"postTitleTemplateEnabled":false,"postTitleTemplate":"","postContentTemplate":"","lastPageButton":null,"pagination":null,"firstPageCssClass":null,"cssClass":"gplaceholder","enableHoneypot":"","enableAnimation":"","limitEntries":"","limitEntriesCount":"","limitEntriesPeriod":"","limitEntriesMessage":"","scheduleForm":"","scheduleStart":"","scheduleStartHour":"","scheduleStartMinute":"","scheduleStartAmpm":"","scheduleEnd":"","scheduleEndHour":"","scheduleEndMinute":"","scheduleEndAmpm":"","schedulePendingMessage":"","scheduleMessage":"","requireLogin":"","requireLoginMessage":""}', NULL, '{"53a0a97fe01f7":{"id":"53a0a97fe01f7","name":"Default Confirmation","isDefault":"1","type":"message","message":"Thanks for contacting us! We will get in touch with you shortly.","url":"","pageId":"","queryString":"","disableAutoformat":"","conditionalLogic":[]}}', '{"53a0a97fdff03":{"id":"53a0a97fdff03","to":"{admin_email}","name":"Admin Notification","event":"form_submission","toType":"email","subject":"New submission from {form_title}","message":"{all_fields}"}}'),
(3, '{"title":"Notify me when <i>30-Day Rails<\\/i> is released","description":"Find out the latest on when 30-Day Rails will be available by signing up below.","labelPlacement":"top_label","descriptionPlacement":"below","button":{"type":"text","text":"Notify Me","imageUrl":""},"fields":[{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":4,"inputName":"","isRequired":true,"label":"First Name","noDuplicates":"","size":"large","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":3,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"Don\'t forget your email","id":3,"inputName":"","isRequired":true,"label":"Email","noDuplicates":false,"size":"large","type":"email","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":3,"descriptionPlacement":"below"}],"id":3,"useCurrentUserAsAuthor":true,"postContentTemplateEnabled":false,"postTitleTemplateEnabled":false,"postTitleTemplate":"","postContentTemplate":"","lastPageButton":null,"pagination":null,"firstPageCssClass":null,"cssClass":"gplaceholder","enableHoneypot":"","enableAnimation":"","limitEntries":"","limitEntriesCount":"","limitEntriesPeriod":"","limitEntriesMessage":"","scheduleForm":"","scheduleStart":"","scheduleStartHour":"","scheduleStartMinute":"","scheduleStartAmpm":"","scheduleEnd":"","scheduleEndHour":"","scheduleEndMinute":"","scheduleEndAmpm":"","schedulePendingMessage":"","scheduleMessage":"","requireLogin":"","requireLoginMessage":"","notifications":{"539f68a36dc50":{"id":"539f68a36dc50","to":"{admin_email}","name":"Admin Notification","event":"form_submission","toType":"email","subject":"New submission from {form_title}","message":"{all_fields}"},"53f906dd24c7d":{"id":"53f906dd24c7d","name":"User Autoresponse","event":"form_submission","to":"3","toType":"field","bcc":"","subject":"Thanks for your interest in Rails Curve","message":"Hey\\u00a0{First Name:4},\\r\\n\\r\\nThanks for checking out <em>Rails Curve.\\u00a0<\\/em>\\r\\n\\r\\nMy name is Ty, and I\'m a developer trying to kill the\\u00a0barrier to entry to learn Ruby on Rails and build apps. I\'m working out the details right now to get <em>Rails Curve<\\/em>\\u00a0launched soon. I\'ll keep you posted on the release date.\\r\\n\\r\\nI know we just met, but can I ask you a favor? I\'m trying to make this the best product for you. If you have a quick second could you please shoot me an\\u00a0email with the following:\\r\\n<ul>\\r\\n\\t<li>Tell me a bit about yourself?<\\/li>\\r\\n\\t<li>What are you passionate about?<\\/li>\\r\\n\\t<li>Would you consider yourself a beginner or advanced at Rails?<\\/li>\\r\\n\\t<li>What you are hoping to get from\\u00a0Rails Curve?<\\/li>\\r\\n<\\/ul>\\r\\nIn the mean time checkout my weekly Rails tips and tricks on <a href=\\"http:\\/\\/dorails.com\\/railsvitamins\\">Rails Vitamins<\\/a>. \\u00a0Talk to you soon!\\r\\n\\r\\nCheers,\\r\\nTy","from":"ty@railsvitamins.com","fromName":"Rails Curve","replyTo":"ty@railsvitamins.com","routing":null,"conditionalLogic":null,"disableAutoformat":""}},"confirmations":{"539f68a36e35d":{"id":"539f68a36e35d","name":"Default Confirmation","isDefault":"1","type":"page","message":"","url":"","pageId":"264","queryString":"","disableAutoformat":"","conditionalLogic":[]}}}', '', '{"539f68a36e35d":{"id":"539f68a36e35d","name":"Default Confirmation","isDefault":"1","type":"page","message":"","url":"","pageId":"264","queryString":"","disableAutoformat":"","conditionalLogic":[]}}', '{"539f68a36dc50":{"id":"539f68a36dc50","to":"{admin_email}","name":"Admin Notification","event":"form_submission","toType":"email","subject":"New submission from {form_title}","message":"{all_fields}"},"53f906dd24c7d":{"isActive":true,"id":"53f906dd24c7d","name":"User Autoresponse","event":"form_submission","to":"3","toType":"field","bcc":"","subject":"Thanks for your interest in Rails Curve","message":"Hey\\u00a0{First Name:4},\\r\\n\\r\\nThanks for checking out 30-Day Rails<em>.\\u00a0<\\/em>\\r\\n\\r\\nMy name is Ty, and I\'m a developer trying to kill the\\u00a0barrier to entry to learn Ruby on Rails and build apps. I\'m working out the details right now to get 30-Day Rails\\u00a0launched soon. I\'ll keep you posted on the release date.\\r\\n\\r\\nI know we just met, but can I ask you a favor? I\'m trying to make this the best product for you. If you have a quick second could you please shoot me an\\u00a0email with the following:\\r\\n<ul>\\r\\n\\t<li>Tell me a bit about yourself?<\\/li>\\r\\n\\t<li>What are you passionate about?<\\/li>\\r\\n\\t<li>Would you consider yourself a beginner or advanced at Rails?<\\/li>\\r\\n\\t<li>What you are hoping to get from 30-Day Rails?<\\/li>\\r\\n<\\/ul>\\r\\nIn the mean time checkout my weekly Rails tips and tricks on <a href=\\"http:\\/\\/dorails.com\\/railsvitamins\\">Rails Vitamins<\\/a>. \\u00a0Talk to you soon!\\r\\n\\r\\nCheers,\\r\\nTy","from":"ty@railsvitamins.com","fromName":"30-Day Rails","replyTo":"ty@railsvitamins.com","routing":null,"conditionalLogic":null,"disableAutoformat":""}}'),
(4, '{"title":"Pre-order Rails Curve yearly access for only <del>$99<\\/del> $49","description":"Save $50 by joining early. You will get a life-time rate of $49 per year and your cost will never go up for the yearly membership. This only lasts until the official launch of the product in a few weeks. Plus if you pre-order Rails Curve, I can make the initial course that much better.","labelPlacement":"top_label","descriptionPlacement":"below","button":{"type":"text","text":"Yes, I want to pre-order Rails Curve","imageUrl":""},"fields":[{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":1,"inputName":"","isRequired":true,"label":"First Name","noDuplicates":"","size":"medium","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":4,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":2,"inputName":"","isRequired":true,"label":"Last Name","noDuplicates":"","size":"medium","type":"text","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","formId":4,"descriptionPlacement":"below"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":3,"inputName":"","isRequired":true,"label":"Email","noDuplicates":false,"size":"medium","type":"email","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","emailConfirmEnabled":false,"formId":4,"descriptionPlacement":"below"},{"id":5,"label":"Phone","adminLabel":"","type":"phone","isRequired":false,"size":"medium","errorMessage":"","inputs":null,"phoneFormat":"standard"},{"adminLabel":"","adminOnly":"","allowsPrepopulate":false,"defaultValue":"","description":"","content":"","cssClass":"","errorMessage":"","id":4,"inputName":"","isRequired":true,"label":"Password","noDuplicates":"","size":"medium","type":"password","postCustomFieldName":"","displayAllCategories":false,"displayCaption":"","displayDescription":"","displayTitle":"","inputType":"","rangeMin":"","rangeMax":"","calendarIconType":"","calendarIconUrl":"","dateType":"","dateFormat":"","phoneFormat":"","addressType":"","defaultCountry":"","defaultProvince":"","defaultState":"","hideAddress2":"","hideCountry":"","hideState":"","inputs":null,"nameFormat":"","allowedExtensions":"","captchaType":"","pageNumber":1,"captchaTheme":"","simpleCaptchaSize":"","simpleCaptchaFontColor":"","simpleCaptchaBackgroundColor":"","failed_validation":"","productField":"","enablePasswordInput":"","maxLength":"","enablePrice":"","basePrice":"","displayOnly":true,"multipleFiles":false,"maxFiles":"","calculationFormula":"","calculationRounding":"","enableCalculation":"","disableQuantity":false,"inputMask":false,"inputMaskValue":"","passwordStrengthEnabled":false,"minPasswordStrength":"","formId":4,"descriptionPlacement":"below"}],"id":4,"useCurrentUserAsAuthor":true,"postContentTemplateEnabled":false,"postTitleTemplateEnabled":false,"postTitleTemplate":"","postContentTemplate":"","lastPageButton":null,"pagination":null,"firstPageCssClass":null,"cssClass":"gplaceholder","enableHoneypot":"","enableAnimation":"","limitEntries":"","limitEntriesCount":"","limitEntriesPeriod":"","limitEntriesMessage":"","scheduleForm":"","scheduleStart":"","scheduleStartHour":"","scheduleStartMinute":"","scheduleStartAmpm":"","scheduleEnd":"","scheduleEndHour":"","scheduleEndMinute":"","scheduleEndAmpm":"","schedulePendingMessage":"","scheduleMessage":"","requireLogin":"","requireLoginMessage":""}', '', '{"53f9b6ebef4bb":{"id":"53f9b6ebef4bb","name":"Default Confirmation","isDefault":"1","type":"page","message":"","url":"","pageId":"147","queryString":"","disableAutoformat":"","conditionalLogic":[]}}', '{"53f9b6ebef0ab":{"id":"53f9b6ebef0ab","name":"Admin Notification","event":"form_submission","to":"me@tyrichards.com","toType":"email","bcc":"","subject":"New sign up for Rails Curve","message":"{all_fields}","from":"noreply@dorails.com","fromName":"Rails Curve","replyTo":"","routing":null,"conditionalLogic":null,"disableAutoformat":""},"53f9b96cb327a":{"id":"53f9b96cb327a","name":"User Autoresponse","event":"form_submission","to":"3","toType":"field","bcc":"","subject":"Thanks for Pre-ordering Rails Curve","message":"Hey\\u00a0{First Name:4},\\r\\n\\r\\nThanks for pre-ordering\\u00a0<em>Rails Curve.\\u00a0<\\/em>\\r\\n\\r\\nMy name is Ty, and I\'m a developer trying to kill the\\u00a0barrier to entry to learn Ruby on Rails and build apps. I\'m working out the details right now to get\\u00a0<em>Rails Curve<\\/em>\\u00a0launched in the next coming weeks. I\'ll keep you posted on the release date.\\r\\n\\r\\nI know we just met, but can I ask you a favor? I\'m trying to make this the best product for you. If you have a quick second could you please shoot me an\\u00a0email with the following:\\r\\n<ul>\\r\\n\\t<li>Tell me a bit about yourself?<\\/li>\\r\\n\\t<li>What are you passionate about?<\\/li>\\r\\n\\t<li>Would you consider yourself a beginner or advanced at Rails?<\\/li>\\r\\n\\t<li>What you are hoping to get from\\u00a0Rails Curve?<\\/li>\\r\\n<\\/ul>\\r\\nIn the mean time checkout my weekly Rails tips and tricks on\\u00a0<a href=\\"http:\\/\\/dorails.com\\/railsvitamins\\">Rails Vitamins<\\/a>. \\u00a0Talk to you soon!\\r\\n\\r\\nCheers,\\r\\nTy","from":"me@tyrichards.com","fromName":"Rails Curve","replyTo":"me@tyrichards.com","routing":null,"conditionalLogic":null,"disableAutoformat":""}}') ;

#
# End of data contents of table `wp_rg_form_meta`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_form_view`
#

DROP TABLE IF EXISTS `wp_rg_form_view`;


#
# Table structure of table `wp_rg_form_view`
#

CREATE TABLE `wp_rg_form_view` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `form_id` mediumint(8) unsigned NOT NULL,
  `date_created` datetime NOT NULL,
  `ip` char(15) DEFAULT NULL,
  `count` mediumint(8) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `form_id` (`form_id`)
) ENGINE=InnoDB AUTO_INCREMENT=266 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_form_view`
#
INSERT INTO `wp_rg_form_view` ( `id`, `form_id`, `date_created`, `ip`, `count`) VALUES
(1, 1, '2014-06-16 22:05:36', '127.0.0.1', 15),
(2, 1, '2014-06-17 02:22:27', '127.0.0.1', 42),
(3, 1, '2014-06-17 03:03:29', '127.0.0.1', 39),
(4, 1, '2014-06-17 12:57:44', '127.0.0.1', 2),
(5, 1, '2014-06-17 15:43:25', '127.0.0.1', 8),
(6, 1, '2014-06-17 16:23:31', '127.0.0.1', 7),
(7, 1, '2014-06-17 17:04:19', '127.0.0.1', 29),
(8, 1, '2014-06-17 18:01:30', '127.0.0.1', 95),
(9, 1, '2014-06-17 19:00:02', '127.0.0.1', 23),
(10, 1, '2014-06-17 20:15:35', '127.0.0.1', 24),
(11, 2, '2014-06-17 20:51:30', '127.0.0.1', 3),
(12, 2, '2014-06-17 21:00:05', '127.0.0.1', 2),
(13, 1, '2014-06-17 21:04:14', '127.0.0.1', 212),
(14, 1, '2014-06-17 22:03:05', '127.0.0.1', 15),
(15, 2, '2014-06-18 00:23:31', '64.125.188.26', 5),
(16, 1, '2014-06-18 00:47:47', '127.0.0.1', 5),
(17, 1, '2014-06-23 19:09:40', '127.0.0.1', 1),
(18, 1, '2014-08-01 17:13:14', '127.0.0.1', 22),
(19, 1, '2014-08-01 18:00:21', '127.0.0.1', 3),
(20, 1, '2014-08-01 19:42:36', '127.0.0.1', 1),
(21, 1, '2014-08-01 20:52:29', '127.0.0.1', 5),
(22, 1, '2014-08-01 21:04:01', '127.0.0.1', 23),
(23, 1, '2014-08-01 22:08:38', '127.0.0.1', 2),
(24, 1, '2014-08-02 01:13:23', '127.0.0.1', 1),
(25, 1, '2014-08-02 06:20:22', '127.0.0.1', 9),
(26, 1, '2014-08-02 15:10:22', '127.0.0.1', 2),
(27, 1, '2014-08-02 21:59:25', '127.0.0.1', 1),
(28, 1, '2014-08-02 22:00:06', '127.0.0.1', 14),
(29, 1, '2014-08-02 23:35:50', '127.0.0.1', 25),
(30, 1, '2014-08-03 00:01:17', '127.0.0.1', 43),
(31, 2, '2014-08-03 00:12:29', '127.0.0.1', 1),
(32, 1, '2014-08-03 02:17:15', '127.0.0.1', 3),
(33, 1, '2014-08-04 13:44:05', '127.0.0.1', 2),
(34, 1, '2014-08-04 14:35:00', '127.0.0.1', 1),
(35, 1, '2014-08-04 15:53:59', '66.249.84.36', 3),
(36, 1, '2014-08-04 16:00:28', '66.249.67.73', 45),
(37, 2, '2014-08-04 16:16:25', '63.163.55.1', 1),
(38, 1, '2014-08-04 17:23:37', '166.78.181.113', 5),
(39, 1, '2014-08-04 18:08:15', '50.28.55.90', 12),
(40, 1, '2014-08-04 19:19:03', '92.222.3.13', 73),
(41, 1, '2014-08-04 20:01:33', '54.176.5.146', 27),
(42, 1, '2014-08-04 21:08:31', '71.170.133.143', 15),
(43, 1, '2014-08-04 22:00:19', '23.242.64.49', 20),
(44, 1, '2014-08-04 23:10:48', '66.249.85.93', 2),
(45, 1, '2014-08-05 00:06:18', '69.7.115.126', 3),
(46, 1, '2014-08-05 02:34:54', '88.190.23.224', 2),
(47, 1, '2014-08-05 03:07:45', '149.254.224.238', 6),
(48, 1, '2014-08-05 04:09:51', '107.77.64.79', 9),
(49, 1, '2014-08-05 05:31:06', '94.23.251.171', 8),
(50, 1, '2014-08-05 06:17:21', '150.70.173.41', 4),
(51, 1, '2014-08-05 07:15:40', '50.18.91.166', 3),
(52, 1, '2014-08-05 09:42:59', '66.249.67.47', 1),
(53, 1, '2014-08-05 11:12:59', '2.124.247.105', 4),
(54, 1, '2014-08-05 12:01:18', '172.7.240.55', 3),
(55, 1, '2014-08-05 13:32:58', '5.255.228.41', 3),
(56, 1, '2014-08-05 14:09:23', '69.41.14.130', 10),
(57, 1, '2014-08-05 15:21:21', '66.249.67.47', 53),
(58, 1, '2014-08-05 16:00:11', '107.21.185.75', 19),
(59, 1, '2014-08-05 17:00:37', '69.15.199.198', 7),
(60, 1, '2014-08-05 18:06:13', '99.8.38.146', 7),
(61, 1, '2014-08-05 20:13:31', '74.6.254.133', 10),
(62, 1, '2014-08-05 21:02:07', '205.201.132.14', 6),
(63, 1, '2014-08-05 22:49:21', '64.125.188.25', 2),
(64, 1, '2014-08-06 00:38:41', '66.249.85.93', 4),
(65, 1, '2014-08-06 01:33:14', '8.28.16.254', 6),
(66, 1, '2014-08-06 02:31:03', '66.249.67.73', 7),
(67, 1, '2014-08-06 04:36:50', '37.200.65.208', 2),
(68, 1, '2014-08-06 05:34:51', '23.112.33.168', 6),
(69, 1, '2014-08-06 09:15:41', '166.147.88.40', 3),
(70, 1, '2014-08-06 13:47:10', '5.9.112.67', 3),
(71, 1, '2014-08-06 14:21:41', '5.255.228.41', 1),
(72, 1, '2014-08-06 16:07:45', '54.83.163.76', 3),
(73, 1, '2014-08-06 17:08:19', '107.77.80.86', 77),
(74, 2, '2014-08-06 17:50:58', '173.74.33.52', 2),
(75, 1, '2014-08-06 18:00:57', '184.173.120.245', 33),
(76, 2, '2014-08-06 18:34:56', '64.125.188.25', 1),
(77, 1, '2014-08-06 19:42:48', '5.9.127.154', 4),
(78, 1, '2014-08-06 20:17:00', '23.114.57.72', 4),
(79, 1, '2014-08-06 21:22:59', '66.249.92.58', 4),
(80, 1, '2014-08-06 23:06:31', '5.255.228.44', 4),
(81, 1, '2014-08-07 00:32:29', '5.9.112.68', 3),
(82, 1, '2014-08-07 01:36:18', '66.249.67.47', 1),
(83, 1, '2014-08-07 02:00:59', '66.249.85.93', 16),
(84, 1, '2014-08-07 05:52:01', '66.249.92.58', 1),
(85, 1, '2014-08-07 09:44:56', '66.249.92.45', 1),
(86, 1, '2014-08-07 13:03:22', '64.125.188.25', 1),
(87, 1, '2014-08-07 15:28:01', '69.58.178.59', 92),
(88, 2, '2014-08-07 15:28:03', '69.58.178.59', 1),
(89, 1, '2014-08-07 16:00:55', '184.173.120.245', 24),
(90, 1, '2014-08-07 17:00:59', '212.56.101.85', 32),
(91, 1, '2014-08-07 18:34:41', '36.251.84.159', 10),
(92, 2, '2014-08-07 18:34:43', '36.251.84.159', 1),
(93, 1, '2014-08-07 19:11:47', '121.205.198.149', 7),
(94, 1, '2014-08-07 20:00:16', '166.147.72.148', 13),
(95, 1, '2014-08-07 21:08:52', '2.123.21.174', 8),
(96, 1, '2014-08-07 22:33:55', '50.201.187.132', 2),
(97, 1, '2014-08-08 01:09:29', '5.255.228.44', 1),
(98, 1, '2014-08-08 04:17:53', '54.237.150.220', 5),
(99, 1, '2014-08-08 05:29:48', '66.249.67.73', 2),
(100, 1, '2014-08-08 06:54:40', '66.249.92.45', 1) ;
INSERT INTO `wp_rg_form_view` ( `id`, `form_id`, `date_created`, `ip`, `count`) VALUES
(101, 1, '2014-08-08 07:32:08', '66.249.67.60', 1),
(102, 1, '2014-08-08 08:49:09', '5.255.228.41', 1),
(103, 1, '2014-08-08 09:13:15', '54.224.168.33', 2),
(104, 1, '2014-08-08 10:30:58', '54.224.168.33', 3),
(105, 1, '2014-08-08 13:36:58', '66.249.69.216', 1),
(106, 1, '2014-08-08 14:17:52', '66.249.69.247', 17),
(107, 1, '2014-08-08 15:27:24', '64.134.157.250', 4),
(108, 1, '2014-08-08 19:11:39', '66.249.69.247', 11),
(109, 1, '2014-08-08 20:22:59', '207.244.73.5', 5),
(110, 1, '2014-08-08 21:36:20', '66.249.69.216', 12),
(111, 1, '2014-08-08 22:47:40', '92.58.229.93', 5),
(112, 1, '2014-08-08 23:58:04', '180.110.199.192', 4),
(113, 1, '2014-08-09 01:15:01', '5.9.127.154', 5),
(114, 1, '2014-08-09 03:13:30', '66.249.69.232', 1),
(115, 1, '2014-08-09 05:11:49', '5.255.228.41', 1),
(116, 1, '2014-08-09 11:43:33', '198.101.238.203', 4),
(117, 1, '2014-08-09 12:22:27', '166.78.181.113', 4),
(118, 1, '2014-08-09 14:54:09', '66.249.64.62', 4),
(119, 1, '2014-08-09 17:01:31', '134.225.2.2', 1),
(120, 1, '2014-08-09 20:02:26', '208.43.251.182', 4),
(121, 1, '2014-08-09 21:21:02', '66.249.64.67', 4),
(122, 1, '2014-08-09 22:06:40', '108.184.181.101', 6),
(123, 1, '2014-08-10 01:13:55', '66.249.64.62', 1),
(124, 1, '2014-08-10 02:11:10', '66.249.64.62', 1),
(125, 1, '2014-08-10 06:04:38', '66.249.64.67', 4),
(126, 1, '2014-08-10 07:35:54', '80.79.120.238', 6),
(127, 1, '2014-08-10 12:37:37', '66.249.64.67', 1),
(128, 1, '2014-08-10 13:01:02', '66.249.64.62', 5),
(129, 1, '2014-08-10 16:13:28', '66.249.85.93', 8),
(130, 1, '2014-08-10 17:26:02', '66.249.67.60', 1),
(131, 1, '2014-08-10 18:06:20', '66.249.67.73', 1),
(132, 1, '2014-08-11 04:45:09', '178.154.163.29', 4),
(133, 1, '2014-08-11 05:06:12', '54.221.199.147', 2),
(134, 1, '2014-08-11 07:14:32', '27.150.222.246', 4),
(135, 1, '2014-08-11 08:21:08', '66.249.67.60', 1),
(136, 1, '2014-08-11 13:22:41', '66.249.88.93', 4),
(137, 1, '2014-08-11 14:07:08', '66.249.76.189', 11),
(138, 1, '2014-08-11 15:43:19', '199.16.156.126', 4),
(139, 1, '2014-08-11 16:01:41', '199.116.169.254', 16),
(140, 2, '2014-08-11 16:03:31', '199.116.169.254', 2),
(141, 1, '2014-08-11 17:17:19', '66.249.76.189', 5),
(142, 1, '2014-08-11 18:55:21', '66.249.76.189', 1),
(143, 1, '2014-08-11 19:37:38', '89.145.108.203', 1),
(144, 1, '2014-08-11 23:20:32', '192.99.39.75', 8),
(145, 1, '2014-08-12 01:30:13', '41.184.34.98', 4),
(146, 1, '2014-08-12 02:17:58', '24.117.96.4', 4),
(147, 1, '2014-08-12 03:36:10', '216.52.242.13', 1),
(148, 1, '2014-08-12 04:45:07', '66.249.67.60', 1),
(149, 1, '2014-08-12 05:58:10', '199.16.156.125', 1),
(150, 1, '2014-08-12 07:32:05', '216.52.242.14', 1),
(151, 1, '2014-08-12 13:39:45', '77.87.78.7', 1),
(152, 1, '2014-08-12 14:54:11', '66.249.65.32', 4),
(153, 1, '2014-08-12 16:03:59', '66.220.158.119', 5),
(154, 1, '2014-08-12 18:22:56', '54.189.129.82', 4),
(155, 1, '2014-08-12 19:11:01', '66.249.65.40', 21),
(156, 1, '2014-08-12 20:06:01', '66.249.65.40', 14),
(157, 1, '2014-08-12 22:01:01', '66.249.65.112', 1),
(158, 1, '2014-08-12 23:37:59', '173.74.33.52', 17),
(159, 1, '2014-08-13 00:22:16', '173.74.33.52', 22),
(160, 1, '2014-08-13 01:25:44', '77.87.78.7', 2),
(161, 1, '2014-08-13 03:10:05', '66.249.85.93', 5),
(162, 1, '2014-08-13 08:00:44', '66.249.65.104', 2),
(163, 1, '2014-08-13 09:11:25', '198.27.75.158', 4),
(164, 1, '2014-08-13 16:05:04', '120.147.144.117', 8),
(165, 1, '2014-08-13 19:02:28', '199.16.156.125', 18),
(166, 1, '2014-08-14 00:12:20', '76.10.161.162', 10),
(167, 1, '2014-08-14 04:13:49', '178.154.163.29', 4),
(168, 1, '2014-08-14 05:49:16', '162.216.5.200', 8),
(169, 1, '2014-08-14 07:11:58', '216.52.242.13', 1),
(170, 1, '2014-08-14 13:49:06', '112.18.33.112', 4),
(171, 1, '2014-08-14 14:17:54', '66.249.67.190', 4),
(172, 1, '2014-08-14 15:52:17', '66.196.200.146', 8),
(173, 1, '2014-08-14 16:15:28', '66.249.92.175', 2),
(174, 1, '2014-08-14 17:48:49', '66.249.85.93', 4),
(175, 1, '2014-08-14 23:55:59', '76.31.146.17', 4),
(176, 1, '2014-08-15 00:00:28', '77.87.78.7', 1),
(177, 1, '2014-08-15 01:48:05', '77.87.78.7', 2),
(178, 1, '2014-08-15 02:55:27', '178.154.163.29', 1),
(179, 1, '2014-08-15 03:49:45', '178.154.163.29', 1),
(180, 1, '2014-08-15 07:34:40', '66.249.84.36', 4),
(181, 1, '2014-08-15 08:45:51', '216.52.242.13', 1),
(182, 1, '2014-08-15 09:09:06', '192.99.39.74', 4),
(183, 1, '2014-08-15 13:41:22', '77.87.78.7', 1),
(184, 1, '2014-08-15 14:54:11', '66.249.67.203', 4),
(185, 1, '2014-08-15 22:07:12', '5.255.253.150', 2),
(186, 1, '2014-08-15 23:49:46', '61.155.4.78', 4),
(187, 1, '2014-08-16 00:20:16', '178.154.163.29', 9),
(188, 1, '2014-08-16 08:58:05', '207.46.13.67', 1),
(189, 1, '2014-08-16 10:21:02', '157.55.39.90', 1),
(190, 1, '2014-08-16 12:52:00', '77.87.78.7', 1),
(191, 1, '2014-08-16 17:04:19', '207.46.13.67', 1),
(192, 1, '2014-08-16 18:20:56', '157.55.39.187', 4),
(193, 1, '2014-08-16 19:36:44', '157.55.39.111', 1),
(194, 1, '2014-08-16 20:35:09', '66.249.67.203', 4),
(195, 2, '2014-08-16 20:58:25', '157.55.39.90', 1),
(196, 1, '2014-08-16 21:44:59', '66.249.67.190', 2),
(197, 1, '2014-08-16 22:10:12', '216.52.242.13', 1),
(198, 1, '2014-08-16 23:04:58', '66.249.67.177', 1),
(199, 1, '2014-08-17 00:01:24', '66.249.67.203', 1),
(200, 1, '2014-08-17 02:37:58', '157.55.39.90', 1) ;
INSERT INTO `wp_rg_form_view` ( `id`, `form_id`, `date_created`, `ip`, `count`) VALUES
(201, 1, '2014-08-17 03:25:44', '66.220.152.118', 2),
(202, 1, '2014-08-17 04:23:28', '157.55.39.90', 1),
(203, 1, '2014-08-17 13:01:04', '66.249.64.17', 2),
(204, 1, '2014-08-17 14:17:56', '66.249.64.27', 20),
(205, 1, '2014-08-17 15:11:03', '178.154.163.29', 2),
(206, 1, '2014-08-17 19:35:57', '66.51.177.86', 5),
(207, 1, '2014-08-17 20:16:16', '66.249.64.27', 7),
(208, 1, '2014-08-18 09:29:59', '66.249.64.27', 4),
(209, 1, '2014-08-18 10:50:44', '66.249.64.17', 1),
(210, 1, '2014-08-18 11:42:05', '197.149.64.18', 4),
(211, 1, '2014-08-18 12:34:59', '66.249.65.104', 4),
(212, 1, '2014-08-18 13:14:21', '66.249.65.104', 1),
(213, 1, '2014-08-18 16:12:42', '178.154.163.29', 5),
(214, 1, '2014-08-18 19:04:26', '66.249.65.104', 1),
(215, 1, '2014-08-18 20:26:06', '61.155.4.78', 9),
(216, 1, '2014-08-18 21:57:42', '66.249.65.112', 4),
(217, 1, '2014-08-18 22:47:04', '107.178.200.56', 5),
(218, 1, '2014-08-19 02:22:59', '199.59.148.210', 4),
(219, 1, '2014-08-19 05:42:48', '192.99.39.82', 4),
(220, 1, '2014-08-19 12:28:56', '77.87.78.7', 2),
(221, 1, '2014-08-19 14:27:26', '66.249.85.93', 4),
(222, 1, '2014-08-19 20:11:33', '208.43.245.244', 4),
(223, 1, '2014-08-19 22:31:18', '199.16.156.126', 1),
(224, 1, '2014-08-20 00:33:22', '77.87.78.7', 1),
(225, 1, '2014-08-20 05:46:54', '62.219.8.233', 4),
(226, 1, '2014-08-20 07:52:59', '192.187.126.42', 2),
(227, 1, '2014-08-20 08:43:56', '65.181.126.166', 4),
(228, 1, '2014-08-20 10:56:28', '192.114.71.13', 27),
(229, 2, '2014-08-20 10:57:08', '192.114.71.13', 1),
(230, 1, '2014-08-20 12:07:14', '64.246.178.34', 4),
(231, 1, '2014-08-20 14:17:57', '66.249.64.22', 4),
(232, 1, '2014-08-20 16:37:01', '199.116.169.254', 12),
(233, 1, '2014-08-21 03:21:17', '66.249.85.93', 4),
(234, 2, '2014-08-21 11:09:28', '66.249.64.17', 1),
(235, 1, '2014-08-21 11:48:05', '58.212.43.165', 4),
(236, 1, '2014-08-21 13:49:52', '216.52.242.13', 1),
(237, 1, '2014-08-21 15:06:30', '199.16.156.126', 3),
(238, 1, '2014-08-21 17:05:46', '199.59.148.209', 1),
(239, 1, '2014-08-21 19:49:57', '65.55.213.45', 4),
(240, 1, '2014-08-21 20:40:27', '199.16.156.125', 1),
(241, 1, '2014-08-22 14:34:05', '127.0.0.1', 48),
(242, 1, '2014-08-22 15:04:21', '127.0.0.1', 184),
(243, 1, '2014-08-22 16:00:39', '127.0.0.1', 99),
(244, 1, '2014-08-22 17:14:18', '127.0.0.1', 34),
(245, 1, '2014-08-22 18:31:08', '127.0.0.1', 15),
(246, 1, '2014-08-22 19:00:52', '127.0.0.1', 61),
(247, 2, '2014-08-22 19:06:06', '127.0.0.1', 10),
(248, 1, '2014-08-22 20:05:27', '127.0.0.1', 78),
(249, 1, '2014-08-22 22:14:29', '127.0.0.1', 41),
(250, 1, '2014-08-23 00:27:38', '127.0.0.1', 14),
(251, 1, '2014-08-23 01:00:37', '127.0.0.1', 41),
(252, 1, '2014-08-23 02:14:31', '127.0.0.1', 6),
(253, 1, '2014-09-02 02:37:18', '127.0.0.1', 41),
(254, 3, '2014-09-02 02:37:31', '127.0.0.1', 3),
(255, 3, '2014-09-02 13:18:54', '127.0.0.1', 1),
(256, 1, '2014-09-02 13:18:59', '127.0.0.1', 29),
(257, 1, '2014-09-02 15:01:29', '127.0.0.1', 65),
(258, 3, '2014-09-02 15:01:54', '127.0.0.1', 7),
(259, 3, '2014-09-02 16:03:58', '127.0.0.1', 1),
(260, 1, '2014-09-02 16:19:16', '127.0.0.1', 8),
(261, 3, '2014-09-02 18:29:38', '127.0.0.1', 6),
(262, 1, '2014-09-02 18:34:44', '127.0.0.1', 24),
(263, 3, '2014-09-02 19:14:59', '127.0.0.1', 1),
(264, 1, '2014-09-02 19:24:36', '127.0.0.1', 48),
(265, 1, '2014-09-03 13:13:51', '127.0.0.1', 8) ;

#
# End of data contents of table `wp_rg_form_view`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_lead`
#

DROP TABLE IF EXISTS `wp_rg_lead`;


#
# Table structure of table `wp_rg_lead`
#

CREATE TABLE `wp_rg_lead` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `form_id` mediumint(8) unsigned NOT NULL,
  `post_id` bigint(20) unsigned DEFAULT NULL,
  `date_created` datetime NOT NULL,
  `is_starred` tinyint(1) NOT NULL DEFAULT '0',
  `is_read` tinyint(1) NOT NULL DEFAULT '0',
  `ip` varchar(39) NOT NULL,
  `source_url` varchar(200) NOT NULL DEFAULT '',
  `user_agent` varchar(250) NOT NULL DEFAULT '',
  `currency` varchar(5) DEFAULT NULL,
  `payment_status` varchar(15) DEFAULT NULL,
  `payment_date` datetime DEFAULT NULL,
  `payment_amount` decimal(19,2) DEFAULT NULL,
  `payment_method` varchar(30) DEFAULT NULL,
  `transaction_id` varchar(50) DEFAULT NULL,
  `is_fulfilled` tinyint(1) DEFAULT NULL,
  `created_by` bigint(20) unsigned DEFAULT NULL,
  `transaction_type` tinyint(1) DEFAULT NULL,
  `status` varchar(20) NOT NULL DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `form_id` (`form_id`),
  KEY `status` (`status`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_lead`
#
INSERT INTO `wp_rg_lead` ( `id`, `form_id`, `post_id`, `date_created`, `is_starred`, `is_read`, `ip`, `source_url`, `user_agent`, `currency`, `payment_status`, `payment_date`, `payment_amount`, `payment_method`, `transaction_id`, `is_fulfilled`, `created_by`, `transaction_type`, `status`) VALUES
(1, 1, NULL, '2014-06-17 19:41:01', 0, 0, '127.0.0.1', 'http://dev.dev.dorails.com/subscribe/?ckcachecontrol=1403033496', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'trash'),
(2, 1, NULL, '2014-06-17 20:15:47', 0, 0, '127.0.0.1', 'http://dev.dev.dorails.com/?ckcachecontrol=1403033496', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'trash'),
(3, 1, NULL, '2014-06-17 22:16:13', 0, 0, '172.4.181.220', 'http://dev.dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'trash'),
(5, 1, NULL, '2014-06-17 22:26:47', 0, 0, '172.4.181.220', 'http://dev.dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'trash'),
(7, 1, NULL, '2014-06-17 22:32:15', 0, 0, '172.4.181.220', 'http://dev.dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'trash'),
(8, 1, NULL, '2014-06-17 22:34:13', 0, 0, '172.4.181.220', 'http://dev.dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'trash'),
(9, 1, NULL, '2014-06-17 22:40:45', 0, 0, '172.4.181.220', 'http://dev.dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'active'),
(10, 1, NULL, '2014-08-05 03:09:54', 0, 0, '149.254.224.238', 'http://dev.dorails.com/', 'Mozilla/5.0 (Linux; Android 4.1.2; GT-I8190N Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.122 Mobile Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'active'),
(11, 1, NULL, '2014-08-05 05:49:44', 0, 0, '173.74.33.52', 'http://dev.dorails.com/get-going-with-git/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:31.0) Gecko/20100101 Firefox/31.0', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'active'),
(12, 1, NULL, '2014-08-05 21:10:49', 0, 0, '23.114.57.72', 'http://dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'active'),
(13, 1, NULL, '2014-08-05 21:22:01', 0, 0, '23.114.57.72', 'http://dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'active'),
(14, 1, NULL, '2014-08-06 18:14:39', 0, 0, '23.114.57.72', 'http://dev.dorails.com/hop-on-the-github-bandwagon/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'active'),
(15, 1, NULL, '2014-08-06 18:36:16', 0, 0, '23.114.57.72', 'http://dev.dorails.com/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, 'active'),
(16, 1, NULL, '2014-08-12 20:00:54', 0, 0, '66.68.44.162', 'http://dev.dorails.com/hop-on-the-github-bandwagon/', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36', 'USD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'active') ;

#
# End of data contents of table `wp_rg_lead`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_lead_detail`
#

DROP TABLE IF EXISTS `wp_rg_lead_detail`;


#
# Table structure of table `wp_rg_lead_detail`
#

CREATE TABLE `wp_rg_lead_detail` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `lead_id` int(10) unsigned NOT NULL,
  `form_id` mediumint(8) unsigned NOT NULL,
  `field_number` float NOT NULL,
  `value` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `form_id` (`form_id`),
  KEY `lead_id` (`lead_id`),
  KEY `lead_field_number` (`lead_id`,`field_number`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_lead_detail`
#
INSERT INTO `wp_rg_lead_detail` ( `id`, `lead_id`, `form_id`, `field_number`, `value`) VALUES
(2, 1, 1, '3', 'emily@tyrichards.com'),
(4, 2, 1, '3', 'tyrichards@me.com'),
(6, 3, 1, '3', 'tyrichards@me.com'),
(13, 5, 1, '3', 'tyrichards@me.com'),
(20, 7, 1, '3', 'tyrichards@me.com'),
(22, 8, 1, '3', 'tyrichards@me.com'),
(24, 9, 1, '3', 'tyrichards@me.com'),
(26, 10, 1, '3', 'sthomas03@hotmail.com'),
(28, 11, 1, '3', 'nickme@gher.com'),
(30, 12, 1, '3', 'ty@paradoxsites.com'),
(32, 13, 1, '3', 'me@tyrichards.com'),
(33, 14, 1, '4', 'Ty'),
(35, 14, 1, '3', 'ty@paradoxsites.com'),
(36, 15, 1, '4', 'Ty'),
(38, 15, 1, '3', 'tyrichards@me.com'),
(39, 16, 1, '4', 'Ben'),
(40, 16, 1, '3', 'ben@bjmfactory.com') ;

#
# End of data contents of table `wp_rg_lead_detail`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_lead_detail_long`
#

DROP TABLE IF EXISTS `wp_rg_lead_detail_long`;


#
# Table structure of table `wp_rg_lead_detail_long`
#

CREATE TABLE `wp_rg_lead_detail_long` (
  `lead_detail_id` bigint(20) unsigned NOT NULL,
  `value` longtext,
  PRIMARY KEY (`lead_detail_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_lead_detail_long`
#

#
# End of data contents of table `wp_rg_lead_detail_long`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_lead_meta`
#

DROP TABLE IF EXISTS `wp_rg_lead_meta`;


#
# Table structure of table `wp_rg_lead_meta`
#

CREATE TABLE `wp_rg_lead_meta` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `form_id` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `lead_id` bigint(20) unsigned NOT NULL,
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`id`),
  KEY `meta_key` (`meta_key`),
  KEY `lead_id` (`lead_id`),
  KEY `form_id_meta_key` (`form_id`,`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_lead_meta`
#
INSERT INTO `wp_rg_lead_meta` ( `id`, `form_id`, `lead_id`, `meta_key`, `meta_value`) VALUES
(1, 1, 2, 'user_registration_feed_id', '1'),
(2, 1, 2, 'mailchimp_is_subscribed', '1'),
(3, 1, 3, 'user_registration_feed_id', '1'),
(4, 1, 3, 'mailchimp_is_subscribed', '1'),
(7, 1, 5, 'user_registration_feed_id', '1'),
(8, 1, 5, 'mailchimp_is_subscribed', '1'),
(11, 1, 7, 'mailchimp_is_subscribed', '1'),
(12, 1, 8, 'mailchimp_is_subscribed', '1'),
(13, 1, 9, 'mailchimp_is_subscribed', '1'),
(14, 1, 10, 'mailchimp_is_subscribed', '1'),
(15, 1, 11, 'mailchimp_is_subscribed', '1'),
(16, 1, 12, 'mailchimp_is_subscribed', '1'),
(17, 1, 13, 'mailchimp_is_subscribed', '1'),
(18, 1, 14, 'mailchimp_is_subscribed', '1'),
(19, 1, 15, 'mailchimp_is_subscribed', '1'),
(20, 1, 16, 'mailchimp_is_subscribed', '1') ;

#
# End of data contents of table `wp_rg_lead_meta`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_lead_notes`
#

DROP TABLE IF EXISTS `wp_rg_lead_notes`;


#
# Table structure of table `wp_rg_lead_notes`
#

CREATE TABLE `wp_rg_lead_notes` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `lead_id` int(10) unsigned NOT NULL,
  `user_name` varchar(250) DEFAULT NULL,
  `user_id` bigint(20) DEFAULT NULL,
  `date_created` datetime NOT NULL,
  `value` longtext,
  `note_type` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `lead_id` (`lead_id`),
  KEY `lead_user_key` (`lead_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_lead_notes`
#

#
# End of data contents of table `wp_rg_lead_notes`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_mailchimp`
#

DROP TABLE IF EXISTS `wp_rg_mailchimp`;


#
# Table structure of table `wp_rg_mailchimp`
#

CREATE TABLE `wp_rg_mailchimp` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `form_id` mediumint(8) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `meta` longtext,
  PRIMARY KEY (`id`),
  KEY `form_id` (`form_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_mailchimp`
#
INSERT INTO `wp_rg_mailchimp` ( `id`, `form_id`, `is_active`, `meta`) VALUES
(1, 1, 1, 'a:10:{s:12:"double_optin";b:0;s:15:"contact_list_id";s:10:"10300bb940";s:17:"contact_list_name";s:14:"Rails Vitamins";s:6:"groups";a:0:{}s:9:"field_map";a:3:{s:5:"EMAIL";s:1:"3";s:5:"FNAME";s:1:"4";s:5:"LNAME";s:1:"5";}s:13:"welcome_email";b:1;s:13:"optin_enabled";b:0;s:14:"optin_field_id";s:0:"";s:14:"optin_operator";s:0:"";s:11:"optin_value";s:0:"";}'),
(2, 2, 1, 'a:10:{s:12:"double_optin";b:0;s:15:"contact_list_id";s:10:"10300bb940";s:17:"contact_list_name";s:14:"Rails Vitamins";s:6:"groups";a:0:{}s:9:"field_map";a:3:{s:5:"EMAIL";s:1:"3";s:5:"FNAME";s:1:"1";s:5:"LNAME";s:1:"2";}s:13:"welcome_email";b:0;s:13:"optin_enabled";b:1;s:14:"optin_field_id";s:1:"6";s:14:"optin_operator";s:2:"is";s:11:"optin_value";s:43:"I want to recieve Rails Vitamins newsletter";}'),
(3, 3, 1, 'a:10:{s:12:"double_optin";b:0;s:15:"contact_list_id";s:10:"b3309c067e";s:17:"contact_list_name";s:11:"Rails Curve";s:6:"groups";a:0:{}s:9:"field_map";a:3:{s:5:"EMAIL";s:1:"3";s:5:"FNAME";s:1:"4";s:5:"LNAME";s:1:"5";}s:13:"welcome_email";b:0;s:13:"optin_enabled";b:0;s:14:"optin_field_id";s:0:"";s:14:"optin_operator";s:0:"";s:11:"optin_value";s:0:"";}'),
(4, 3, 1, 'a:10:{s:12:"double_optin";b:0;s:15:"contact_list_id";s:10:"10300bb940";s:17:"contact_list_name";s:14:"Rails Vitamins";s:6:"groups";a:0:{}s:9:"field_map";a:3:{s:5:"EMAIL";s:1:"3";s:5:"FNAME";s:1:"4";s:5:"LNAME";s:1:"5";}s:13:"welcome_email";b:0;s:13:"optin_enabled";b:0;s:14:"optin_field_id";s:0:"";s:14:"optin_operator";s:0:"";s:11:"optin_value";s:0:"";}'),
(5, 4, 1, 'a:10:{s:12:"double_optin";b:0;s:15:"contact_list_id";s:10:"e2db7fc8ec";s:17:"contact_list_name";s:31:"Rails Curve Pre-order Customers";s:6:"groups";a:0:{}s:9:"field_map";a:3:{s:5:"EMAIL";s:1:"3";s:5:"FNAME";s:1:"1";s:5:"LNAME";s:1:"2";}s:13:"welcome_email";b:0;s:13:"optin_enabled";b:0;s:14:"optin_field_id";s:0:"";s:14:"optin_operator";s:0:"";s:11:"optin_value";s:0:"";}') ;

#
# End of data contents of table `wp_rg_mailchimp`
# --------------------------------------------------------



#
# Delete any existing table `wp_rg_userregistration`
#

DROP TABLE IF EXISTS `wp_rg_userregistration`;


#
# Table structure of table `wp_rg_userregistration`
#

CREATE TABLE `wp_rg_userregistration` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `form_id` mediumint(8) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `meta` longtext,
  PRIMARY KEY (`id`),
  KEY `form_id` (`form_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_rg_userregistration`
#

#
# End of data contents of table `wp_rg_userregistration`
# --------------------------------------------------------



#
# Delete any existing table `wp_signups`
#

DROP TABLE IF EXISTS `wp_signups`;


#
# Table structure of table `wp_signups`
#

CREATE TABLE `wp_signups` (
  `signup_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `domain` varchar(200) NOT NULL DEFAULT '',
  `path` varchar(100) NOT NULL DEFAULT '',
  `title` longtext NOT NULL,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `activated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `active` tinyint(1) NOT NULL DEFAULT '0',
  `activation_key` varchar(50) NOT NULL DEFAULT '',
  `meta` longtext,
  PRIMARY KEY (`signup_id`),
  KEY `activation_key` (`activation_key`),
  KEY `user_email` (`user_email`),
  KEY `user_login_email` (`user_login`,`user_email`),
  KEY `domain_path` (`domain`,`path`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_signups`
#

#
# End of data contents of table `wp_signups`
# --------------------------------------------------------



#
# Delete any existing table `wp_term_relationships`
#

DROP TABLE IF EXISTS `wp_term_relationships`;


#
# Table structure of table `wp_term_relationships`
#

CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_term_relationships`
#
INSERT INTO `wp_term_relationships` ( `object_id`, `term_taxonomy_id`, `term_order`) VALUES
(19, 3, 0),
(20, 3, 0),
(21, 3, 0),
(42, 5, 0),
(52, 5, 0),
(52, 6, 0),
(73, 5, 0),
(88, 5, 0),
(98, 5, 0),
(114, 2, 0),
(115, 2, 0),
(137, 4, 0),
(137, 5, 0),
(137, 6, 0),
(181, 5, 0),
(188, 5, 0),
(209, 2, 0),
(213, 2, 0),
(227, 5, 0),
(233, 5, 0),
(238, 5, 0),
(274, 3, 0) ;

#
# End of data contents of table `wp_term_relationships`
# --------------------------------------------------------



#
# Delete any existing table `wp_term_taxonomy`
#

DROP TABLE IF EXISTS `wp_term_taxonomy`;


#
# Table structure of table `wp_term_taxonomy`
#

CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_term_taxonomy`
#
INSERT INTO `wp_term_taxonomy` ( `term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES
(1, 1, 'category', '', 0, 0),
(2, 2, 'nav_menu', '', 0, 4),
(3, 3, 'nav_menu', '', 0, 4),
(4, 4, 'category', '', 0, 1),
(5, 5, 'category', '', 0, 11),
(6, 6, 'category', '', 0, 2) ;

#
# End of data contents of table `wp_term_taxonomy`
# --------------------------------------------------------



#
# Delete any existing table `wp_terms`
#

DROP TABLE IF EXISTS `wp_terms`;


#
# Table structure of table `wp_terms`
#

CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_terms`
#
INSERT INTO `wp_terms` ( `term_id`, `name`, `slug`, `term_group`) VALUES
(1, 'Uncategorized', 'uncategorized', 0),
(2, 'Header Menu', 'header-menu', 0),
(3, 'Footer Menu', 'footer-menu', 0),
(4, 'Bootstrapping', 'bootstrapping', 0),
(5, 'Development', 'development', 0),
(6, 'Design', 'design', 0) ;

#
# End of data contents of table `wp_terms`
# --------------------------------------------------------



#
# Delete any existing table `wp_usermeta`
#

DROP TABLE IF EXISTS `wp_usermeta`;


#
# Table structure of table `wp_usermeta`
#

CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_usermeta`
#
INSERT INTO `wp_usermeta` ( `umeta_id`, `user_id`, `meta_key`, `meta_value`) VALUES
(1, 1, 'first_name', ''),
(2, 1, 'last_name', ''),
(3, 1, 'nickname', 'Ty Richards'),
(4, 1, 'description', ''),
(5, 1, 'rich_editing', 'true'),
(6, 1, 'comment_shortcuts', 'false'),
(7, 1, 'admin_color', 'fresh'),
(8, 1, 'use_ssl', '0'),
(9, 1, 'show_admin_bar_front', 'false'),
(10, 1, 'wp_capabilities', 'a:1:{s:13:"administrator";b:1;}'),
(11, 1, 'wp_user_level', '10'),
(12, 1, 'dismissed_wp_pointers', 'wp350_media,wp360_revisions,wp360_locks,wp390_widgets,disqus_settings_pointer'),
(13, 1, 'show_welcome_panel', '1'),
(14, 1, 'wp_dashboard_quick_press_last_post_id', '208'),
(15, 1, 'wp_user-settings', 'editor=tinymce&hidetb=1&wplink=1&libraryContent=browse&ed_size=488&align=center&woosidebarsshowadvanced=1&cats=pop'),
(16, 1, 'wp_user-settings-time', '1409775798'),
(17, 1, 'managenav-menuscolumnshidden', 'a:4:{i:0;s:11:"link-target";i:1;s:11:"css-classes";i:2;s:3:"xfn";i:3;s:11:"description";}'),
(18, 1, 'metaboxhidden_nav-menus', 'a:3:{i:0;s:8:"add-post";i:1;s:12:"add-post_tag";i:2;s:15:"add-post_format";}'),
(19, 1, 'nav_menu_recently_edited', '3') ;

#
# End of data contents of table `wp_usermeta`
# --------------------------------------------------------



#
# Delete any existing table `wp_users`
#

DROP TABLE IF EXISTS `wp_users`;


#
# Table structure of table `wp_users`
#

CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;


#
# Data contents of table `wp_users`
#
INSERT INTO `wp_users` ( `ID`, `user_login`, `user_pass`, `user_nicename`, `user_email`, `user_url`, `user_registered`, `user_activation_key`, `user_status`, `display_name`) VALUES
(1, 'Ty Richards', '$P$B7YJYcaSfSoTRWCWOQqW/zL45x0K9o0', 'ty-richards', 'me@tyrichards.com', '', '2014-06-16 16:07:20', '', 0, 'Ty Richards') ;

#
# End of data contents of table `wp_users`
# --------------------------------------------------------

#
# Add constraints back in
#

